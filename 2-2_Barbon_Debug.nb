(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    240329,       5289]
NotebookOptionsPosition[    234303,       5099]
NotebookOutlinePosition[    234659,       5115]
CellTagsIndexPosition[    234616,       5112]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.700615046551634*^9, 3.700615048217183*^9}},
 ExpressionUUID -> "88d8a3f3-76be-47cc-b1f4-85a566a408b2"],

Cell[CellGroupData[{

Cell["Kernels Control", "Subsubsection",
 CellChangeTimes->{{3.701143871012416*^9, 3.701143877369876*^9}},
 ExpressionUUID -> "8f155bd1-d4ba-4b2c-afe4-78ef232a9faa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LaunchKernels", "[", "8", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701040405118518*^9, 3.701040410990963*^9}},
 ExpressionUUID -> "e61b8f17-ffd0-429c-bd3e-1d58f3ecbf2f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083145483418`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083212383523`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083217707386`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083217837477`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"PacletInstall", "::", "lock"}], "MessageName"], " ", ":", 
  "  ", "\<\"The paclet installation cannot proceed at this time because \
another paclet operation is being performed by a different instance of the \
Wolfram Language. Try the operation again.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083218107705`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], " ", ":", 
  "  ", "\<\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CloudObject`\\\\\\\"\\\"}]\\).\"\>"}]], "Message",\
 "MSG",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083218227787`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083218488016`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083218738194`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7026083218848267`*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.702608321909848*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"1", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"2", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"3", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"4", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"5", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"6", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"7", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"8", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.701243848369397*^9, 3.70124422104222*^9, 
  3.701244255736156*^9, 3.7012448811169567`*^9, 3.7012450212305*^9, 
  3.701245104939992*^9, 3.701256357456891*^9, 3.7012583435535765`*^9, 
  3.70130828591667*^9, 3.7013087846532507`*^9, 3.7013126431591663`*^9, 
  3.7013169896023903`*^9, 3.701406451095324*^9, 3.701836520880018*^9, 
  3.701841358588975*^9, 3.701844271770601*^9, 3.7025231831515975`*^9, 
  3.702525756944033*^9, 3.7025630475024815`*^9, 3.702570464747449*^9, 
  3.702608322010928*^9},
 ExpressionUUID -> "7f9b059a-8720-42a5-a273-3ab3bf76a29c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CloseKernels", "[", 
  RowBox[{"Kernels", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.701143806805869*^9, 3.701143833399728*^9}},
 ExpressionUUID -> "f984e74a-fa24-4fe8-ae0f-b46675d30f7b"],

Cell[BoxData[
 RowBox[{"Kernels", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7011438442224407`*^9, 3.70114384609762*^9}, 
   3.701219755621172*^9},
 ExpressionUUID -> "fc38fcde-b89c-45a5-8e7a-027046cacbef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main", "Subsection",
 CellChangeTimes->{{3.701143891323618*^9, 3.701143891995158*^9}},
 ExpressionUUID -> "a3bb8543-7b0d-4125-813f-acf1628fe6b7"],

Cell[CellGroupData[{

Cell["Declaration", "Subsubsection",
 CellChangeTimes->{{3.70114609361065*^9, 3.701146097112729*^9}},
 ExpressionUUID -> "49fe30d4-248c-4327-91ec-896903197394"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "stop"}], "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700538891575816*^9, 3.7005388989218407`*^9}, {
   3.700609313377273*^9, 3.700609317155711*^9}, {3.700609393816965*^9, 
   3.700609431204124*^9}, 3.7006170584226027`*^9, {3.701003204478983*^9, 
   3.701003210780403*^9}},
 ExpressionUUID -> "790c7ef5-aa98-4e43-94fe-5e16ca79663b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"On", "[", 
    RowBox[{"General", "::", "stop"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.7012420655709467`*^9},
 ExpressionUUID -> "2f3979b5-ee78-416b-a40b-1a6a988087d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"$OperatingSystem", "\[Equal]", "\"\<Windows\>\""}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dir", "=", "\"\<D:/Documents/2-d-data\>\""}], ";"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "dir", "=", "\"\</home/huangys/mount/DATA/Documents/2-d-data\>\""}], 
      ";"}], "}"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701256123153513*^9, 3.7012561666454077`*^9}, {
  3.7012562559340076`*^9, 3.701256334334255*^9}},
 ExpressionUUID -> "a5d9c1d4-036e-461f-87e2-bef28b3da3ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Kernel1", "[", "\[Phi]n_", "]"}], "[", 
    RowBox[{"x_", "?", "NumberQ"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Phi]n", "[", "p", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"p", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Kernel2", "[", 
     RowBox[{"\[Phi]n_", ",", "\[Phi]m_"}], "]"}], "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", 
     RowBox[{"z_", "?", "NumberQ"}], ",", 
     RowBox[{"\[Omega]_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Phi]n", "[", "y", "]"}], 
       RowBox[{"\[Phi]m", "[", 
        RowBox[{
         FractionBox["z", "\[Omega]"], "y"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.701146758781637*^9, 3.701146816706005*^9}, {
  3.701837239039401*^9, 3.701837378320114*^9}},
 ExpressionUUID -> "15b9c630-4351-48fd-84ac-69a0558c257d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "\[Omega]_", "]"}], "[", 
   RowBox[{"\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"1", "-", "\[Omega]"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]1", "[", "x", "]"}], 
       RowBox[{"\[Phi]2", "[", 
        FractionBox["x", "\[Omega]"], "]"}], 
       FractionBox[
        RowBox[{"\[Phi]3", "[", "p", "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"p", "-", 
           FractionBox[
            RowBox[{"x", "-", "\[Omega]"}], 
            RowBox[{"1", "-", "\[Omega]"}]]}], ")"}], "2"]]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "\[Omega]"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "\[Omega]"], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]1", "[", "x", "]"}], 
       RowBox[{"\[Phi]3", "[", 
        FractionBox[
         RowBox[{"x", "-", "\[Omega]"}], 
         RowBox[{"1", "-", "\[Omega]"}]], "]"}], 
       FractionBox[
        RowBox[{"\[Phi]2", "[", "p", "]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"p", "-", 
           FractionBox["x", "\[Omega]"]}], ")"}], "2"]]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "\[Omega]", ",", "1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}]}], "]"}], 
    RowBox[{"(*", 
     RowBox[{"r1", "=", "1"}], "*)"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700533042535844*^9, 3.700533061165717*^9}, {
   3.700533155100226*^9, 3.700533222272328*^9}, {3.700533633140586*^9, 
   3.700533688092813*^9}, {3.700535623782934*^9, 3.7005356381796494`*^9}, {
   3.700536573860199*^9, 3.700536760706765*^9}, {3.700537878849258*^9, 
   3.7005378871957912`*^9}, 3.7005394691358967`*^9, {3.7010009131250143`*^9, 
   3.7010009256452436`*^9}, 3.7010028034512873`*^9, {3.701002848546701*^9, 
   3.701002850642902*^9}, 3.701013663492639*^9, {3.701014359004685*^9, 
   3.7010143643492737`*^9}, {3.701146623474885*^9, 3.7011466420631723`*^9}, {
   3.701156858234881*^9, 3.7011568714601307`*^9}, {3.701311599261119*^9, 
   3.701311615028981*^9}, {3.701316904704667*^9, 3.701316913757595*^9}},
 ExpressionUUID -> "a6981b63-02fb-4a03-a54c-3b1c37160f91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBBplusDD", "[", 
    RowBox[{"z_", ",", "\[Omega]_"}], "]"}], "[", 
   RowBox[{"\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[DoubleStruckCapitalC]"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"\[Omega]", "-", "z"}], "]"}]}], 
      FractionBox[
       RowBox[{"1", "-", "\[Omega]"}], "z"], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]2", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", "\[Omega]"}], 
            RowBox[{"1", "-", "z"}]], "x"}], "]"}], 
         RowBox[{"\[Phi]4", "[", "x", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"\[Phi]1", "[", "y", "]"}], 
           RowBox[{"\[Phi]3", "[", 
            RowBox[{
             FractionBox["z", "\[Omega]"], "y"}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"y", "-", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "x"}], ")"}], 
                FractionBox[
                 RowBox[{"1", "-", "\[Omega]"}], "z"]}]}], ")"}]}], ")"}], 
           "2"]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"z", "-", "\[Omega]"}], "]"}], 
      FractionBox[
       RowBox[{"1", "-", "z"}], "\[Omega]"], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]4", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "-", "z"}], 
            RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
         RowBox[{"\[Phi]2", "[", "x", "]"}], 
         FractionBox[
          RowBox[{
           RowBox[{"\[Phi]3", "[", "y", "]"}], 
           RowBox[{"\[Phi]1", "[", 
            RowBox[{
             FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"y", "-", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "x"}], ")"}], 
                FractionBox[
                 RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
           "2"]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701836184222377*^9, 3.7018361985631557`*^9}, {
  3.7018364911158247`*^9, 3.7018364967228117`*^9}, {3.7018370641678944`*^9, 
  3.7018371768253884`*^9}, {3.7018379906961966`*^9, 3.701838106400057*^9}, {
  3.701838297075264*^9, 3.701838336224843*^9}, {3.7018395197839427`*^9, 
  3.7018395496542892`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"\[Beta]", "=", 
    RowBox[{"1", " ", "unit"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nx", "=", "500"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "size", " ", "of", " ", "the", " ", "working", " ", "matrix"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"the", " ", "mass", " ", "unit"}], ",", 
    RowBox[{
     RowBox[{"definition", " ", 
      SuperscriptBox["\[Beta]", "2"]}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["g", "2"], 
       RowBox[{"2", "Pi"}]], "Nc"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"m1", "=", 
     RowBox[{"3.2", "*", "\[Beta]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "m1", " ", "and", " ", "m2", " ", "are", " ", "the", " ", "bare", " ", 
       "masses", " ", "of", " ", "the", " ", "quark", " ", "and", " ", "the", 
       " ", "anti"}], "-", 
      RowBox[{"quark", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"m2", "=", 
     RowBox[{"3.2", "*", "\[Beta]"}]}], ";"}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656316908677919*^9, 3.656316955757666*^9}, {
   3.656386441333725*^9, 3.656386506094369*^9}, {3.656386543964497*^9, 
   3.656386581412278*^9}, {3.656642892958535*^9, 3.656642896886086*^9}, {
   3.6566429625184937`*^9, 3.656642962933879*^9}, {3.656736162785871*^9, 
   3.6567361979139757`*^9}, {3.6567362478735933`*^9, 3.656736310601686*^9}, 
   3.656803242918009*^9, 3.656803413706811*^9, {3.6572295478159237`*^9, 
   3.657229547990348*^9}, {3.657323549090542*^9, 3.65732356921782*^9}, {
   3.657323790719941*^9, 3.657323800650324*^9}, {3.657323831679906*^9, 
   3.657323880934112*^9}, {3.6573239397601233`*^9, 3.657323940182811*^9}, {
   3.6573241974141893`*^9, 3.657324198196575*^9}, {3.657332871505336*^9, 
   3.657332872168791*^9}, {3.65733578469104*^9, 3.6573357859466143`*^9}, {
   3.657343041141307*^9, 3.6573430507805853`*^9}, {3.657343162860622*^9, 
   3.6573431633221083`*^9}, {3.657343402322651*^9, 3.657343415265828*^9}, {
   3.657343797648039*^9, 3.657343800671328*^9}, {3.657344079781945*^9, 
   3.657344083253229*^9}, {3.657344164125094*^9, 3.6573441713245983`*^9}, {
   3.657344588930624*^9, 3.6573446206897097`*^9}, {3.6573446887216253`*^9, 
   3.657344690169435*^9}, {3.657431652544628*^9, 3.657431664583353*^9}, {
   3.657431974916284*^9, 3.657431991181251*^9}, {3.6575097099322577`*^9, 
   3.6575097244124527`*^9}, {3.657783161314728*^9, 3.657783244337932*^9}, {
   3.6577832966343317`*^9, 3.657783326896006*^9}, {3.657783600040719*^9, 
   3.657783633794654*^9}, {3.657783677159976*^9, 3.657783680911355*^9}, {
   3.657783963781493*^9, 3.657783999212841*^9}, {3.657784443770296*^9, 
   3.657784492938223*^9}, {3.6577845515305443`*^9, 3.65778455986611*^9}, {
   3.6577848473920307`*^9, 3.657784849910719*^9}, {3.657784965358389*^9, 
   3.657784969782008*^9}, {3.657785051286543*^9, 3.6577850818641644`*^9}, {
   3.6577854966918*^9, 3.657785499107218*^9}, {3.6577855802587442`*^9, 
   3.657785582050239*^9}, {3.657785618114484*^9, 3.657785620345777*^9}, {
   3.657785769322316*^9, 3.657785916399477*^9}, {3.657878566215637*^9, 
   3.6578785736543493`*^9}, {3.6578788110540447`*^9, 
   3.6578788127416983`*^9}, {3.657879225106694*^9, 3.6578792313930264`*^9}, {
   3.6590521744255466`*^9, 3.659052230665243*^9}, {3.6590522733522453`*^9, 
   3.659052280752428*^9}, {3.6590525216247787`*^9, 3.659052557902446*^9}, {
   3.6590657421860723`*^9, 3.659065742433242*^9}, {3.659066207534997*^9, 
   3.65906625984728*^9}, {3.6593228354600067`*^9, 3.659322835841441*^9}, {
   3.662079686039317*^9, 3.662079689190515*^9}, {3.662178648546401*^9, 
   3.6621786495853767`*^9}, {3.7004899913610764`*^9, 3.700489998018531*^9}, {
   3.700541762101472*^9, 3.700541769847172*^9}, {3.700547846026347*^9, 
   3.7005478486101217`*^9}, {3.700549095258568*^9, 3.7005490971020517`*^9}, {
   3.700573389277364*^9, 3.700573400767294*^9}, {3.700608541716086*^9, 
   3.7006085459557323`*^9}, {3.700615039189604*^9, 3.700615040552135*^9}, {
   3.700617039462041*^9, 3.70061704202993*^9}, {3.700631519183669*^9, 
   3.700631520950055*^9}, 3.700962862099989*^9, {3.7010018981350393`*^9, 
   3.701001904098999*^9}},
 ExpressionUUID -> "c9a8352f-ed61-4acc-b0ab-4ec59dbe5bf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Nc", "=", "1000"}], ";", 
   RowBox[{"\[DoubleStruckCapitalC]", "=", "0"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "\[DoubleStruckCapitalC]", " ", "denotes", " ", "the", " ", "interchange", 
    " ", "of", " ", "final", " ", 
    RowBox[{"states", "."}]}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700614968230441*^9, 3.700614970856535*^9}, {
  3.70100281756248*^9, 3.7010028418986893`*^9}},
 ExpressionUUID -> "c5a36746-2af4-4e77-aaca-ba976c4c9e2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vMatx", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"vMatx", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", 
       RowBox[{"m", "-", "1"}]}], "]"}], 
     FractionBox["m", 
      RowBox[{"m", "-", "1"}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"8", "m"}], 
      RowBox[{"n", "+", "m", "-", "1"}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"n", "+", "m"}]]}], "2"], ")"}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"1", ",", "m_"}], "]"}], ":=", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"m", "+", "1"}]]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"n_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    FractionBox["4", "n"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], ")"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "b6a15c7c-49bf-42f2-97ad-e88d64be6c92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Determine\[Phi]x", "[", 
   RowBox[{"m1_", ",", "m2_", ",", "\[Beta]_", ",", "Nx_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatx", ",", "VMatx", ",", "vals", ",", "vecs", ",", "g", ",", 
      "\[Phi]x", ",", "\[Phi]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SetSharedVariable", "[", 
      RowBox[{"vecs", ",", "m1", ",", "m2", ",", "\[Beta]", ",", "g"}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"SetSharedFunction", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"HMatx", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"4", 
         RowBox[{"Min", "[", 
          RowBox[{"n", ",", "m"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], 
             RowBox[{"n", "+", "m"}]], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m1", "2"], "-", 
              SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "+", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["m2", "2"], "-", 
             SuperscriptBox["\[Beta]", "2"]}], ")"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"VMatx", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"vMatx", "[", 
         RowBox[{"n", ",", "m"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"N", "[", 
        RowBox[{"HMatx", "+", "VMatx"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "[", "j", "]"}], "=", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"i", " ", 
              RowBox[{"ArcCos", "[", 
               RowBox[{
                RowBox[{"2", "x"}], "-", "1"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "Nx"}], "}"}]}], "]"}], ",", 
          RowBox[{"vecs", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "Nx"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]x", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"Nx", "-", "n"}], "]"}], "/", 
          SqrtBox[
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"g", "[", 
               RowBox[{"Nx", "-", "n"}], "]"}], "2"], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "0", ",", "20"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"Reverse", "[", "vals", "]"}]], "\[Beta]"}], ",", 
       "\[Phi]x"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700634289195674*^9, 3.7006344304032297`*^9}, {
   3.700634545228806*^9, 3.7006346062852707`*^9}, {3.7006346398858128`*^9, 
   3.7006346808131523`*^9}, 3.700634828982184*^9, 3.700635073992571*^9, {
   3.700639539144352*^9, 3.700639554224057*^9}, {3.700639644005911*^9, 
   3.700639656716008*^9}, {3.700639725641101*^9, 3.700639769113418*^9}, {
   3.700640066456561*^9, 3.700640088856063*^9}, {3.700747065019847*^9, 
   3.700747089383819*^9}, {3.700747341967031*^9, 3.7007474428651114`*^9}, {
   3.700748911222329*^9, 3.700748919636177*^9}, {3.700800404996336*^9, 
   3.7008004088729486`*^9}, {3.701001758307242*^9, 3.7010017610269623`*^9}, {
   3.7011432240997763`*^9, 3.7011433457013493`*^9}, {3.701145527918215*^9, 
   3.701145534689939*^9}, {3.701145763337335*^9, 3.701145773902791*^9}, {
   3.7011571689087963`*^9, 3.701157169009062*^9}, {3.70117313977057*^9, 
   3.701173155594956*^9}},
 ExpressionUUID -> "f3c6c840-ff9c-4d68-9189-306a904c61e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]n", "[", "n_", "]"}], "[", "\[Phi]_", "]"}], "[", "x_", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Phi]", "[", "x", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7010009686692133`*^9, 3.701000971460986*^9}, {
  3.701001361337983*^9, 3.70100136372013*^9}},
 ExpressionUUID -> "579c9ece-b6ab-4e0a-b4ba-c2d7ba7785c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Mn", "[", "n_", "]"}], "[", "vals_", "]"}], ":=", 
   RowBox[{"vals", "[", 
    RowBox[{"[", 
     RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700736130664919*^9, 3.700736192573859*^9}, {
  3.700747504439095*^9, 3.700747507209943*^9}, {3.7010009860129833`*^9, 
  3.701000989884871*^9}},
 ExpressionUUID -> "fd2730e4-678a-45dd-81f8-0ca42f5d71bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "[", 
   RowBox[{"M1_", ",", "M2_", ",", "M3_"}], "]"}], ":=", 
  RowBox[{"(*", "-", "*)"}], 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["M1", "2"], "+", 
         SuperscriptBox["M2", "2"], "-", 
         SuperscriptBox["M3", "2"]}], ")"}], "2"], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["M1", "2"], " ", 
       SuperscriptBox["M2", "2"]}]}]], 
    RowBox[{"2", " ", 
     SuperscriptBox["M1", "2"]}]], "+", 
   FractionBox[
    SuperscriptBox["M2", "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox["M1", "2"]}]], "-", 
   FractionBox[
    SuperscriptBox["M3", "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox["M1", "2"]}]], "+", 
   FractionBox["1", "2"]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700799638856208*^9, 3.7007996626252127`*^9}, {
   3.70099930214592*^9, 3.700999325065757*^9}, 3.701004499254623*^9, {
   3.701004612631475*^9, 3.70100465551956*^9}, {3.7010055134057217`*^9, 
   3.701005520374395*^9}},
 ExpressionUUID -> "ce46b440-8841-4016-a2ed-5a1444b614b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zfp", "[", "\[Omega]_", "]"}], "[", 
    RowBox[{"M1_", ",", "M2_", ",", "M3_", ",", "M4_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["M3", "2"], "-", 
        RowBox[{
         SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
        RowBox[{
         SuperscriptBox["M4", "2"], " ", "\[Omega]"}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["M3", "2"], "+", 
      RowBox[{
       SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{
       SuperscriptBox["M2", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{
       SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
      RowBox[{
       SuperscriptBox["M4", "2"], " ", "\[Omega]"}], "-", 
      RowBox[{
       SuperscriptBox["M1", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["M2", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], "-", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["M3", "2"], "-", 
            RowBox[{
             SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
            RowBox[{
             SuperscriptBox["M4", "2"], " ", "\[Omega]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "-", 
            RowBox[{
             SuperscriptBox["M1", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["M3", "2"]}], "-", 
            RowBox[{
             SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "+", 
            RowBox[{
             SuperscriptBox["M2", "2"], " ", "\[Omega]"}], "+", 
            RowBox[{
             SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "-", 
            RowBox[{
             SuperscriptBox["M4", "2"], " ", "\[Omega]"}], "+", 
            RowBox[{
             SuperscriptBox["M1", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}], "-", 
            RowBox[{
             SuperscriptBox["M2", "2"], " ", 
             SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]}], ")"}]}]}], 
     ")"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.7025232460919523`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zfn", "[", "\[Omega]_", "]"}], "[", 
   RowBox[{"M1_", ",", "M2_", ",", "M3_", ",", "M4_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["M3", "2"], "-", 
       RowBox[{
        SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
       RowBox[{
        SuperscriptBox["M4", "2"], " ", "\[Omega]"}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["M3", "2"], "+", 
     RowBox[{
      SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "-", 
     RowBox[{
      SuperscriptBox["M2", "2"], " ", "\[Omega]"}], "-", 
     RowBox[{
      SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
     RowBox[{
      SuperscriptBox["M4", "2"], " ", "\[Omega]"}], "-", 
     RowBox[{
      SuperscriptBox["M1", "2"], " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["M2", "2"], " ", 
      SuperscriptBox["\[Omega]", "2"]}], "+", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["M3", "2"], "-", 
          RowBox[{
           SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "+", 
          RowBox[{
           SuperscriptBox["M4", "2"], " ", "\[Omega]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "-", 
          RowBox[{
           SuperscriptBox["M1", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["M3", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["M1", "2"], " ", "\[Omega]"}], "+", 
          RowBox[{
           SuperscriptBox["M2", "2"], " ", "\[Omega]"}], "+", 
          RowBox[{
           SuperscriptBox["M3", "2"], " ", "\[Omega]"}], "-", 
          RowBox[{
           SuperscriptBox["M4", "2"], " ", "\[Omega]"}], "+", 
          RowBox[{
           SuperscriptBox["M1", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["M2", "2"], " ", 
           SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "2"]}]]}], 
    ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.702523267854007*^9, 3.7025232788786163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASin", "[", "n_", "]"}], "[", "m1_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Phi]x", ",", "m2", ",", "\[Phi]", ",", "Vals", ",", "M1", ",", "M2", 
      ",", "M3", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "Ares", 
      ",", "\[Omega]now", ",", "filename"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"SetSharedVariable", "[", 
       RowBox[{"m2", ",", "m1"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m2", "=", "m1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
       RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<.wdx\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], "=", 
          RowBox[{"Determine\[Phi]x", "[", 
           RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "x_", "]"}], "=", "\[Phi]x"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", 
           RowBox[{"{", 
            RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], ",", "\"\<TSV\>\""}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{
            RowBox[{"dir", "<>", "filename"}], ",", "\"\<TSV\>\""}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "x_", "]"}], "=", "\[Phi]x"}], ";"}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M1", ",", "\[Phi]1"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], "}"}], 
        "&"}], "[", "n", "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M2", ",", "\[Phi]2"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], "}"}], 
        "&"}], "[", "1", "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M3", ",", "\[Phi]3"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], "}"}], 
        "&"}], "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\[Omega]", "[", 
       RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ares", "=", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "]"}], "[", 
       RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["m1", "2"], ",", "Ares"}], "}"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["m1", "2"], ",", "Ares"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7011451455051413`*^9, 3.7011451870988197`*^9}, {
  3.7011452391003323`*^9, 3.701145240671228*^9}, {3.701238393516212*^9, 
  3.7012383959252462`*^9}, {3.701242873219851*^9, 3.7012428858846903`*^9}, {
  3.7012429667628603`*^9, 3.7012429715731573`*^9}, {3.7012430516178913`*^9, 
  3.701243053832398*^9}, {3.701245123314159*^9, 3.701245123658053*^9}},
 ExpressionUUID -> "a934f0da-61cb-4c34-aef3-5426a020be7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"At", "[", "n_", "]"}], "[", 
   RowBox[{"ma_", ",", "mb_", ",", "\[Delta]m_"}], "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Phi]x", ",", "m2", ",", "\[Phi]", ",", "Vals", ",", "M1", ",", "M2",
         ",", "M3", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", 
        "Ares", ",", "\[Omega]now", ",", "filename"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"SetSharedVariable", "[", 
         RowBox[{"m2", ",", "m1"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m2", "=", "m1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"filename", "=", 
        RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
         RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<.wdx\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FileNames", "[", 
           RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], 
          "\[Equal]", 
          RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], "=", 
            RowBox[{"Determine\[Phi]x", "[", 
             RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Phi]", "[", "x_", "]"}], "=", "\[Phi]x"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"dir", "<>", "filename"}], ",", 
             RowBox[{"{", 
              RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], ",", "\"\<TSV\>\""}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Vals", ",", "\[Phi]x"}], "}"}], "=", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"dir", "<>", "filename"}], ",", "\"\<TSV\>\""}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\[Phi]", "[", "x_", "]"}], "=", "\[Phi]x"}], ";"}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"M1", ",", "\[Phi]1"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
            RowBox[{
             RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], 
           "}"}], "&"}], "[", "n", "]"}]}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"M2", ",", "\[Phi]2"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
            RowBox[{
             RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], 
           "}"}], "&"}], "[", "1", "]"}]}], ";", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"M3", ",", "\[Phi]3"}], "}"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Mn", "[", "#", "]"}], "[", "Vals", "]"}], ",", 
            RowBox[{
             RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[Phi]", "]"}]}], 
           "}"}], "&"}], "[", "1", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Ares", "=", 
        RowBox[{
         RowBox[{"A", "[", 
          RowBox[{"\[Omega]", "[", 
           RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "]"}], "[", 
         RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["m1", "2"], ",", "Ares"}], "}"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["m1", "2"], ",", "Ares"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m1", ",", "ma", ",", "mb", ",", "\[Delta]m"}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.700963447044265*^9, 3.7009634483039503`*^9}, {
   3.700963496605969*^9, 3.7009634967564697`*^9}, {3.700999257265168*^9, 
   3.700999259649087*^9}, {3.701000451792835*^9, 3.701000584418326*^9}, {
   3.701000713939756*^9, 3.701000742699396*^9}, {3.701000801339698*^9, 
   3.701000842252582*^9}, {3.701001049214526*^9, 3.7010011615987673`*^9}, {
   3.701001387615768*^9, 3.701001403360688*^9}, 3.7010014602085743`*^9, {
   3.7010020188204308`*^9, 3.701002033919074*^9}, {3.70100233771848*^9, 
   3.701002343551322*^9}, 3.701002437727736*^9, {3.701002969069973*^9, 
   3.701002973683502*^9}, {3.7010081045147667`*^9, 3.7010081280981407`*^9}, 
   3.70101542547859*^9, {3.7010401908387127`*^9, 3.701040192303088*^9}, {
   3.701040352486514*^9, 3.701040356935831*^9}, {3.7010413810284567`*^9, 
   3.701041391700432*^9}, {3.701044760318459*^9, 3.701044776804439*^9}, {
   3.701046841285458*^9, 3.701046886521922*^9}, {3.701141703112267*^9, 
   3.7011417619799232`*^9}, {3.7011424164769087`*^9, 3.701142430172555*^9}, {
   3.7011426649994593`*^9, 3.701142687265085*^9}, {3.7011433933338633`*^9, 
   3.7011433950143023`*^9}, 3.701143527496166*^9, {3.701238428241212*^9, 
   3.7012384299304667`*^9}, {3.701242618920905*^9, 3.701242637391403*^9}, {
   3.701242976965143*^9, 3.701242981275414*^9}, {3.701243041942622*^9, 
   3.7012430435033092`*^9}, {3.701245119602693*^9, 3.7012451199379253`*^9}},
 ExpressionUUID -> "185f2f86-0898-45fd-af5c-d0ea0df5545c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B2toB0\[Pi]0", "[", 
   RowBox[{"mQ_", ",", "mq_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Phi]xB", ",", "\[CapitalPhi]B", ",", "ValsB", ",", "\[Phi]x\[Pi]", 
      ",", "\[CapitalPhi]\[Pi]", ",", "Vals\[Pi]", ",", "M1", ",", "M2", ",", 
      "M3", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "Ares", ",", 
      "filename", ",", "\[Omega]now", ",", "m1", ",", "m2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"SetSharedVariable", "[", 
       RowBox[{"m2", ",", "m1"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m1", "=", "mQ"}], ";", 
     RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m1", "\[Equal]", "m2"}], ",", 
         RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
         RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
          RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
       "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
          RowBox[{"Determine\[Phi]x", "[", 
           RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], ",", "\[Phi]xB"}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", 
           RowBox[{"{", 
            RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], ",", "\[Phi]xB"}], 
           "}"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"m1", "=", "mq"}], ";", 
     RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m1", "\[Equal]", "m2"}], ",", 
         RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
         RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
          RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
       "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
          RowBox[{"Determine\[Phi]x", "[", 
           RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], ",", 
            "\[Phi]x\[Pi]"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", 
           RowBox[{"{", 
            RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], ",", 
            "\[Phi]x\[Pi]"}], "}"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Wavefunction build complete.\>\"", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]", "]"}], 
           "[", "x", "]"}], "&"}], "[", "1", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M2", ",", "\[Phi]2"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}],
          "}"}], "&"}], "[", "0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M3", ",", "\[Phi]3"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals\[Pi]", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]\[Pi]", 
           "]"}]}], "}"}], "&"}], "[", "0", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M1", ",", "\[Phi]1"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}],
          "}"}], "&"}], "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{
            RowBox[{"A", "[", "\[Omega]", "]"}], "[", 
            RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "0.1", ",", "0.5", ",", "0.1"}], "}"}]}], 
       "]"}], "~", "Join", "~", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{
            RowBox[{"A", "[", "\[Omega]", "]"}], "[", 
            RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "0.6", ",", "0.8", ",", "0.02"}], "}"}]}], 
       "]"}], "~", "Join", "~", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{
            RowBox[{"A", "[", "\[Omega]", "]"}], "[", 
            RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "0.8", ",", "0.9", ",", "0.01"}], "}"}]}], 
       "]"}], "~", "Join", "~", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
         RowBox[{"{", 
          RowBox[{"\[Omega]", ",", 
           RowBox[{
            RowBox[{"A", "[", "\[Omega]", "]"}], "[", 
            RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3"}], "]"}]}], 
          "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", "0.9", ",", "0.99", ",", "0.005"}], "}"}]}],
        "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.701182661437722*^9, 3.7011826701290627`*^9}, {
   3.70118272950322*^9, 3.701182751732576*^9}, {3.701182799910433*^9, 
   3.701182807735368*^9}, {3.7011828963116217`*^9, 3.7011829529189377`*^9}, {
   3.70121372610996*^9, 3.701213729222439*^9}, {3.701214274786031*^9, 
   3.701214288048624*^9}, {3.701214439835726*^9, 3.701214492077846*^9}, {
   3.7012145658299627`*^9, 3.701214587805657*^9}, {3.701218786028676*^9, 
   3.70121881210268*^9}, {3.701218916398808*^9, 3.701219103163163*^9}, {
   3.701219147271147*^9, 3.701219329601437*^9}, {3.701219400672757*^9, 
   3.701219437066174*^9}, {3.701219561018991*^9, 3.701219571027029*^9}, {
   3.701219640420897*^9, 3.701219697348774*^9}, {3.701219739844056*^9, 
   3.701219743937037*^9}, {3.7012198234552927`*^9, 3.701219830204856*^9}, {
   3.7012384475129013`*^9, 3.701238544998308*^9}, 3.7012388389468393`*^9, {
   3.701238874806789*^9, 3.701238943130307*^9}, {3.701241959734934*^9, 
   3.701241985474769*^9}, 3.701242031548637*^9, 3.701242133169197*^9, {
   3.701242339773006*^9, 3.701242350789*^9}, {3.701242552285844*^9, 
   3.701242568894527*^9}, {3.701243058181884*^9, 3.7012430596309443`*^9}, {
   3.7012432761450853`*^9, 3.701243364040224*^9}, {3.7012434000473843`*^9, 
   3.701243441630238*^9}, {3.701243536514099*^9, 3.701243543843501*^9}, {
   3.701243579761984*^9, 3.701243580537962*^9}, {3.701243634318582*^9, 
   3.701243634750433*^9}, {3.701243667261428*^9, 3.701243714613613*^9}, {
   3.701243763702819*^9, 3.701243793217531*^9}, {3.701243833119047*^9, 
   3.70124383509101*^9}, {3.701243987731255*^9, 3.701243988098735*^9}, {
   3.701244138976878*^9, 3.7012441572060204`*^9}, {3.701244198055735*^9, 
   3.7012442136221*^9}, 3.7012442506352043`*^9, {3.701244514788933*^9, 
   3.701244520852873*^9}, {3.701244783230835*^9, 3.701244783676569*^9}, {
   3.701245075320443*^9, 3.701245075884288*^9}, {3.701311751254849*^9, 
   3.701311781682623*^9}, {3.7013118803035727`*^9, 3.7013119279186497`*^9}, {
   3.7013119811043577`*^9, 3.701312048652936*^9}, {3.701312083960093*^9, 
   3.701312109784431*^9}, {3.701312140225628*^9, 3.701312503356669*^9}, {
   3.701312562356882*^9, 3.701312620597724*^9}, {3.701312743166813*^9, 
   3.701312751126625*^9}, 3.701313641302775*^9, 3.701313717990872*^9, {
   3.701313792228554*^9, 3.701313843490266*^9}, {3.701316943083651*^9, 
   3.701316981628036*^9}, {3.701408285942856*^9, 3.701408305094615*^9}, {
   3.7018381823098693`*^9, 3.70183826088476*^9}, {3.70184144279207*^9, 
   3.7018414430802736`*^9}, {3.701844276497134*^9, 3.701844292585108*^9}, 
   3.701870216314155*^9, 3.7018705305975213`*^9},
 ExpressionUUID -> "aa4db78b-0f7f-407b-88d2-9310caa07cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B2\[Pi]2toB0\[Pi]0", "[", 
   RowBox[{"mQ_", ",", "mq_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Phi]xB", ",", "\[CapitalPhi]B", ",", "ValsB", ",", "\[Phi]x\[Pi]", 
      ",", "\[CapitalPhi]\[Pi]", ",", "Vals\[Pi]", ",", "M1", ",", "M2", ",", 
      "M3", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "Ares", ",", 
      "filename", ",", "\[Omega]now", ",", "m1", ",", "m2", ",", "M4", ",", 
      "\[Phi]4"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"SetSharedVariable", "[", 
       RowBox[{"m2", ",", "m1"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m1", "=", "mQ"}], ";", 
     RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m1", "\[Equal]", "m2"}], ",", 
         RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
         RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
          RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
       "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
          RowBox[{"Determine\[Phi]x", "[", 
           RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], ",", "\[Phi]xB"}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", 
           RowBox[{"{", 
            RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], ",", "\[Phi]xB"}], 
           "}"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"m1", "=", "mq"}], ";", 
     RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"m1", "\[Equal]", "m2"}], ",", 
         RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
         RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
          RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
          RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
       "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
          RowBox[{"Determine\[Phi]x", "[", 
           RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], ",", 
            "\[Phi]x\[Pi]"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", 
           RowBox[{"{", 
            RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Set", "@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], ",", 
            "\[Phi]x\[Pi]"}], "}"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Wavefunction build complete.\>\"", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]", "]"}], 
           "[", "x", "]"}], "&"}], "[", "1", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M1", ",", "\[Phi]1"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}],
          "}"}], "&"}], "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M2", ",", "\[Phi]2"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals\[Pi]", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]\[Pi]", 
           "]"}]}], "}"}], "&"}], "[", "2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M3", ",", "\[Phi]3"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}],
          "}"}], "&"}], "[", "0", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M4", ",", "\[Phi]4"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Mn", "[", "#", "]"}], "[", "Vals\[Pi]", "]"}], ",", 
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]\[Pi]", 
           "]"}]}], "}"}], "&"}], "[", "0", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<M1=\>\"", ",", "M1", ",", "\"\<  M2=\>\"", ",", "M2", ",", 
       "\"\<  M3=\>\"", ",", "M3", ",", "\"\<  M4=\>\"", ",", "M4"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{
          RowBox[{"zfp", "[", "\[Omega]", "]"}], "[", 
          RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Element]", "Reals"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<z=\>\"", ",", "z", ",", "\"\<    \[Omega]=\>\"", ",", 
             "\[Omega]"}], "]"}], ";", 
           RowBox[{"{", 
            RowBox[{"\[Omega]", ",", 
             RowBox[{
              RowBox[{"FBBplusDD", "[", 
               RowBox[{"z", ",", "\[Omega]"}], "]"}], "[", 
              RowBox[{
              "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], 
              "]"}]}], "}"}]}], ","}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0.1", ",", "0.9", ",", "0.01"}], "}"}]}], 
      "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"~", "Join", "~", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", 
          RowBox[{
           RowBox[{"FBBplusDD", "[", "\[Omega]", "]"}], "[", 
           RowBox[{
           "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0.6", ",", "0.8", ",", "0.02"}], "}"}]}], 
      "]"}], "~", "Join", "~", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", 
          RowBox[{
           RowBox[{"FBBplusDD", "[", "\[Omega]", "]"}], "[", 
           RowBox[{
           "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0.8", ",", "0.9", ",", "0.01"}], "}"}]}], 
      "]"}], "~", "Join", "~", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Omega]=\>\"", ",", "\[Omega]"}], "]"}], ";", 
        RowBox[{"{", 
         RowBox[{"\[Omega]", ",", 
          RowBox[{
           RowBox[{"FBBplusDD", "[", "\[Omega]", "]"}], "[", 
           RowBox[{
           "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], 
           "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "0.9", ",", "0.99", ",", "0.005"}], "}"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7018702273212767`*^9, 3.70187023618548*^9}, {
   3.7018703229855375`*^9, 3.7018703312333336`*^9}, {3.701870362875572*^9, 
   3.7018703770927725`*^9}, {3.7018705332814007`*^9, 
   3.7018705571043577`*^9}, {3.7018715878764176`*^9, 3.701871617715438*^9}, {
   3.7018757460241103`*^9, 3.701875789944252*^9}, {3.701875903720162*^9, 
   3.701875917658003*^9}, {3.7025227099664483`*^9, 3.702522722215355*^9}, {
   3.702523005104923*^9, 3.7025230208690753`*^9}, {3.702523093253039*^9, 
   3.702523210599363*^9}, {3.7025232887971354`*^9, 3.7025232931256695`*^9}, {
   3.7025234347650595`*^9, 3.7025234760125084`*^9}, {3.7025235198055897`*^9, 
   3.702523558405794*^9}, {3.702527753671752*^9, 3.702527753834853*^9}, 
   3.7025280809351544`*^9}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 2}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 4},
 ExpressionUUID -> "53ce40e5-88b5-4894-b4f3-a4e97d75bfa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Debug", "Subsubsection",
 CellChangeTimes->{{3.701317208207519*^9, 3.701317209400569*^9}},
 ExpressionUUID -> "3985bda6-f993-4414-866a-87f71a15394f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mQ", "=", 
      SqrtBox["2000"]}], ",", 
     RowBox[{"mq", "=", 
      SqrtBox["0.3136"]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"m1", "=", "mQ"}], ";", 
    RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
    RowBox[{"filename", "=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"m1", "\[Equal]", "m2"}], ",", 
        RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
         RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
        RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
         RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
         RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
      "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
         RowBox[{"Determine\[Phi]x", "[", 
          RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], "=", "\[Phi]xB"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", 
          RowBox[{"{", 
           RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ValsB", ",", "\[Phi]xB"}], "}"}], "=", 
         RowBox[{"Import", "[", 
          RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPhi]B", "[", "x_", "]"}], "=", "\[Phi]xB"}], ";"}],
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"m1", "=", "mq"}], ";", 
    RowBox[{"m2", "=", "mq"}], ";", "\[IndentingNewLine]", 
    RowBox[{"filename", "=", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"m1", "\[Equal]", "m2"}], ",", 
        RowBox[{"\"\</eigenstate_m-\>\"", "<>", 
         RowBox[{"ToString", "[", "m1", "]"}]}], ",", 
        RowBox[{"\"\</eigenstate_m1-\>\"", "<>", 
         RowBox[{"ToString", "[", "m1", "]"}], "<>", "\"\<_m2-\>\"", "<>", 
         RowBox[{"ToString", "[", "m2", "]"}]}]}], "]"}], "<>", 
      "\"\<.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{"filename", ",", "dir", ",", "Infinity"}], "]"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
         RowBox[{"Determine\[Phi]x", "[", 
          RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], "=", 
         "\[Phi]x\[Pi]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", 
          RowBox[{"{", 
           RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Vals\[Pi]", ",", "\[Phi]x\[Pi]"}], "}"}], "=", 
         RowBox[{"Import", "[", 
          RowBox[{"dir", "<>", "filename"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalPhi]\[Pi]", "[", "x_", "]"}], "=", 
         "\[Phi]x\[Pi]"}], ";"}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "\"\<Wavefunction build complete.\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]", "]"}], 
          "[", "x", "]"}], "&"}], "[", "1", "]"}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M1", ",", "\[Phi]1"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}], 
        "}"}], "&"}], "[", "2", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M2", ",", "\[Phi]2"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Mn", "[", "#", "]"}], "[", "Vals\[Pi]", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]\[Pi]", 
          "]"}]}], "}"}], "&"}], "[", "2", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M3", ",", "\[Phi]3"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Mn", "[", "#", "]"}], "[", "ValsB", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]B", "]"}]}], 
        "}"}], "&"}], "[", "0", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M4", ",", "\[Phi]4"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Mn", "[", "#", "]"}], "[", "Vals\[Pi]", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]n", "[", "#", "]"}], "[", "\[CapitalPhi]\[Pi]", 
          "]"}]}], "}"}], "&"}], "[", "0", "]"}]}], ";"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7013172131039753`*^9, 3.70131722799054*^9}, {
   3.7013226700707827`*^9, 3.701322690894433*^9}, 3.702528501601856*^9, 
   3.702609481936967*^9, {3.7026100031840796`*^9, 3.7026100062706785`*^9}},
 ExpressionUUID -> "a4b35256-087b-4380-b270-7d87c380a6ec"],

Cell[BoxData["\<\"Wavefunction build complete.\"\>"], "Print",
 CellChangeTimes->{3.70140831419827*^9, 3.7025351848959556`*^9, 
  3.702569885323436*^9, 3.7025704658563695`*^9, 3.702608323375078*^9},
 ExpressionUUID -> "41b8f740-a4c6-4cf4-aa4d-cb8281a019f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"zfp", "[", "0.5", "]"}], "[", 
  RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]], "Input"],

Cell[BoxData["0.5503828016890168`"], "Output",
 CellChangeTimes->{3.702535473372364*^9, 3.702569887473155*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FBBplusDD", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"zfp", "[", "0.5", "]"}], "[", 
     RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}], ",", "0.5"}], 
   "]"}], "[", 
  RowBox[{"\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70253521670195*^9, 3.7025352823041186`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,36,2,24935709449592190692,
   "Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025353001587396`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.15777168246143736`\\\", \\\",\\\", \
\\\"0.9084581150955231`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \\\"9.696746266604419`*^281\\\"}], \
\\\"+\\\", RowBox[{\\\"2.704589278550548`*^136\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3516477342144491`*^281\\\"}]\\) for the integral and \
error estimates.\"",2,36,3,24935709449592190692,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702535300417425*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,36,4,24935709449592190692,
   "Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702535306275072*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.017178676871696278`\\\", \\\",\\\", \
\\\"0.8992341771072418`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.5014737604616517`*^8\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.780902723290057`*^7\\\"}]\\) for the integral and \
error estimates.\"",2,36,5,24935709449592190692,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025353063711367`*^9}],

Cell[BoxData[
 RowBox[{"1.3501768510324484`*^8", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7025353063786416`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"zfp", "[", "x", "]"}], "[", 
     RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}], "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7025704008670397`*^9, 3.70257043741835*^9}, {
  3.7025704698435383`*^9, 3.7025704757131505`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
K2G2DP4HPoeDcA==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0628016134016063`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {1.0628016134016063`, 1.1395145174413468`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.702570413942522*^9, 3.702570438512849*^9}, 
   3.7025704764641404`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"zfn", "[", "x", "]"}], "[", 
     RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}], "x"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7025705764252872`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
bMcqb/cUaMqrj8Q9XYTF5ujx/95kQ7XU4ZwPg1x4v63Xcy2EDS1nThkO9XGB
YSEz/3cYGyhHhjZ6erhwt/3594eRbCgwZKw0tHNB9S1LrO0BG0S1RZVSGVxw
HOA1UXnOhrJbCZLk51xoZF/OGXvLhuSzXwKp/lx4oVz9q3cvG8r/Tgjj+nLh
/rktZSt9bAiOnq1quMAF55l7TOFhNvQfdbrmQufCt88vh2lsNvh6rfWGOHJB
c+mTcNJ3Npj8JBtuf4gLCVscfa12E2A24WVXsZ0L6647f+tSIiDV4WwTCnDB
rb5z8ZgKAa0OZamMrVzQCja+YqlBQOOBT1WlGxx4s6EcYLqfgML30xdcFjiw
/I0TZGhBwADPl5iQbg78uRARqepLgMOax+XZGA5U/WFske1HgB0/jU6J5IB8
/pqg8lUCZnhxUC+MA5/P+9xRvE7Ajwyt96RADti0Kx/LuEHAsiPtryY/DlSo
jwsrhBDgMlLkZH+BA6GzNv9QwgkQf9ztNHGWA9PmQlZptwlIGl9o7HLiwB85
rB2y0QToC01VXj7BgRKBm90pMQTEOTf11VlxQMZLP5Z871/fSY9INedAcBPH
JimWgE6XtsUZYw4QyrniUvEEdN3/4HP1AAeOhru/i08k4CSnbnzmVw4UseXi
JVIIIK/skg5W4oC0yYDdg4cEBLHn6xslOHD/AGRx0wgQqyqxtN/Cgf8BTkOM
5g==
      "]], 
     LineBox[{{0.9950405428925644, 0.9215549510356917}, {0.9951949890181475, 
      0.9395549819494027}, {0.9955382026305539, 0.953186802773367}, {
      0.9958814162429602, 0.9613471793691072}, {0.9962246298553665, 
      0.9674306815662811}, {0.9965678434677729, 0.9723584642164047}, {
      0.9969110570801794, 0.976535866903842}, {0.9972542706925858, 
      0.9801818593892296}, {0.9975974843049922, 0.9834297202569214}, {
      0.9979406979173985, 0.9863672576293822}, {0.9982839115298048, 
      0.98905570478622}, {0.9986271251422112, 0.9915396370328273}, {
      0.9989703387546176, 0.9938526164873676}, {0.999313552367024, 
      0.9960206119137273}, {0.9996567659794304, 0.9980641758574689}, {
      0.9999999795918367, 0.9999998878232739}}]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 16.21194030340196}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.702570577126927*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[DoubleStruckCapitalC]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{"\[Omega]", "-", "z"}], "]"}]}], 
       FractionBox[
        RowBox[{"1", "-", "\[Omega]"}], "z"], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]2", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "-", "\[Omega]"}], 
             RowBox[{"1", "-", "z"}]], "x"}], "]"}], 
          RowBox[{"\[Phi]4", "[", "x", "]"}], 
          FractionBox[
           RowBox[{
            RowBox[{"\[Phi]1", "[", "y", "]"}], 
            RowBox[{"\[Phi]3", "[", 
             RowBox[{
              FractionBox["z", "\[Omega]"], "y"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "x"}], ")"}], 
                 FractionBox[
                  RowBox[{"1", "-", "\[Omega]"}], "z"]}]}], ")"}]}], ")"}], 
            "2"]]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"z", "-", "\[Omega]"}], "]"}], 
       FractionBox[
        RowBox[{"1", "-", "z"}], "\[Omega]"], 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]4", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"1", "-", "z"}], 
             RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
          RowBox[{"\[Phi]2", "[", "x", "]"}], 
          FractionBox[
           RowBox[{
            RowBox[{"\[Phi]3", "[", "y", "]"}], 
            RowBox[{"\[Phi]1", "[", 
             RowBox[{
              FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"y", "-", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "x"}], ")"}], 
                 FractionBox[
                  RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
            "2"]]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.702535208443107*^9, {3.70254656834941*^9, 3.7025465712014427`*^9}, 
   3.7025705091811485`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.42944566985522675`\\\", \\\",\\\", \
\\\"0.5054467930740387`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"2.19661659223405229406453892589278856198101480895810124310955802533`65.\
954589770191*^1510\\\"}], \\\"-\\\", \
RowBox[{\\\"5.\
26202864298250313272271598539586337205004479336400825181971737723`65.\
954589770191*^1116\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) and \
\\!\\(\\*RowBox[{\\\"3.\
15727852220060686677435525413922324516085066313978223369789617468`65.\
954589770191*^1510\\\"}]\\) for the integral and error estimates.\"",2,34,7,
   24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025705243789783`*^9, 3.7025709033665037`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,34,8,24936002415346997957,
   "Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025705243789783`*^9, 3.7025709087654867`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.8064988865798981`\\\", \\\",\\\", \
\\\"0.995829857886447255589656979424262317479588091373443603515625`65.\
954589770191\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"860.196272620555`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"941.8076483222326`\\\"}]\\) for the integral and error \
estimates.\"",2,34,9,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025705243789783`*^9, 3.70257090907687*^9}],

Cell[BoxData[
 RowBox[{"18.536469884787216`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.702570530209228*^9, 3.7025709090808716`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfp", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]4", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "z"}], 
         RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
      RowBox[{"\[Phi]2", "[", "x", "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
        "2"]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702535385615554*^9, 3.702535425858738*^9}, 
   3.7025709068176355`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,35,10,24936002415346997957,
   "Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025354432540483`*^9, 3.702570914926963*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.017178676871696278`\\\", \\\",\\\", \
\\\"0.8992341771072418`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.5014737604616517`*^8\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.780902723290057`*^7\\\"}]\\) for the integral and \
error estimates.\"",2,35,11,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025354432540483`*^9, 3.7025709149920125`*^9}],

Cell[BoxData["1.5014737604616517`*^8"], "Output",
 CellChangeTimes->{3.702535443499222*^9, 3.7025709150310388`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfp", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]4", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "z"}], 
         RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
      RowBox[{"\[Phi]2", "[", "x", "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
        "2"]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702571041881713*^9, 3.70257104617531*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.7915300145095856`\\\", \\\",\\\", \
\\\"0.8125375523513825`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.28192920349225387`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.6231448354747982`\\\"}]\\) for the integral and error \
estimates.\"",2,41,25,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025710620559025`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.7915338292068512`\\\", \\\",\\\", \
\\\"0.8125375523513825`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.09160716283290163`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.08542577832754897`\\\"}]\\) for the integral and error \
estimates.\"",2,41,26,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025710620639086`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"18\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.7915338292068512`\\\", \\\",\\\", \
\\\"0.8125413670486481`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.02958850748828209`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.031018541116974115`\\\"}]\\) for the integral and \
error estimates.\"",2,41,27,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025710620709143`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,41,28,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025710620749164`*^9}],

Cell[BoxData["2.0578359711640676`*^12"], "Output",
 CellChangeTimes->{3.702572624874115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfp", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]4", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "z"}], 
         RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
      RowBox[{"\[Phi]2", "[", "x", "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
        "2"]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<MonteCarlo\>\""}], ",", 
     RowBox[{"MaxPoints", "\[Rule]", 
      SuperscriptBox["10", "6"]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026060194755335`*^9, 3.7026060528419695`*^9}, {
   3.70260833214711*^9, 3.702608341187772*^9}, 3.7026086572265577`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","maxp",
   "\"The integral failed to converge after \
\\!\\(\\*RowBox[{\\\"1000100\\\"}]\\) integrand evaluations. NIntegrate \
obtained \\!\\(\\*RowBox[{\\\"180837.56350750307`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"98458.63280975097`\\\"}]\\) for the integral and error \
estimates.\"",2,32,10,24935953524661385402,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.702606034275763*^9, {3.7026083368890076`*^9, 3.702608355716572*^9}, 
   3.7026088450189753`*^9}],

Cell[BoxData["180837.56350750307`"], "Output",
 CellChangeTimes->{
  3.7026060342777643`*^9, {3.702608336910022*^9, 3.7026083557415953`*^9}, 
   3.702608845040991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfp", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]4", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "z"}], 
         RowBox[{"1", "-", "\[Omega]"}]], "x"}], "]"}], 
      RowBox[{"\[Phi]2", "[", "x", "]"}], 
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
        "2"]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<AdaptiveMonteCarlo\>\""}], ",", 
     RowBox[{"MaxPoints", "\[Rule]", 
      SuperscriptBox["10", "6"]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026083582919683`*^9, 3.702608400569676*^9}, {
  3.702608518283929*^9, 3.7026085627780743`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"19\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\
\\\"{\\\", RowBox[{\\\"0.9696082277552104`\\\", \\\",\\\", \
\\\"0.9726709830319393`\\\"}], \\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"570542.2221816507`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"535375.1016635827`\\\"}]\\) for the integral and error \
estimates.\"",2,31,9,24935953524661385402,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7026083786785736`*^9, 3.702608404744732*^9}, {
  3.7026085243537984`*^9, 3.7026085666360264`*^9}}],

Cell[BoxData["570542.2221816507`"], "Output",
 CellChangeTimes->{{3.7026083786795735`*^9, 3.702608404780759*^9}, {
  3.7026085243823214`*^9, 3.702608566679557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Phi]3", "[", "y", "]"}], 
         RowBox[{"\[Phi]1", "[", 
          RowBox[{
           FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], 
              FractionBox[
               RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
         "2"]], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], 
           FractionBox[
            RowBox[{"1", "-", "\[Omega]"}], "z"]}], "-", "\[Lambda]"}]}], 
        "}"}]}], "]"}], "+", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"\[Phi]3", "[", "y", "]"}], 
         RowBox[{"\[Phi]1", "[", 
          RowBox[{
           FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}], 
              FractionBox[
               RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
         "2"]], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], 
           FractionBox[
            RowBox[{"1", "-", "\[Omega]"}], "z"]}], "+", "\[Lambda]"}], ",", 
         "1"}], "}"}]}], "]"}], "-", 
     RowBox[{"2", 
      RowBox[{"\[Phi]3", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], 
         FractionBox[
          RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], "]"}], 
      FractionBox[
       RowBox[{"\[Phi]1", "[", 
        RowBox[{
         FractionBox["\[Omega]", "z"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "x"}], ")"}], 
            FractionBox[
             RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], "]"}], 
       "\[Lambda]"]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026089471772566`*^9, 3.702609049562767*^9}}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{3.7026090515835457`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.989164285334936`15.954589770191005\\\", \\\"}\\\"}]\\). NIntegrate \
obtained \\!\\(\\*RowBox[{\\\"-\\\", \\\"13223.081989160964`\\\"}]\\) and \\!\
\\(\\*RowBox[{\\\"10510.518582048255`\\\"}]\\) for the integral and error \
estimates.\"",2,33,11,24935953524661385402,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7026090744913297`*^9}],

Cell[BoxData[
 RowBox[{"-", "13002.247611567043`"}]], "Output",
 CellChangeTimes->{3.7026090745568857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], "2"]],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], 
          FractionBox[
           RowBox[{"1", "-", "\[Omega]"}], "z"]}], "-", "\[Lambda]"}]}], 
       "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7026091071530743`*^9}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{3.702609107933777*^9}],

Cell[BoxData["9.604920632233228`*^-7"], "Output",
 CellChangeTimes->{3.702609122902652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], "2"]],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], 
          FractionBox[
           RowBox[{"1", "-", "\[Omega]"}], "z"]}], "+", "\[Lambda]"}], ",", 
        "1"}], "}"}], ",", 
      RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026091422666764`*^9, 3.7026091723499255`*^9}}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{{3.702609145578182*^9, 3.7026091726431503`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"20\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.989225426457066`15.954589770191005\\\", \\\"}\\\"}]\\). NIntegrate \
obtained \\!\\(\\*RowBox[{\\\"-\\\", \\\"2.414353553492164`*^7\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6857373359357875`*^7\\\"}]\\) for the integral and \
error estimates.\"",2,36,13,24935953524661385402,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.702609153190174*^9, 3.702609183411042*^9}],

Cell[BoxData[
 RowBox[{"-", "2.414353553492164`*^7"}]], "Output",
 CellChangeTimes->{3.702609153192176*^9, 3.702609183414043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], "2"]],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], 
          FractionBox[
           RowBox[{"1", "-", "\[Omega]"}], "z"]}], "+", "\[Lambda]"}], ",", 
        "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026092404176226`*^9, 3.702609255370688*^9}, {
  3.702609497963339*^9, 3.702609509470437*^9}}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{{3.7026092450807943`*^9, 3.702609255986219*^9}, 
   3.7026095098677692`*^9}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YE5kG54nKN8ZcqldUEp3ng13Owl6nQakCna7oA72FoF27O687qjve13Qos8E
2a4Dx7vujYS8Ay5IuHu7/i+2ilbP50ouF2TDLnCprBP3A62d47O8LijTR10V
EAnSlGPpeQRc0NMuT4av2OEeua59R1zQ2oH0d7FduB5W7lV3xj7u8/A6fzcJ
nlue/KrA54KcuobPP8V2YXh+qYDTBeUdWBU7/xSf18onoVxmF9TnzblM00OC
+9xPKOrbzmgLKbRXYAumsUY2zDijkwecEtSfkeA99+K+T/3OyN07Xm8aW5Li
/7ip3BkVoyq25OckGLRoiDwX7IwG2V5+OtqL+8W7+MUoOWdE7f2rog/7T3+q
W9SKE5JG+y54vcDrra7851ThhHzYTp/Z04fjQUS85ryGE7rpZfm3Gvu/hWil
ukZH9L4z8rluP543n0Z0uD91QLvYyjJmsRn/s3vMVm+PFLy6zTNe4v0ePFh/
KsEOBXRO8Yi/wvOmXuaNdBy/lay7pgextSxbf8kPWaNxT7Fa/wESZAYZ2j7W
skLMnQah+16TQNjg08nWSgsU6plPZzKI55UQ9Wdn9pqi6o6WwUVs1VtRXW95
8X2b5VNB7hDOn4/z4fGSBkizQ+DoyBsSOFi/CETl6uggyyNNq3e4XjYtuJ+q
50J6Hu/2bmCPsnq9O9u0E2LbVz9ee4/rb0wL3dkzIkByV/ScGMH90qVzRLBJ
CVrbXqY4jJLg+3y+vHSKEcztmzP6h/3f2cqV1mITEHDfz3lzDMdLvUZ5y3Uz
SNtnde/bOAm+NW5LJbhZQZfbpcC4CRxfxhNj1idsYLm1TPbIJ7z/o8oBzd9s
wc7tZ7/rZxK09kg8ur/fEbJbd+XsnCRBAt/eAg9NJ3i+97hNFfZCZEtzz18n
EG8NIs98wd8f5PzgiZkL/GOmYvD5juch6WiR6h5XyCZtXub8gd//xevjMVc3
EHi2svACO/xoca4MjTtoRFA+CP4kwRlOv6zNcx6Q/uPD7ckZfB/morMwHPQC
3s63BzIIElRf2/+TI8wbHhYNpMiTSJDj6nynm98HhvWf+hWRcT4Pb5SeifSF
gy01cia/8H08K4Gw5PSH6py7NVRz+L53/uPamwZ/kL9QzvcQ29PSW2n6SAAM
aJbl2s/jfN3kJol6BoCDwDU6xgUSXCFffy1dFQALW7kRrdgVw697dn8OgLiP
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
51954fntliDc8m2bdyuyWX+w4Z/Mp3jK3dxlubsk6CB79/HFvMCFt25MLdxD
8ctdZVshmY7XWBukpDqQIIGRqfi5WCZ+oxG7ZuBIgrHDd90qebLx9CiBbx+d
SEC7/y1FrC0PFxfpq31wnwQFe1cutp4vxBtC6v0kXElg0JZ5KYuxCL9N+niq
H5l/0Dbvcl0Rnv0p6qPKAxKcquQ5GyZcjF/g83OcQxaZnrpZVVeM//K9J/P6
IQkm1cJiuC0+4dIXtNL+uZPg/sbhFnm3ErwlX9nynQcJHAqvPr26VILf5ZA4
YOFJgs1CPMvtVim+5wFPH6sXCcSUrZ4eaC/F8wfpYnDksN+5lgMyZbgOLOk6
eaP6qbebWdG3DCenjTEf8iGBVgdfT3ZdGf6MsaOhC3nh2caVD1tluPy9qoAA
XxJkDfZMVsqU4+1def8d80P9tl2NU1W7HHc88Wp9ElmpWjqn9Fo5zv46tCTW
nwRX+ftiXliW4wXbD1zUHpHg2O+p2ZuXy3G9m7fkV5D3181OvFMqxxebLs9l
BpAgXiSlmHVPOR4tp5p5JZAEr19wCSt2luFHoxWsGYNIEHihpXkksAzvXhEU
LEd+mu63e0y8DL9vxjJ45zGKZ9HP3mLlpTg3sRHHF0wCCU/J0Q8nS/Fi0Tn9
r8jV1EtRCXkluGFYP4t3CAkYeCoc2PeU4H/IDc2yoajfXI9XtLz2CT9Rmnb2
WRgJ0reapHa3f8TzFF7XngonQYC3063w5SJcKDda7RfysUl/Bg2WIpw58ZHm
+SfovAzU3YZ5C3C/vR5fF5GrTu+LXOF5jy9HOl1MfkqCLc3Mr5XTefiPAEv9
9Wck8PQ5oC+rkYVf/mfckxVJgsEGoQUnNH80uekaGUWh+0jxG7exeIsX2Z65
WvAc3afB0xA6u1d4iO6B6zaxJHAM7rEo2OWC/2vknOSKQ/24NZx/j+BlcDnL
fKsaeeFVnIDLjBdcU1yz5X9BguGMosbPRDQo8PU5db9E9XSJ62vD4wzon472
/y8Z9UO/v7qB6qVw0TJ8Bwm509/hpltPGdT0Pwp6mUKChneky2XXKiD/q1Po
cioJ9u7g+7BmWQWH1GyZ374lQWzAe4vavi8Q/8XyyaU0EhT9d8u6SoSAR4W6
UbnpKN8+q2yzP66GFWl1TpMMEqiU+JbckasB+/QzsTsz0X2EOpf6dtSA8QvZ
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
aVj/7Ks+Jb0iy5WF6tO14uWLUSrV/wN2aVBT
       "]], LineBox[CompressedData["
1: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
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.7473770266744285, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7026092521130767`*^9, 3.702609437807821*^9, 
  3.7026096665989523`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"\[Phi]1", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7026118812499886`*^9, 3.7026118922484665`*^9}, {
  3.7026120818658648`*^9, 3.7026120842755957`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUWXc80F8XNlJC0rISlVEke2Q+9t57h6TSMBItZZQUUsgqMrNlZI9r7z1S
iCKkkEr9ovV6//p+zvecc889zx3nOZ97wNnd5CQVBQXFWXoKiv9/dU5+GKhf
MFeMZT/ndMUzuW6TKrvHFJsEPl48M/XX7VOd+NO4JyVsagjkOKRanL+bvOfg
CfDlM4Deezu3Vw9piW7PaHEimxmEyMATidMc4Anbl/GPyxo1T4t2Hf37pe63
zolYJz4HlL/RufNKYwf5eGu42SnGCXl16iku3RywdPmvNpLNBWsPKWyX5faT
ZlX28qYnrtiyc39T6Z99EOFWKFzlOgP9GH4Zu8md5AmVYzZv2lnwuKtGC6S8
raOdDky14LuAUpY1JZ2HnKh6O9jTZOYBFm7K5MgqAeJh5KJjF+MJ+zcdDyp9
BcBX/711ddQL4lSPK1oVdpA3wndUw9m8QTfyci/jjoMk+ilrPa/tJeRqK3m2
s4pAZ3uOfN0TH2w/cvWyoB4XobgpV2kx6YvrF0Y+vhXhJmXL3ZKfua5g1nUq
1YNXFOccHIrvOF1FprCYgp3rVnKw97PQ/rRr+JeQ9M6wT5i8UgjIrXh/HfRR
7H9Hbgjgfv7Ow8Z8N+Azwn52Szs31Pelpy+cuok5LZ12ShUxcqM1ganBzB/n
KqUjRA/SEesbMwbh3/1x/eMbga0yEpCQEgy3jgmA1+CFSyFrP+q2L3t38UoH
Imgi0uNEjAT5mFG79etoIO4eVrs5vsaEFvvNWnWXg6AWZf6mhkcSyXsMg++x
3YIi3fp08bWd5FpPbLNF1S18nJXYfLtDkljcfkvFbXsbDSJVp/L8tkJUgV/5
86/bqPh1l172mxQYvnverH4SDLwd8OsvnVecz6uqvaNwBzwT39LkZaRJowv1
b9PJO3gwv+tv8h02ksihJ7v/Zgjqbox26LFJ4fJw9OVFrrv48/zr+dSsIzAN
e1NWUX8XSRYtvcW+okRIje/7Lad72DfW+Gm6U4Js/X1B3JgqFF1FZYLFdgfx
vqTcc19aKNit9l11CpEBOUtRuKAaho+NDjrn9bcigVt7ufR9GLhff0yokjpG
fMYfCgbeDsfv+QMPt3GJEOOoMTcDvvugDXxa/8JCGIK63NnsbffB3vM2jXNY
BrTU5+bnTkWg8u2MNTqaFb3sxyKtNz2AuuWIj94PGXK88m8RMXuA/KFnr5cl
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
XY8LF0SeVvunqrZc1P771ROvpg7Vrmsa51Zyce/unPb3L9oY0xdO2ceWh+RD
+w9N7laFR//0r17lPFhRD8lVcXNii2mMhb9bHvJqD9ucMpMlSSPaRaJReRi2
6zh4SEqLSFr9oZ+pzkPh/UjqvUFapHus0DX6fR6OnfS/kDAnR5ztXRrUt+XD
rM2ns6aLGWtTLBz/SeYjJN2psOiRCh44d/lkOeRjOXivT8olHfDN3hiwvpMP
Wbci20Y2TdSeEhOkL8zHI96uqfpFcZh9nA2ueZUPZxuFkRHno+TTufh35ykL
cFr6dKXJdXUS+FlPnkugAInuNWnCN3UImxdFbL9JAfhEpwibjhopXC35EnCt
AExcWvO507xE0/eUnnh6AThLTtQ8jJTG5Bp75vvuAtRUKCgIWWrB+3ovZcz3
AmhG01g5btEF/b8AO03O50jkNjC50qSCuDOWDoIaz5Hp+XKXoAw7eIYFHXdc
eI6suTDztNeypEiRyvnHo+egf8v5sW9Uiyhmj54Yr32Oeq49TYwROqRrV/7J
+tnniDm3VKW1qEwE0VAyuLkQj1lTbuzg3Em8VnMlWtgL8XoTRUH+qDwqs2NK
y4UK0S1pePlcuzYojgdI5agUYjG/hGTe1oXG7nPlTywKcaRi1uP9XxWEdVgc
i3ArxFeBu7/EHfZi6IZyZcCNQtCufYtWq5Yl7BKCst6RhdDvljn8Y682cVxg
rnZ9Vogam497Qy/pkmdJlPLWVYX4cKCulCZClSyZLtbo9hYiuuBN0339A0Ri
66iC4nQh0jJ+j3boy+BqXUOdyI9C/D2hOnVESBv1F/PATVeEdXGadOpyPWzh
j63fw1kEu+0ypjv/qMNgMkCZVqwI5Pv2IIb6o4iOOte4rl4EWZVaL1k3cTKm
Zam6ZF2EWKG2+1TGmuTAX+XmqfNF+PFGLqw6TI+cLhFUHwwowlWeofGWCE1S
cJqltflREQrjIg6lQYKs7qPSLM8uQspRrqDPHIKQG1psy64tQqqOmWnCtDoC
Q0a1ngwUgWXuh6Gtmj7aFRo77s8W4Wku/6REkg4Yv+XpBKwVwefyQtxktQLM
s2K7Lm4rxmANy6O0dkbyxD5Qz/VAMTZ16387vcEvpnee77GSLIady6trLv26
5HC7pYGudjFmTLj3m+3SI+5+Kn0K9sWo3fNvlKpQhZSJHTUS8SyG1JWvN97n
M5Pf8ywDB28XYyRI6eoxdXmoJFKZ7IkvhrKPeWlzsA7umiwNbskvhl7hOJOP
uAH6t7wyXa8vhu19GoHXXzTBXNs4vDhcjC412qXUQnHYeeWbT30oRpNcQrNX
6VGSdiju5cDvYtz0Dwu+e1SDfJwItGxmKkGbpGKj1kN9IhJ5/lUZTwmEntsy
VwvrEh9NK+vsYyUoeu1stlFmSe1vlbHHeiVIEFhm7slfV9xUfNT2vmMJrl5T
vPDBSRk6p1gn/L1LEPknV1zthh4ecFDbXwwpwc04He77CQYYHVh6c/JJCdir
9yUYMGiC884rB6vCEuTvabPo9hOBi3zTlE5zCR6anZiUFhYjOV/yHRVelcD4
D8V+hiua5MuzuHfCiyWgaFwNcrUzIMfsgpwPUrxAXj1V21ycLrmx48LM7t0v
QOMVHeHGqESaW61cthx+gWFGjgvyg6uK9NdVZ9fkXiDUJu/WXhNlmIgKuS4a
vkBSJ93En3Y9xM2xzk+e2JCXKb4+DjDE5GPq0wO+L2B54yz/00wt8Bovf2gK
fYF5R+qhhOcSYL+pKXsq5QX833+T4FoXIUz5yaF05S9wPLhsKU9Ui9CMr03k
d7+AVl3YVwURQ7JOaypkPP0Cov4uh2f+6ZAVqbybq/+9QO4vV6VAOVky60Iz
ELutFBfiApe41fkwFulwUI67FDrtxlT/3dBAf335xcljpZArWJa63GCIlmWm
lgCDUuiWl+eqHDBAFYcbM69LKaS/dfedEFVBoU7TqfYrpYinXp0iW1oUMy5z
VJ6NKMXVxx/OJa8qk4Rnl+i2Z5Qi+cHmN2WV+uTBcK9tcVUpeKUIk6aEIblN
dTjfvL8UNeNfWORm1clVkYC/P2dL4ZN0oeTyNDdxdxgzfPKrFJbBVH+OZcvB
JWyDfO4oQ3/0ZY1L/HqwqQr7Os1XBu3dZNUhwQiGH2ZVg+XL0Gf1pzBJUxdq
zHjEb1IGuW4G+t3kGGTV4ua6T5XBLoheaYJfgAh7fZH28CtDeXrjHK2QJuFJ
1rm7K6oMbGtxsttojAhbb9pYWVYZKrUT/u6RMCCMv38fsakrQ9Izq7ZTWipk
k4CF35+hMhzxpaasMnlVt2b5vDd5oQz2fvreWfwqWL5Nu1/tXxnoTj/67NBj
sNEfO3nO7y5H5ocH2b/7jfD6XVXjPYFyNClsjhQn2ujdvnu3kFI59n8PoTzk
Ir7x//zJAfNydIik5/uUiZGKs61l3mfL8eZWiUmWvjYpiOeiZQ0ox7bW4VLq
O0Ykre2ydXVMOURcRdNo+QxI3PeBHIe8cpxzOxgWEKRM7nMf+U3ZWA7zmzYl
x/b+UgwyvqWfMVqOAB39VFoeVVy++SZJa6kc3Rl6lruTDHE+X2rlE1UFDuVS
W6QIG8N5PEI5grUCHTxrsYLhOrDauhApJlSB3cN0vyfFJKEvrfJ+RLUCBkYN
I0kMokTl5GPJK9YVsLATlW6Z1SLHolaDOdwrUJwX0dJXbUSONui/IrcqIGhS
aPwj3pAc/PyM/0RCBfhjXINm3qoSln0U1zYXVuBMDuP+P3KMhEHXuju7pQJ7
vm9LNXyrBKorxfv0xysQmu7/X32ZAf57Ru++slKBHD1hX4dyYywOu9RHba6E
EfPc2vATfUxT1e2Q5qiE5XT81MAWRYyKsJwYE63EobH29J4aLtLt4PHCT7MS
DYX3I5bT1UljWAfNAftK/LcwIsjtYETKqw5aNntVIlzm5y+Hn0Yk78O1rFMh
ldBRzObY/kGLpDKPrNElVULP3pyGMkWExKoJ6RaUVMJPJrrV/I0kwrzuPDHu
qESHCjOfq4AuApPfLq1OVqJLy8/4QZ8xfHtlELdaCau6RwxiH43AKFQ620Fb
BRsaEe/v5ppIDxcJ+8VRhbMCpW6C7IKQXcoVOypahajQOx+yP0qSAb1Drx3U
q/B+rD6WiUmHnM5LvfnAugqJ9R1Z8/LG5C89J1/j+Srsit8/f5fOmESfje/+
FlCF+6/4aWV/a5EjXbsv8sZUYcTB6orSZzHSKPCAzTKnCjt5Bl9sEhaF1T36
+pC6KhT9Sjq0VKiF5YVg16rBKjD4W5sYuRnjtjbVtsW5Khi1GO6nUjIBR7Zf
yb5fVVgu8NTK09FHMe2ateH2ajRKxG2SXleA1mlvigDuaqxId3K57mEhU22f
nxVLV8Od80Iv9RdV4nPorP573WrsJmHTFymMCMOduW97HKtheDbvjwOTCUmd
c0rQ9K7GXvWLfkeMDImMxhulKyHVMB+R9c2uViH9GVbzOU+q8dWX2y2Jbgtx
pRkOnyishkrolOp3JyX8djGUYGypxrr/8oFmdwNENXeO4XU18l5/qxzNNYEA
j0aA51I1XrW32YtUGqM+qOFQGmUNTpZfaICkNixm5HuH99TA9KuO6/ZDYlhS
qfDeLFCDQobk+QZxMXIrVXzvMcUa0Issnj1DoU3YqZ43nDGpQQp5uNfzvDEp
dBI4/di1Brtv7pW4J2BCNBsyGHuu1mDs/fLKXWZ9Mrn/QOnf+zW4UhOdcTVb
gXj7P7EVSavB9Dxlz/YSVtC9ZaFyLq+B3fz5Gxm+akhBVFZUVw2mpF4Lhz01
wrGnjIYtUzVI+M6aJiRjit6/d7//+FaD3LW6C6YXjOHiQPPkMG0t5KS/s7Ka
aeJXrb+KDUctrrtX/t7FLIDIfb8/hIrU4udr9i8WVtLksJ9vRK1aLU4+jK1b
YNQldRNfJT9b1WJ9O1/xJQYTYi5/YWL/+VpU/pBrfGlrQhYfLwSaBNTidKX3
73tteiTwlwv/rUe1OO/BpzgqJk9Ybd/2lWbXYurmHX2DHi48r7L1ma+tRdm2
Sh0Hc3VosI9ysA3WIkou9dLUJmNMXDFp0pmrxbUKZMQ8NoXX654z19droXM8
xjf2tTG2ymgzFTDWYaFSOi1CWwvJcc1lUwfrcK1S3NFfRAhSP2G/Q7oOrqN8
whzBkqTbsppaVbcOlTfuP798T4ecKJfK8T5eB662Z0H/DpiQdeZio2cX6yBK
s0b9ZNqEPPA5+t/onTow3lJ4saPSgPC9zErc+qQOyi9rp30KlUitJI+aXGEd
Hhf4SX0LpYbZo6cfzzXXIebD4NuL21TxcZX9YdKrOkRLXTHpdTeCv1mMdP9i
HbZQzPqRQVOwvNgxSUlJ8EyTdS3ziwnswn6ZvWcm2P5DcMr2lQ5SXWa7WgUJ
juqr4YKYGObl+1SyVQj4BBzPD6ZJEsE9lZWhVgQ6PK3v9F/qEq+lVJELFwgu
3pK8ltNvQspbwjKNbhGcY9gU8nvchPxO9OEUTyA4vKVPkXmPHlHxcXy0p5Ag
jOX1oJahFAkx0GH42UKwZaefoU6CKHr4JILGxgmud1QwH2zVwc5/+9ZrvhBE
Mh9csDlgirxPQRV91PVgahboOyJmht7Rn9/qGeshMVByYt7YCF+azgsXs9Uj
h2nntX+flbC7cNotjace1i6V8SM3mYnUE8tn0cL1OGewJN1Ypk6sQ7rf3Zat
x5+WrN9zocbkurfyPl/1epx808AvMGRKkhzLrE4b1UMw5OGl7gPGpEHvSLS1
bT28vyr0EBU18v5Ycp+Oaz2E+A45ewpSks28e+jlPetRffXOzqUEFfDvuKdx
9Ho9HqT+fPr4txH0/vwN4LxTj/ucRy/oZZjhwsLF2u2R9ejS/Nhg4GKKhyMf
flIk1qPAZN6jZrsuXjTYS3zNrMf302rPLiyJ4mX+oPtMcT2+es44vdSQImvx
mrnDtfVYiHeqLHbVIxzBNXMt7fXQZlmfcrUwJYpeogfLh+rRIPXX6B4xJU4O
z+yzJuth8dpkW0SuAbmlszc+fqEeeo2SSY+fyJNnUg+G763Ww+dkmlVhGx86
DtIwXf9XDwdJ1Q6FKC0sMl7VPU/XAPXbnz5bLpmA8ddysMOeBjyy3RzaJmoO
0fkTjYb7GzDaWuTNdN8EZkOv/igdacA1j+3871U14UP0ZcSkGvA92TOcx3c/
4nMbvbmVG5DCFpxmlgdSEytduFuvAXvKPBM0PxqSyaC8TzSWDVhKni/qPmpG
KD0OHPrPqQG9Dx+kvo4zJTx2Mc4fzjXgWzCNt2qxHtHQok967duAj0en+iee
SJEzEv6vOwMb8FSw4bLUO1GE7f++uya8Aamq5mLxNrooYHAzyo9rgPT3WmqB
UVMM/JwMTUprQG2KLr3IPXOsvjdtiyhoQPsMx8FgZxMwD7RTBVQ24JabYMN2
CQ3I1CooejU34FV8UlBE2x7YZRdfOdHXACONx1oVUsrkxqNDpWZjDXA7QX03
JtiIpAQ8WVGfbcCDQsdQnlgz0nx+h6D0ykY8D5UAx7emZM46+NThXw14bxdC
W8eiT7Zq/Epl29yIi+pWUnfkpImgmMck3Y5GvHxvuFbiJQoDzlm233sbMZD0
xsHNQheedDbmS3yN8LjdfP/AJjNE/+h9MCnaiCOyciyG6+Yom1bt7pNvxGz8
DVb9faZ4qRXwJVyzEYJJ8nLjF7Xwo6COWc+kEeHdH71fGfOBec9vOTr7RrwS
Hyn89EyeSF+TcWo/tWE/Z9lC98eAWL3zCQ72akSfUO1qn5sZuaz5IlfNrxGh
1wyr5t6akbj8L/1UIY2Q/GlvkNBmRCp2Cf+oj2wE0+PiHIc/yuTVlXN7byY2
ooQ7fviMFB1+TmUrKWQ1wvZKwkTDIXWwasyf/FXcCKlzNjEyUiY4lscTWlnb
iIxPZ6G41wJWO50Lfdsb4Uaxpn3dwxyXLz8dkRxqhGh12fgRGyPETU6sf3vT
iEfljvsic4BKNfb9xR8a8buIfYNC7idjOZbqHt8a8T7gd6oQvyZZZ3rkJvS3
ETpHeSUP3Dch7L6DEYu0Tej3SfV8FGFOZN9sL83Z1YRnbDKR536aEhtV/bHT
nE3wcuLoeyurR65m3/vHx9+EDF435jevJEjC9naeWfEm0Cd8N7N6KI6qSzQ6
aYpN4H30lJJBUg9j4yruTtpNmHE++WnslhnWlf2jucyaIO46v9Ov3wLsWbWV
bxyasH316O3ADb0c46/Jx2eaYMDBkswgoQc772ObbLybsCTb/rnyrjiuj13i
Z73ZhBUT82N/1yTIE6USg5d3m+Ag89dA4ZweqXm2cjE6ugl7Hj6w9RE2IxMM
QvEmT5uQxFfknPrVnPz2OlvHlLOR385Dzxq4TQnH66yZ3hdNyOUX21GVrUUU
MEcbTprQknPbJ0XuEHHI4BbS7WzCE+36R/gsjxv0TqZbR5rw7k+ShD2tEZI8
ky63TTUhwSfMu7TcHHWj44m3Pzbhbu077QYeS0wqsDWpfm/CHemt1ZKbzfA3
zeIDJUUztLNdHVnWtMFJF72tnq4Zt8Xf2xmGHIGix4DYjT3NMHt+L2aoW5Y4
vGS0kt/fDJqYS797Bg3IDXk9v3WBZiiYaiBj1Ywkpd5NrZBshlLWsTxlWQtC
aNvafJSa4Xh6KfH8mgl5e2HTkoRuM67YxpKKAk1CMaK885v5hr+syRPe5QNk
v9xN6SLHZvjuIaIapYBSSo2d+9lmaH263LCSaQTHLesBR32a0X2FIzdZxgL+
56UzP/lv6OlY1sfuWiJ5yLs7O7QZdkZZVzMszFAvU/zlVEwzRhu/1qQE6ODt
08/MfCnNYE1eDpu1PwqKzUfl3+c2gyIw9NR+blmy/5ybU2pZM4w2qiNvrQFR
HswMdmxoxrb7OqyZHObE+dhsLmf3hv6Kxu7+dAsSmHRwYOJlM8Lzg1Nqc0xJ
6ibHHwnvmtF38LKhwS1t0uiWuNd6sRmrz6e7e+gFSMnC2bMOP5pxr0x8/y8T
GaSflq0+QdGCLZqMrtlL+oiep6U/Q9cC+rFr30w37vfbrqM2F3a3QMUjoTvz
pyV8ZjNyLnK24JxfANuzEQu4univXz7cgk/219/tWDOG5YyKzg2xFsh49Sqt
nFSDlvOOhCD5Df+C+ofHVrZC5t3UQohGCyKdabcHKisTAccCmftGLWjnkztS
FGpE9k5dvxtl04KaInV2z2RzwuCg+zrOpQVUdDw0rFssyZ8JNv6kCy0IGytj
4LxlRpZtP1xOu9yCjM/st4OpN/jtWFl7VmALUryMmA7/lCZ91rdZC8JakBfN
TzX4WxD1r0xPl8S0YEL9lXlYkDYKLQ9WVCRvyE73d32fN0XKy5UtdTktiItI
7YiftUSkObFsetECkZSo8qO7rBA0HJ7ZXrchb80fUz5jBm9Tu/962luw49kn
lhAqXZwcFNAcGmxB36fjp39+FoWF8VrMq4kW/JfxbT20XIJo9rfNvZnbGF9q
rrBzUJccM4yRmllpgaSOy8wbHTNyuNcl+MP6xnznd557r2VJ2PTFXy5takWt
mewc2ykLQtdNyfeNsRUvMh8Hf+wwJus6/Zd+srbi1KNgEW9HNfKpI6nlz8FW
cK00ZcTeoiMTWuf3UB9tRaxk2cqfCGX0tMmdpJVuxd9r8mV0rMao06Ar3abc
CqZ1evHWFgsUtLzatEu3FWqhB/0r563wVC3TjNW8FZLsArbmfJZ40HQpfd/x
Vngr0NrEdBjDX0Vt9eCZVuz6ajrLb6MKz4adaocvtiLxRUnus/AJRWeld1FH
/VrhcbWPK69RZYORPJ8Ru9OKfc2ceSe0jYma4g3xYw9boRSySONrbUEkavWC
FB63gvr6koVfkyXhld87pJLRCobeKZMxfXPCXL1wUOt5K+qexzDqVxiQzbIV
XvqVG3j42H7deV2O/FcR3GjS1IrjBr9kd0Ty4YO0+U6rnlZcj3z+/rijFl6X
cTvbj7YiTFKGvK83Rafk1yLnd63QfNFi/8DUClUv6ilPf9rwN0KXoIg1csUj
jM9/b4XqvWCdXRIWeFJsn+L1rxUSPjV1uwsMESYq+MV3axsUBZcybjnKw69w
XclvVxuOeof+0jfjJReEOx4E7mtDOiPLE5cRTXK8IPbtnUNteDD3VWtOypQY
HXUVCRdtQ9ARmSPU5yyJcp6Ef6RcG5pTRMb1py2J2BHq/lj1Nly+yLRX/I4Z
4c4Z4Eo03BjPy5s2huiS3fzJ7qnWbZBW/vf4VJ842ZR1gWSeaEO+ccd5/fPi
+M6nsD3/fBss7jV8u7hLD4rTKm33LrehWFY2aFOGOYITtW6eDmrDLjbnOsqr
1ui1MpDWuN8GzTHbm36jVmDebfaZO74NHTaunqVjpnDos86kTG/DXhqvUJYh
DTy7d/z4VEEbdKatSeo9Jiyrn2SprWzDWHKUiNuICpGiPNuX0NyG87OHK+I3
+usbNR53Lve14QDfDztNO0vS6usDi7E2nHwULPPXxoowil//T3y2DcdYe92/
TZoRy+WA5ztW2tCzUNnxc5suSc6+c+rzehtiG7OurG47Sj64hHP10LRDbFwK
R2XkIbI/ajSHqR3LR7jYeNOMcHk8LiJkbzu47lO9TT1jifqYJE1XvnYY7p0f
cBGyAa1J+j9V0XasOZr7fbxoBaNtOeUH5NsR80bSXD/EBPHtz93/abTDonXY
b3lJBdNBpYfeGLcj8GRjj4f7TiKA6qkqu3YMvrg5t3lOg3it18fGnWpHw5I1
VVqiKakqbTX08WqH8zZHrUhpK0Ll2b3FzK8d1TN1Gn89rYiO4CARDWkH9Y6f
GlYqZiRyftR3e1Q7PgQpnHZr0yLjqW+ElxLb4ZuTPiSbf4DwOMzMd2a1419w
iPpXKmWcY1t4mlXSjtRo7YivM8Z4MbxsGVy3kc/WouvDhlb4HbG63aWjHRm6
haaemTZQ011vUx5uR5ze/aHkQCuEbabw55pqxxu9Br/jSiYYbqA59mehHR1C
ez92fVLGPj/6lbHVdkRplmym2stBXI/tyKr41w65hhdmtmxapOAbs2MMXQdO
xI7Tx/KYkR8FHKzeezogwCJy3Dndiii6Hew33t8BSyrtlowWKxLMezhE+EgH
uOL+KzcINCO9b48qbZPqgKpQmYKvgDZhfiL+86NSB0QeWwyL9B4kDpYyhe26
HTj269J/zG+VNngKTj+z6IDE7i5D0xVjLPeo7b/l1IGe78R+/o4VpO7qvHI6
t+FP5WdOwWKLm2pGD+DbgUaL8ccrR63R/s9ca19gB6rcjKRruUzBVG1L8Sus
A9VNUu2H51Vh5eNU8Sq2AzrL0oVvt2wlyaKnPMpSO/Cghipa4ZYG+bB47nB0
fgfea6m60b8wJSJZXm89Kzb0lHq7bAqtyOUTl+MMmzow5SFDrXjcmtRz3jA6
2tsB69xKm9FUc0I7FkRL/7oDsjzJPM+k9YjRo7v1H2Y6UDoXxf9BWoTEGUVc
bl3uwL/269VyNnJ4R/9IJH2tAy5ME06b64wg0JbwIWBTJ77O2T8P/mcJr8Dk
5OPbO1FYeSCV0cUWVQrPrBTYN/SCHOEqNjagWstl2svbCXeW618sGc2xt0fl
G4Q7kZtGV5i+SwcSKa9HXGQ6IcmsMhT+kR96lzwq7qp2Irwjj606R46c1N7y
uEC/E9/SV4WuLhiSG/uS/IYsO+F/df8l4YcWJOaLhONPp04ErJ15lttpTZ63
dKnsO9cJJ7+oXl9+a9Ie78yr4tMJpcg7D0Oazci782tbTvl3Qi1C3m/omg5Z
V37wMfReJxh1tJWnrI6SXcyHegqjOxFqbqvspScLwY+1z0eSOjHP9NQmkdoI
6nVmketZnTi808OQV9cSDpGfvLlKOlEhNFnP5WALH9dAS7XaTkTHH2iZeGaL
CFk22TNtnVhuzaTvYLdCFmMhx/2BTrALJBXmyxmjflrjX/F4J+rMN7PUbVXa
qA9v3o3OdoKHMefjlrYD5Os97+bfnzuhuSYizr9di9Afp888sN6J4Z2KPvaU
ZoRHPPWuxqYuKLucjnKhtiYKW2TOnWXsQlJQpd5uSxtiMd5n8IC1C1/id0UN
dVkS9+euoqUHu0C9PyImt9aYhAT92TUm2AXVjHGh1e0qJNky+sdfqS5M9/ql
RifuQOWRI6+5lbvwtX/cVddLA4P/Gqq1dLvQOJ91fm6Dr3wcsko6b96F7gSr
b86L1qDO+uwfebwLpe1iScbn7cBxPfhE+Zku0CqwaKoz2ULSaJ/GxMUuFBWc
STmy2QIGPC8OU97ows9Nq0bWtHpw/alDzxeyoffkWlzPFMHN7ndLOpFdiI66
ZRSZcIzEJV/ud3/ShbSz6QZ2/xmQQu/tJdHPurB330BoWLAF6dB69qiysAtB
df8KZnRsyDSHwuXJqi58etqUkalsQ36tDNlQt3RBu8bpGzlrQXa3uCkc7utC
LmdyjFmaATkaT7lf//VGvhe0v63USxON83FUXjNdOM2fUPg1RxTHlYVnY5Y2
5heQkLEpSQ+X97S2Vf/XhXF+5fLd9hZ4sGCX85ayGx6Pra0/+tgiu/ZbGA1D
NzQMDxLveTs0PrznLsDcDf3/ZtsCrtlg7OQBE8P93ehY0tgXG2KGbzIVEt4C
3Th3Nmmsu0ETDIyGLPES3dBW65yxd9oL3unZtVrFbvwioWssB5WJYtn1iWmt
bqxvnZPYes+YWN7bRbaYdmNn9xGz9J+WxMMhJ0XQvhturnkjcus25K6Y8i3j
U92YfuSs3MhjQ1I3v3L18ezGhzNiDCyPzEnV2AXtx9e6cSzl1FDhiC4ZKqAR
rL/djaDcRzs1O0TIYuATxtmIbqic2VYWQSmDTZbiX7YmdKP7Vb3Il3+G2Hek
c0govRvBvcfte8otIfXPscy0oBuWglKR9jZ20NOvD1Sv6Ab7O8z06djjxGMu
Q+nGbsQ6d9YfvmuDqws39vJ3b9jruVZe8jTDA+nJefaX3XhmvvP37SRNPLut
8ILhbTdqt45JLR3lQM3QE/+/Cxt4qBm11LQrkcEDv/VWvnWj7tZDqUFTY7Lg
bss2/acbXDbuXSnvLAlFXdXs0JYeZFLrH3EWtyXMDOzFLTt6cI1RY9JizIYI
2ly5Ub63B5K1N6sy3lkQlaxXOtm8Pdjjy9R1Jt6QWP2QZnks3INz/sKvx1lk
ibta7EyYTA+2FIfEPv59FMGRP57fUO0BvdL8L0NHXTx5a37dQ78H63tOU4hS
W6BYqFTL2bIHpd2yRpkZtmi/vnuPmVMPoot6JL3e2GOy8+I79bM9OO8lLqrg
ZIfvrEP50pd68FKE0rTGyRIMp8Su8t/sAb/qNsVLmw1xsPShxt67PaCmC3tr
cEAax6i/7NwW1YOdowoDNxTEiIGx0dTfJz2w+k8yqtRRj7g8fZ678qwHTsI6
d4omzcm1JcbL04U9uPM6Sd4nyYZEyl1QG67qQXfXl4HRIVuSdbeHqbW5ByrD
3+/NWliTulHBN+W9PXj94uno9cumZJg3LDv7Vc9GvY+wi/+sTj5e/HTp8XQP
TvzV8zwsu41QNuqohC/2YHJCup19WAWsTDmMN3/04D3/dhSVmEDIYeu4B0Uv
Yuvd7/xttoZa3ulMZ7penF6zO89fYQ+b9baLZrt7wUzDLNbA4AAPrUNKGpy9
oLn0e99guQ3uxAQzHDvcC9mnj/7t4zVD0vvZV/xivYh4HZj21EQDL8TUM/bK
9+KlkOVM+iQDXNNAmxPaCwaifuDcf3Lk+pek4cePehHfS7Mor3IEUfibHP60
Fz4Zwhx8e3SRE25//mZ2L9g4YuUseCxQP14j41nSC7pQNokDB+3wkp9j84na
Xiz1hsxwNTtg0ffaoFlbL0qbApm/lNqDqnUsSWOgF1U38lNo2azBtlv27LHx
Xuh7mL229TeGiHO8tMBsL54+Lewp8wU0Cn9Sc3zuxT7NzNhL4zzE7q9l/7a1
Xhy8qaqaJq9NvPTKn/yj6sNt3LsotmhGQhKYz3xh6MMLYYHZT9dtyNMPlyRn
mPtQxN5Fce6pHSmTGqEc2d8Hxlv3doZstyXdtyR6WwX6cHiBk0f7rzmR3d5F
9VCyD/eDWR7cCtEhWfFO0rZKG/Z9lN0SDtyEmefnWV7dPhht4Y/S/qKMoIL7
yZ/N+1Dw1SjdScUUK8d4Ryod+xAUyXT0xzcbODRVb711tg96q1R/xFYc0K1v
omjg0weps0yS+mkOkH31wYs1oA9MwSt6tKw2yHK+mTkd2gfxtSMlX74bg3lp
z0ReTB+urRPnLekKuOWbx+Sb0od29ncUBw+JkC+UqurKeX2oFIX21iv6xCHs
9RX68j48KeRWYOW1JN3MHgUjDX2Ifujq37vNjsimbJ552t2HHNft80UNdiTr
SCKL22gf8l0ZE835rAlzmbiexHQftg2d0DpLjMktpU7/v4t9OHkh7Fb3BUXy
tdOxtP2/Phw9tirgHiGEwpxf3tqU/Rv8ZFGNt08f8581Igo29+P0tWO8u5is
wCkZmb2LoR9Odr4f+n7bw+zqm6bLO/rxJplPzHDkOELJ4ck3zP0oor5huGhu
j8ZN3j9VOPrhd0itV/O1BX5qk51ZB/oh+mhbj3OMDoQj6I5uO9SPA1Hb/Fuk
98N12FzTS7Af5S8pHbe8UCGJbClOo6L96O4OOHdFduM8Oixek5fuhy+jwa9m
cRtCny4dkyLfj9q+wbanWvZEZSGwcLNKPyJLy5OHaO3IFaHezrOa/VBfVhj/
mGxBCi+yzfbr9cM6v3bpTKYuma9w+Sdp0o+fJ75qDq3yEc6/z9keW/YjtnfL
uyhXZZir/hKnsO/H+du8LZ+UTBEWomFw0rkfAT8tu7YY2KKx5+HpzlP9+Cd4
RCWq4jjWdr4JFD7fj3zxQBnnd8chYnU4MdqrH3n8ln+sGm3hmnixfM23H+wh
3Vxsn02ROF034ODXj3rP8B2qFKoYPkS32BTYj1UZRbtdGfsJ/Xnzzfwh/Qj6
IzAT7ahDVIqT998P74f9tk2qlOoW5Mp/n2S/RfaDLXPcI3pjPxTKS5tbxfXD
3VnVtbnKnswHBLrXJm7gydK3lY7JlnC29dw9mNYP/x0e+uNnzYg5A1v6nax+
/PfCamu+tzoJM3apW8zvh/yXJDnByzRoinn+yrikH/c02ut5nbWwPr7+tayi
H3Q58jmM8hYQPaCxjaOuHwb/fxE+ZY/Trg8PBTT146j458QKG0c8zZ1Qnmvv
R2NFsdCV58fxcuWQnW5vP5IsjrM1XLHBNqmLPoVD/dCXuN3g3m0MtWt1D/a8
7keO/bEjJmfkcK1+a+7VyX4cnlQ6dtFVnBTTmLdMzfRjx3iwX+wJQ/JBJ3lK
baEfFSxLXtuErQjXg09r2csb+ETz+rrx2pM6p5vZxd/6McZ2dejuL3viIL7L
uvpnP0IMM+bp6W3Jn02ZtM1/+qEho/A2Kt+MPHkpW9FNNQD/U7cPPtXVJHJZ
vadGtgxglsM76oM/Exm74swyyTCA5WSpvvoeVVzR/dE6t2MAf7vZhCNemYJ1
3z2fz8wDyJqVKJl9Yovy5X18P/cOoCWMmIpzO8KivmiE4sCG/ffaCzJpjvjx
UP32Vr4BbP2olyd6wwGPTryW2HlkAKyTTZ8PqFhBQvL8e3aRAdxIcrCZfGqA
4c2U0dySAyCzx924p8Rw8VW0qqDsAE4U+TcJMsmQnTmHv0lgAKGc0rpB5kak
6FpNqoLaAHgXHPOu6FgRI30jEw3tAXBqR8atitiTFc73lIYGA0gL4LRuvuhA
IlZ8iyxNBzCvVs7CumhLhBrpnRytBmB3ciDl16w56Y16ynTGfgCu79xXrgnp
kPMnxes9nQeQZFgT+taAhzBIt7lfPTWAzTGjD39uVkYurS1X0LkB2Nq8ctjd
ZAKdseXeUM8BaN3Wb7v3zwYLuYE3on0GIHacqfDAfkeE+DELJV4bwOLiW16j
b444ZJjzJsN/ADqJlG9j64+jdb9ieMHtARzVk1W5wWgD168D8uX3BmDIlM5k
d80YNM0nF0nEAHbPUNBQcssj/dHa4/boDbzTe1kkFUWI2qlw3YH4AXR8Xn7c
QaFPZo4d+PU6aQAuGQ5nDZgsSSBdac502gAecM52idfZkQMTWjafsjbW21BR
wW3KgdTnT2xdzR+ASGrBmUfi9uT4TY/K38UDEDZ4l7Fn0ZL8Ndp0hqZiADQT
tFfM9QxJ4sE4VsbaAZgke05scZYk8qtH2pkbB1B9cpQ5lE8aEy3El6ttI97A
fSkdbyNcizU9dLh7Y79tW6P0PmMN9jPzL0UGBrAQzFfAlnQcVbLXgmVebozn
6FkQL+gEa4btUirjA2j8cdU4Ot0RP9+kzuq8HcAdij2ykuF2iH0u9ch0dgBC
4pXMRUVmkAroVLP7uLE+w37sJ6COlyYOqy6fB/CWXlziU9C/uks8X9POrw7g
HyeneE21Btn947apz9oALjyyFlaoNSMv2tiob/4d2OCPmctSwbbEND6/+A71
ICb4+x/4fHYgX92UnR/QDmKv3cSt61EO5KH8yI74bYN4wN2Wo7JRv0UYzzSk
7ByE+80rPP8OmJK+qd8eOSyDUNzEetW5SoVcKHqwv4RjEB3XAinN+PZiWxBP
f/WBQWRKp1DOhmsjz6ziZjPfIJy+GwZxJFhAj09PuOfIIAyfDy7fo3PAp/+m
JkdEBlHx3vHoQ04nlJ2KaNSR2vC/OODZr+0E/1HFZ0RuECIMZ0563nSAruby
XQnlQaiuZQc8DrMAc3ni+WyNQVjzCFqWxmniHZ++MafeIFZ5HZ4fWfpWlxfz
WyLKeBAnvgxujzHQIr6b81hpLQehXpj+1pZ7g0/72P6+bjeIr9t0m7MX7ci2
Obq3X5wGYTBDU1gRf5y8Mq9qcj01iLktHfd/99iTtJYzmePnBnGzh4twtVqS
C5JsoUZeg8B/kbERT/WITEb7hRbfQbixxHotuPOSTXsum8j6DaL/3OMpLh5V
9N06JPU8cBDzF//eYO01Q8LqSzaekEFMp+aOhAbb46RL8J+48EEwT8iwDGs5
QWRY8t22qEHE7qtxuZvihF+qs82BcYPIeMw1UBi4cb5KorP+SxzElT5N+vo+
SzzkVgs7lzYI+XM8NCnHdWAX9c39XdaGnMez1lXHBD7qNFOLgkE4NnpRdf9V
J1+8TKS7SgbBkHWh5KOVOamZptyrVDkIG9bt4YvJdiTYpOjvi7pBVP7nU9s9
dZwYNzpO8zcPYiF6E1PFMwfCIcbUmtQxiOQbL8elOa3JfArJ3tU3iKg3k8+q
KIxI8Q738JDhDfzOJC46bBEjfgGcnn9eD+L+24odD88AWl96zLymBlEaVlZW
5WWKXU5+x+bfD6K+4Lh5K7HDZL8gh93HQRxciBlsUXVCttLEv/7Pg2iq+TPv
TO0M78LQGfXvg3g6/bdb5bYjsF+urWp9EO3uNgVdP6xB9+BjjjDFEFpyf2tH
eRli+F/8/XSaIUTQ/foTYnQUT921vdjohxDgd1LIVFWZuE39NL/PNAQGnSeH
m8JMiYRhlgw18xBK5Q2ummfZkn91lvsu7x1C14nhA00zx0mn0BbKpf1DSPCx
CrUpPE4eJZW9d+IbAmP5cbalXbbEkdG1/eWRISwf7hdfzTQhR27sydMVHULO
b+dT2XsUyY+l5oh6qSHw3/sv+OtNcaR/rO5kvD+E6wOzHsvHNMmFWENut6gh
hGV91EqNXlOUVpu51hI3BP0X9bTOWtqg+OIzvD9pCALCW75qxVqiM5Hu6PW0
ISg+D1yfmj6OaJ2k26NZG/kqMfyxgjMc/hOdFCsYQuJwa8abs844nN4idb9k
CG4TdmKSno74YmQdsVAxBNoYae4/e61R9WdxXq1uCCp/IsK7vuvhVo6/UnLT
EMIfUHB6BhyEgeXu+F/tQxD/pKOT26xKWDdlfbHo3ZifygmRoXgzMl0op1M8
NIThMTVqq0A7kmvfl7rt9RCq106KnTVyJN50J36dnhyCsCT1FyYZR6JY/sO0
eWYIV27/1t/9y5bQutzL41oYQpZEkupMmykZZOKkubY8BFbH+Fu3SpXJk9oi
+5ffhnC4QIV5b/IRnHRTLxNdG8IodWA8rbIhhFheM4b/HcL3r2Ro8xEb/Gw6
d+oD9TAKFZ1on844otGDol516zBUjWO0oxqdEbYvmvUp4zBiG8JC4esMi85D
nuu7hnGj2dMqhc4RXL7VHeZsw+iZWTM58dASH7gNDxZxDkMvS6SUd0ILxf3T
Vxl4hiG0Y2In31iD4nU/n6FT/MM44bPW/k5Ui2gI0Ak2CQ1j69/luMSrFoRp
NPEWp8QwEjQ5xule2pPXQaJvrsgMw3M65OD3FEeSKtIiOaI4DMWA8c//HXEk
595Y3RdRG4bS9/ujVEK2ROre4lyo9jA4jmnebHE1IRTS/pg3GMa9inqvJEN5
0jmzK07FbBhybE1lihmSiHqQuZJoPYzzrk+HeEONYacgp73mMIzkkyMCP1/a
gu9jb4qZyzD8PXaVFd52wkqM8/rzM8Mwiv3ilc99AlWqP0zo3Ych68uq0B3p
jFsrd3NdvYfBwO+Z3Nd+HPqJ+zY1XtnIv+nXtMfoxv2sU2S37+YwKnfu0ajr
1cDbH2qll28Ng16h4PO8wk6Sk/Zq2/DdYbiV/rmUvNHveRudcxWOGIZTnQ/j
rL8lUfzzr+5e9Eb8mUc+Qo8dyJacKJa5+GFYVse9XR9zJP0WhzyUnw6DNmH1
FMUxR5JAXd3+JH0YE7zSzd2fbYhLocGBn9nDqKijSn81aUyE7KevmD4fhrBS
xpbjZjLk51afwYIXw0il3FTSzi2DhrKtR+iqhnFk7+etBpdMcO9EYtBJsrEf
rKdXC8rtYMYkOlHfPAymjgth7gtO4KxtluDoHEaTYkCk/6UT+HDGKty3bxjr
3ZM/aPqdUcy8ODs4PIyDJSMJ2QyOuNZ0U1FobBh72s7zEQpLqHnsir07NQzd
u09UYic0wLgv8/P798OYP1WlKf14F1GyCHozs7CBT8PT0T1mG/12xPGu6eVh
1FtAt/G2BUlvl6t8920Y3fR5/GrN9uQlJWvm25/DyH1jonl5wJHQyq1GT/0Z
RtKYXkbFhCOR9e4PnKQaQc+XM/UJmxzIufw8jzdbRlDg7iFfOWdBkuZCHCYY
RrCW9lE6TFaH9HOd1BvfMQKvVr6/hQPshMpaWXaMeQS0AcV5Dz3VIBG57/Dr
vSPgZrOR2GFpDteutT2v9o9gc9aoy6HbDojb9JJ6lHcEQ3/O7KU/5YxOheIv
IwIjoFsufEndcgK/fe5PDQuP4M7Nuznj0icgVOjWMyQxgtaf+0Joeh3huKBR
PSgzAvpyK176CGtEHuTOHlAcgYtbzhC7ggGabf/F9KuO4L/X0dwd/wTwI3r8
Vp/WCAKWTx/fs6BEDveWe/Xqj2B+t/+BmzymxGZLtGOPyQhsJUM886NsSZiS
h0G35QjOL2p29Xo4krorevJddiOIyDUSPqvkRFaKDwt0Oo1gvSxKsv6gIzm4
uIm1w3UE7g9loj6esSFmvO9o2s+OYOp2xuerIcYk2KH2W6vHCPrvL+jXC8mS
itj4dy2XRvDvVvve8CxJfOz/H8PVHY8FF4VVZBdKQxpUKllFUeGxIyN7z9ee
mYXIzGggJJQIRVJGCMmlIkkaste7yFeRlpbqe/+8v3PPPec+5znPPTfsxePI
fsSm1lwfFzWBKI/pg0cx/cjc3XPzgJUdDDVlbj1M7IdX/6mlTqz+OxXFk9ee
2g/DuGc+ffWuqK6fTmpL64d7xlvJr0vdQJ97GEqy+iHftWrlBTcKVu8spLTm
9kMw/7+dR1jzlY7LSeMHBf24JL4jdDrSHOH5Vqotxf1IuTDGHiOtgYo+ean7
Zf24bNduGlm9g4zxCYg0V/ZjZvdx0x+jBmSFzgfOppp+WJq0+DaJWxO1mK5v
9xpY/Fiw79Zb7USCG0sZDff7Ec7FUXJD24WUfop9Vd/WD4fTftvfCbuQAUkH
UtfRD/FbOVo9fx1Yen7g9t3ufiz9cu+sQJAlOVggfLn2RT+GlPWmwjJ0id/A
p5SaN/34pLwnOvXZEnJ1Ze/x6uF+GO0S25wndBgvdSvcqib6cU69uPlFuyWW
xieZ3mH0g72cemnpNyco3Keo3Z7px60EcY3eda7w+KoqUznbjyNlgqOfvd2Q
K71B9NZnFj/fPr1z4Jkruj2+c1d874fF9eikqwYuWCzs+16+yMJHWPKcuaMt
ZIarpsqWDECuNUp4T8RROAud67uxfADXp46lLjOSQaa+V/t13gEEjJQ8+JOg
Rh4nalWVCgzgF1fD5he7zcjCgy0FJcIDuDvd8d58wI7s/L54plhkADlZokKu
Vc7EVm44/NrmAXxYX3Jgab4LOedd71G0bQD7FrZH1GQ6k3dqt1N4JQfgp0I/
I/DYlhxed73iuOwAqjJ9Xwu8MialH6/00BQGkFYVwZT4uIcsfZI9Z3CQ5f9t
T0Vbkjqcr54TaMQAtlx3r1pk9WdrWOLerdoDaJrbu62v3QmihlHmaUcGsOnn
Cnl7F1dEbAs9/vMoK/+6L/9UHrph4LdvrpvFACTuGBrvH3aFQp9r8wvbAWQ7
HRyrb3dGZoXd2EHnAdwu/b7W5a4V5uPM/l53H0DdBnGfumEdGNnobxH0HcDl
o8YPBss2kltymhpRgaz8zmakXhE1JFxch9zehrH8FY/5X99tQzwm9yaZnhyA
+uarZ04oOpPHDZLlD2IHcLDiSuWeBy5EPE28e2fSAJ56TLpL/XAmse4iH7LO
DuCB9fNkp792ZFxZaMW/jAFsfHNVfdDKlBxczSPnkzOASP//NhfHK5Hc90tM
+y8PwHGJs7VlvzIWHv4MUbs2gKsLGjyya8xhnv/p4q0bA2gfC+C++dsRtUH/
3VtTOYBL9sYWTYauWKlHG46rGcBhElUiyukOvy3Dvz80DGCJZPeZuDA3dH9/
udG6hZWv396AZzddsPNFFx61D2DtTdMXUfM2SLrR5iLzZACSxm8PSDbrgxnd
mJDXM4BrF/6FyT1mg7pF9XX21wOICp9WyFiqR65KlT85NjiADVa3JvSrrMji
sqL/RsZY+HAlqjXXOBHb0Uu8OvQBlN2JLlrodiGNtenSNW8HoPGL8aAq2IWs
OZN8VHR2ABcW7SKv3XUgIS4xQcmfB5D88kIt7xVz8lLpRNbn7wMYUC0T/uCo
TmQEjtU7/BnAmqOWjxOr9uLcW4/BrqWD6GtqGghjmuBdq+NPea5BrE07LV/t
5wDdHMsNhfyDeB/qdaT3KwXX/Y1UeFYNYkV4cnu/tDuWaus4ha0bxPXkl9k2
m9zhLKoaR904CLPUq6aDTyho/bKvRH/rIH6nz0q6U+0h+ky6o2HnIC67bi9e
Lm+CyOLtb8VkBvGQM3fATVoWgxEbuc/LD8K7pLDL4pMGUTAR3v1DaRCPcj61
D1lakMyd/IauqoOgzb25k2jsSOb/sR/r1RyEFeXg1tlbLsRocDHjgN4gsntW
1Zx/50Iq73ytLTUaRIsR3cW50YlwJ314s9J8EG8rJHvCTloRDwfmQqTNINQ8
6a+0duiSxwpj66YdB1G4pObZWJUQxPneHDRxG0Tu0QQuRx9DxDKe2bd4D6KS
PfJZw4ItJpofndpxbBCKK7oEH6lRcCjzflFm6CBK3vTy7xd1R6733Yd/IgZh
ZMdWt7vRHQtqt5heMSz/CwEHt7H0vaX0/eUTiYN4dic+XjTaGfFcUmZJqYN4
klheP/vZErp+fjwX0wZR+q+66/yUNla8rGwvyRqExUBNP/2tKHkjPxtemzuI
mxev3HvFY0DyL0nLtRcMQn7Cn+EWak2cf/u/fVE8iDozjoLfHM5EwunO1Ymy
QVyNaToovoxCPjycs5itHERDpGNj+h8XUishy79Yw7rv9nSFvHdOJPzMscc8
9wYx3/+vY4mKNVGdqzq5vmUQfzeLkYZAfcJuOr93Z/sgLNlqA2U71pDuerl3
+zsHwfb9c3nIax1krA+6pv1sEMTQ4rtzlBUso2uszV8OIksk75N9tzNEaZ9W
uvYP4nv1U59wS9Z7p7X3SdDIIBxlNK9cWu6B8vLgU7GTgyh4ee/s4B13BPDd
3ZfOZOHXv8nyuRVLrwK/fCj4bxAD4bLi5icd8atPvrRybhAd1/4Em2WboU0x
1O7+l0FE7lthYX5UGUmX64S6fwzChLdhyyK/IjH49/Xp0B9Wfkpur9ffMCFC
rvvi3i4dgvK6BJ9ZZzsy1BmmtMA5hEGP3N/Si87kqmTDR3b+IQQwMr4+caYQ
t7SFG6uEhnAnTPTWUJMLkfy831F87RA2bAiVU5Vl8dPihPAe0SGsbZSJehpp
Qeqb7vVAbAgzxlFqsz5aJHLjjwQjiSFYl/i+Tf+9FWpxSoccdg9hPP6djsR9
IyyfCv/sKzeEnncxJzRF7NCj23Qzct8QPlqtuUHTpCCz8qdz6sEh5Gq+X3xs
4w5rgYPrcjGEezwPVIxjPLApNPLFDa0hnMxtUunJcQdzsDmpXm8INwQEAjTv
UVBx6LfKY6MhcIjKBnmb2yOw8NC312ZDeHy/SeNYlzH2L4uqpFmzzttdWzef
LYtFjxbXeYch/JOyr77+RJ087F4U+UcZgknXF9ngIHOSIqPymt9rCJqvpTMz
zjsQo8zoVFH/ISzrs5H8dcOFrF54oLY7eAhb61X3S6RTyIjN3+8HTgxhXeIv
19OeLqTogWqVbtQQ5nhevJDMtyceYjEeVnFD4JZcMuuz0YxInSYbPZKGkOPf
0K4oqUI+z/x7E3p2CF7Z5c2bH+1Ho4HauYSMIXS7rkiQSTXFqepYzcyLQ1hz
Ompv+oIDtFa3/yrKH8K2HYPHg31cwRO+pLaqcAhTQSs5a7Z44OWoundr6RCi
3fhXnhnyQA7itzy/OQS5i69EKDHusC95ODh6ZwgnuHuP2ihSIM65LP3d3SHo
SPDHvSizxYyPps7PRtaaY+tzZR1D3OlN+MPZOoS0z5d398msR+jex3VrHg3B
1mMru+kJHeKhsKXoQtcQXpWcHBq3siLW+6PO8vUO4StGNdo3OZMjSkPHk/tY
8b+bljICKeTQQQXK0uEh6Hfuee5oTyFSyhmG0RNDOL254091hxPZpPpB6Qdj
CJErEhp681n/TzXdbSH/DeFA3V834wwtslSjdOXc3BCCsj9lXt0sg6+abL+9
vg6hoI3ZlfvWBFPa9tOMn0Pg+bbi1Hi0IwYON75y/DcE3c3b/73jdEOX3uoH
w+zDWDaXxljf5oFm/cByc55hnKyL4lJZ44lKw56sFyuHkdwyGPrtnxuuHt0Z
c0R4GOj6kv+n2RnpJok+HSLDSL0Q/ZHjnAVizagWaluGIWQSYlOaropgC2X1
+9uHoXFLeN+27IPEzSpXav/uYZR4XQ//d92MWNp8XVsjxzpPaabk26gD0bUz
Xia1fxg9j/buM+KlkAMOlXM3Dg1DcJ3GYP9zCpF04hoRUx+GdipPtsYmFyLq
4tZxRWcYh7M6bcrsbMkK17bqtQbD2Cwco1300JCwuYteyTQZhodyRqYAjxD5
7BGezG81jLKxJZsPFR4Bw+tNcIr9MFb/ib++4rEt3vjIOS6jDCPRd/GyyCAF
nX7n9E55DsOP7b8deu4eaAyYUfjpN4xmEelzvCWeqAjU2hIaPAxm9sMUfV8P
XAku4v14YhjZW4r67tIoOB+6uOAdPYwsC/GPMuO2OHXcms6MH0bn2v9Sbj47
gsDwuudOKcOoO304c90RQUKJFGgaOT+M8z2b77H1GBLzKL9Si6xhtPC8GzcJ
syU6p7rSX+YOg/OLJYV7vwtRjN12Uv/qMEJD7bsm5ihkZ3ysR2fJMBq/caSk
7aEQkcQxE/Wbw6iWChNXk3AkfElKKi13hvE+aK7hzrgZ+ZucvVOxbhiysiSl
cfwgmU+dX1XbNIwVxj9P/ZUAaGcN/kmRYTiPhARQf1ng9fnyd2WPh5GZ5d/9
VdQFj9PZB8S7h2HLMd49n+aOhgvO7QUvWHi2tK088NIT5Vktlev6hyEhmr4g
cNUT+RfX5WaNsOpZvTZo4o8bzl4KTVhBHcb3CMGyTGVnROW9DEidGoY7V3pF
zTMzBFyWsmV/P4zK5vPt4UX74FyQoh0zP4wvihG3olZrENNCptyvb8OYu6tx
ZyXdgmhdUxMN+z2MlYMh/eOlTmRfyRXOebYRcOxsvqaZRyES13989lk+gukP
4ZKyXyhkXZn5xBTvCMqZby+v6HcmPDernzoLjmDvo9YliT+syWIFX/3omhEM
vbnbV35Vj8xVehVZio6w3rtOoQujazB55/HZV2Isu8GTnzUbjfFylv3D3h0j
2DSSsK/e2gFtUtoG2VIjMPXYXnZ3gfUf9D1d+W3PCFhs2yJt7Ymiig4+K8UR
lHyhxn4J9ELGfxz+jcoj6E8bP18j5om4nTrP12uMYGsRuzJ/uiuCPZOkTx4e
gfuP2kjdQ/ag3Og8P2YwghTrIwHTlw1hOrV8TsV0BJHdMbHJOl9VNbcdNiq0
GsHhm+6aIlr6RME1+Q6bwwiapWX75eJsyLbiJysolBFcnbm1KP3XmaymcR57
5DmCD+uyz8YJuhKOLbovtvmPIFMiTEaXUMiCY4psUvAIRn9/U2hf6UymC7rS
354YAe1Lwftbly3JwBjXvG70CGZtdjw481uTPNmgZ1wRP4JirpGLsU570Gib
Ws2bwrJXnmgyfG2K8rynAv7nR1AorSu1f8QJuUPcQb2ZI0gK7TF2YXNH6toj
r2RzR7DP6WL291VeiLQ8s+dCASveZZuyZa+84HOx+8Ln4hGMJWTqeoh7wvYN
z2ez8hHseigwL6zoCv1V+qb1t0dwvYoz+s9PWyibnq1dc5fFB/aypAmzI5C6
8EwovHEERhyLCaJja4noS96Q4QcjsLTb2viw3YjwrTToO/hoBI3BMbGxP2zJ
ouE5+StdI6hh61wyf8qFzJ7ryfrzfARiG9+U7zrsSiae8X117GPhf/vItHAx
hfTyGJq3DY3g3T5ZMq/uRFr1zteJTYxAfP5+bbmMBbmT8nx1AmME+zfl/1A8
rEauPuEPY86MIDpns0/b0wNIX27Urz03go8hY08lfpsjVjttX9mXEbwqlpC6
/dEZgYm9F7l+jsDcxE3oxQhrXn+0YsH77whu1CXMzNd5wWTpUctny0aRIVRQ
NirtDQ319AYp7lEcj1h26aeiJ/bGvliTtmIUCXAPHON2hThZeeLjqlFc6RTZ
VCBni1V/jw4arx9F88btEuYSumBXyVCs3TQKh9Jld889206+nnx5adW2UUgs
clVl5BgTZrPAj9Bdozhr26/u88+O9P80th6QGQW/X+vJ7mEX0ql0oVFRYRTf
bW++4vF3JQ0nXq3LOzCKPQItPJnnKORGg2DEL9VRqA4F/eErciSXvpkM22mN
4tXjsf82iLPmEYXMAw/0RhGbmu/ry3eIhIe8ztt0dBSUiu6EeQE1eNUK/Yox
H0VV5KkQrlJL2HwytaXZjGIvR5vbt/suOCKX1azhNAqeC289ZtM8cPBYn0ip
2ygaGut+8mp5Q/LOqpMcPqO4U1T59Fi6N0RmzUY9jo0irNOTK8nLEzxS2Ye6
QkdR5nlXlZ3XFb993lzeFTmKX2G3/WhUG5jvd7ggEzOKyaqUhNO8eqhcMp0k
n8jyTxlQqv6zhnA8D4hSSh2F5cHoBwPWhsQx93uQStoo3jt8UqmetSH3XGM9
NbJGcdsvKbdcwIUIyHI7HM4dhdGq+v1hcCVevy6YGhSMwo9zxeHzhq6kvUNE
16R4FI6/LdioSi5E5EKJimUZa38586efhy0JtpeSt6scxcjZqzf4jhuRZzvq
dzrXjCLvhXgT++Bmsu2Lyib3hlEoO+6++G2rLqJbO1f53B+FeoXTVOtVGwyk
HuU+1jYK3HHYjWoKZCyG/oZ0jCL4ZcYz3o2eSN7i8jW8exQWjG/rrSq8QX3/
33/RL0YxltuWzSniA6V7wZPxb0YRel3sk5qLFy7E/36TPDyK8sQvviE33fDO
MLH73ATL/vdl+8dcR2iu52+7wBgF/ZjvKulcE1xhXqzPmWHVJ6mezcJeCl+r
Nt26PDuKY98qv0wHahHDk2VFRZ9Hse/6gAHD3ZLc0JHLuf59FNetii/z9juR
v4JNZysWR9H02/i53EsKsRpXj6taMoYj/w4LbCtwJdXl3cfrlo9BuzqlWU2F
QrhDzfyaeMfwQDalkb/YgVAw5tIqMIZviZFRay3MSDOPu9Uj4TFYhwndXSpz
kKwamDXoEhnD1RBPz9n1qvC7dlzj+eYxlCWv32p/3gKP/f4pvt42hiGppB0K
G1ywUSlFenDXGFw+Pkju3+GB48sEt47JjOFsTPhQQLA3XvTmraPJj2FhCVNQ
/ZYPduaLr5hWGsOX7R8HY+q8Eet+a9l7lTFY+Vr/3HXdA8NyCj8/arDs06qM
6U4X7F1smft6eAynDQQ1lDZZ4cwTbeZPgzFM/ro1ffqoBhiZvcN/TcYgesj1
20pBBaLsaPVimdUYROZOtB5YaUou7qI+5rIfw3HWuBn2wJ7MffVq5ncZA+WL
xgbu5RSi0/apSshjDMJ2Tf/ulLqSwrOR19f6juGjkVZTv5Ar+WG57LJo4Bhe
6FyZDXJwJsbi5zLEwsaQdOgz/64zVuTm7Ookicgx9HQ3ZUdM6pClTQUnd8eM
QeqETV3k+a2wS5QIkktk5bsqMPxojzHqjlZ57EsdQ/vaWo0bOo7g26BkfzBt
DK8iS/iW97rBfbrNBFlj0GVP9C0e90Jrjd5hrdwx/Mo3tRGb98Ga6NfKegVj
COh7HmXe54NjunZ7jYrH4H89fbos1Qtdq5g7zMrGcOd+lvEnPTeITfpttK4c
w0zE19PXvtojsuKbkEPNGPIsHG+H5RvhddgpLkrDGASctodKv+LDbnXOvx73
x4DErAvFXXqkuuLWjqG2MTB+3l01ecOGKKw2NtHrHMOpK7nxP51dSGP018jm
Z2PY/WSerpvnSpTf5pbufjWGp/5FG24pu5I2Y5XeKwNj4OBzLzA0dybazbTv
/GNjsFcJXZdFsSTdW5PEYmgs//+MgtnS1YnReUn9+WnW+rHE+Jeyg3i90Bvq
8mEMdS2e/MthCSvnkKuvP41hv8AZ1teExeana7s0v4/hTFvI/OkLnnCWb/lU
tziG5eLvyaNhHzCvOG+QWDqOioyvyfxXfOG9nEP7Euc42kwD1xU99MbcsZsB
XPzjyLl71O1InDuChw1zI4TGMfJp+bb0QkcsaHxuf7d2HDubGzsCg4/iZGXO
e7uN43iznLb/iHNXK9uaQ8LPxcdxJX2ZDm3akCTGTKqq7hwH+/MRPRsrO8L1
X4JXlfQ4qlIsV+Z8cCHnTXdmbpEfx9qx/55df+RKhFp67l9QGsdHV5rBwm8K
ydkeNLVUdRyy2upFw+ZORCRdeGWo5ji2yu3U/WlpTgp/NClN6Y6jXvTRhFGX
EtlGcaRYGo3DMX17OGO9JsqfLT33xGwcKQE2t2/vtoHUvrJ6JZtx/MvLWuUb
wZrXrupP3nQcR7+879MjVV5Q4Jrn2uA2jsIj35YWlfqiKSh77znvcfj+eEBG
OPygOqpk/ydgHD/fq/d9fOKNh1rjpwNCx5F37qZw0S536NyJq5qMGEf8zX07
tG0c0L1WYtg4ZhzO9hveP9xoAKO47qUPE8fxaN7TsXhwI+l7FyAlf2YcwUt8
H265ZUyszVdZlqaPw+mFQ1lYoz0Ze3AvRvjiOLbz7LDws6YQ5x32N5Pyx8HV
G7Zm1bArmcpg6/teOI5s08vK/bUU4vOrdNHrOiveKHdyF7cjmXPVkxipGMdA
4pKlGr6mJPj57FH96nH8N3FT9s1xGfJ9f2ZES/04dvWmCga66SKqaH+J9P1x
rFa/Uy85aAc2ntGeq23jULqu7x1Q54bEkJiFlZ3jiLga9Jer3hvc41u3xD0b
h/HMybzbzn5I0+nS+/xyHNgc/Zfbzw9C1X4hrgPjiNXK9zjd742c9YIFb0bH
0ffo+3+nptywIaG+U5vGsqefiho1sEfRB5v5hulxFLSnN/621MM2y7/rd35g
8SV469KoFbtJOSnWzPs0DvEdJy6FrjUl0rsO+/N8H4ft/ZIZ4UEHUpv5Pufk
4jhLLwd0UisoZP9ietuHJRM4/u9KftSEK2l2V3jnwDkBFT8n7Qg3ClF9MbTq
Bd8EKlrvsp9/ak8eKkWrqAlN4Mk1V2G+AmNyuFjMs2btBGQXcjvrg9cThdwV
Ep2iE+DqeKpdvVkfW9J+M0fEJrApXlon19Qe/IkzJR8lJvCIcLLzlbrhV0Q/
hV1qAqLuwUsu5Hnj7bGHYuv3TODYXFGNRYYf3rhXUaX3T2CnaE9GJvzRZnel
UOPQBPpDduQgxxe3TVIdrdQmcPL9Lv2HLaz/1eHjG/20J/DCqkVhkyAFSSqu
Y7FHJmC1dCGeU9kSIfLGly8enYDd9N8nLX7KcN6lYlthPoGNiatDrfaDGG6W
XE9sJmDvfqYwTcCCHBReO9TnOAGXQRWrH55ORIKX/dKM6wQ+vXGLzH9HIauW
fLL44zWBMxzsVXljroTt+/hqoYAJYP+f8PEgCvnwobtPImQCe5XSdojnOpBh
+r3MQ+ETcJb8j/xKMiWdQ6UmxtETWHbSVELu215yt/eCgHv8BBJJstX6d1oo
enzqRUTyBDh8xiLcCmxwrtk3Le3cBO7VqC2+LnVFRLW1YcmFCfR5VwgOCnvD
44Y2X2POBDi3mAleu+IH0yt7n/VcnkD0wsruJ3R/IHPzGVrRBBbXHtjK6PKD
VAqf3sL1CVCeRrTneXtj/amfnLy3JnCpSL9k61o3LA+d7txcPYErv4Yf/Lph
i8/efacV6iegkO0sJyFwGJNObVp6zROYFZnv2MqQJj0Wt5c5kgko7T7i6VVt
Qhr18x8GP57AfjbOibt/7Ml19eS45KcToJ0rFFM+TCGZiqFqV3onYBk55Pir
z5XESLv8q+5j1TOsaPeevxTit9WotWNoAj4J+nejap2I9fpD0SPjE+DhUHzz
wcWCaK/cqfyRPoEA3x9v+7nVyF4O4d/LZlj+1fI3ZU8pY9PvJc3rZifg/mBL
+M18S/B+mguX/jwBXiWRxZMRFPyYHlXU+M7iU9IKETl3L0yNdS1YLk5g1Lmz
/XmMH16/rq/3XTKJuVEZnnm3ALR2FYfGLp/E3WrtnwLT/rjVmi5/kXcSFXaU
vVwrfZFbF/X5psAkZqOyH//Y5oHECu+aVuFJvF2iO3YeTggqsgzsE5lE33DN
BS8VYzjmaMrObJ6EUNSVTWOGy6F/Tm5ucdskdopncP99qk+U4jfeFpScxJKt
ehTLrbZkWziPn4TsJIR5s2eWBrgQwYDvkocUJrGh1Hbd+iuu5K8r87+jBybB
5vG6+oa7K3ln86rcTXUSq8+u/t7Z60wGj7Z6Rmiy7M4Oodq7rclj7VsSabqT
CCc3gnRqdUjNodypYsNJLDv2IYGbTxpX95wuvWc6iZfC4wna1mY4syPYtcdq
Eu73BVuVJFxwYqOTOM1+Emlqd6WaUzxBMZazHHOZhN1ycX/97X4wSlhyZtBj
EoJaFrJfawNwsOH1g9e+k+At4lG89C0AEv+VfHoeOAnuqqd5Y9MsPRQN2/40
jIVXoc+fNw1e+GOkY/M4chILRg+fFj6hYCZu7XkSM4ljG1WOfta1wpu6mbbm
xEkoPl/Wzl4OtL1t+lqfOonCBiODTxnK5JbI2Z01aZPoz/8jGxRjTnIM7e0r
syax8Wcx8+kHRxIfK51RljuJorsJJ+aaKSTg7t9HxQWTaCnWvVRBXInN9Ivv
BcWT6Li5/kipL4Vorb+2O69sEtWNe71mmhyInEGwU3blJDK5RdNEekyJaIxm
VnrNJH5djwyb3KNAOGtXPznTMAklfbmiqWQtfGZO/Tp9fxKaQfIxS4gNJtbe
k4lrY+G9bIei+B9XdB9JoUR1TKJmxYZ80TfeqI+2yTnRPYnWhVGukFF/FFVL
dge/mMS5i0nKiXXHcI7x+4//Gxb/fjyUfiR/DOFrnu/xHp6Ez9L17o/c/OCq
d9XdbWIS4oMSt5VSPWEUdSzPiTEJ/aF+dbZVLjhYpfbcdmYS+dev7IiSN4ME
XXCJ5ewkzqTu/cb9UgqCwgwFk8+TuN9/Nlb9mA5ZPFznZfB9Ehxr4scTmFZk
JvL0lcOLkwhu3mw/UORM3lnu9rrGRkXkKeWCNiVX4jy/aunmZVTE/Xcjc22U
KxlIXbx8hYOKtyndYxmuLkR/69Q+ES4qZuSkOE+o2pK2lucvLvFQoVvjW1yo
a0D2WzZ4C/NT8WnO5gyO/lat/Hh1WdZKKlz+JYdMixlDPDW5QECIisNBDq9N
zzghVzxQMW01Fa0JIqcmrnpgRYv1K961VKz+uCoz8Y8vEi3UfVPXUzFZM71z
i+sx/JzbxcEpSoW19qGgjwhEQIpQYeImKvYv8B86fuAYmGK/lZaKUbHt/muJ
K7d9We8o43XMViqKo1vXOcp64KV5j9+f7VQcaLVpkYhxhM5c3fKTO6n4EdAa
7cNuhJbkgqIfklTMf444WRXPQfaKJR08Lk2FtAV97sw+I1LWHPDmiywVcjOB
dU++2RJRc6uAoL1UXC7jMs3IdCGZs+D6qEDF43Olj8xDXAlX8s5iP0Uqcmb5
In5/pJBTWwSV3x2gQvFVyHfnVc7ka9PPfk9lKkyeVIbxwpL4mNGPTalSsTRY
64z2Jg1C/dDN7apOxblbFnn+/UqwSLpbQtWk4uOS36eLd1mie/MVFUcdKozi
vTNkKylQa0ocHNVl+ftUPlmQ8UaDqX+QjT4VFBeVpafYAyD1wYJ30JCKwaRt
FjccAtFobkDOGFNx/eu5KaWYQGg+0AhRNaNib0H7nHJQAHq3H9jx2YIK6rea
8mEbb9imyY5et6ZChfMz+zUtCqYXtqfb2FHBP15yfPM7MwQ7iWryO1KR+a/n
ty3fdvx9IvS9zZmKN/WWi63MIyRVjvtWqCsVC+x8P2SzbcnqvH+OOz2oEImt
SL90y4UULVkQGvOiIixIrdzD1ZVI+XzoTPelQtPLXCNbjUIaX9MjNQOoKKk4
cPhZuz3ROjQs8z2QhW/Smx3H7YzJi5IX9IoQKo7uX7N6uzw7seXrzHE8TgXd
amBIpMUY06EtR4QiqLjUk7xMcN4ZweO1fztOUrE128vsSARLv7Rv1kacouJF
6onC5ZIBSLlT6CEdx7I/TdhYXBuI1WtzRGgJVDxTDHUbnglEUcy53uwkKnh0
7IP8WPyUmomP101lxcP2z9YOPmg0jti/eJYKwXmKguARV2g2HXtXlUZFTepH
U+4RC/SKeVx1vUDF9woujVbfPbA9Y2+6NpsKsyJh9jPcumT6s+nyZzlUJHvl
m/DF2JBgO73mU3lUSPZu87lm5EL+PkLA3itUMClWSdZyriRVar/49FUqusNn
89bJUsjqi1IDedeocO7OTv/MmgeL/oifMSylYmWTRdbKYGMi5bFedUkZiy+v
r3W0CHCQe70rP9fdpCL8De2oMM0YGorLb3hVUvF7dO29zdtc0Fu4aCNaRYX/
pnuVHQNesOX6wv+yhorFV6K799QFYDrwv/aEOio8mFLbD/EHsf5bk2GK96jg
Gm4r6bYIwh/1gV3vm6j48NpSZ2x3IFIqesavtlBhz3dObrmTL1avenTBlFDB
N5vv++KIG4pONmkvf0gFr/qrlXceWEGKWfWz6TEVp282LVsjroRGgxu3/Z+w
+LDuxt5VqtpEs/6Ki1g3qz87onZf87EmvRuzhPt7WP0mskd356wzsU1KfZry
gooupaDs1V8oZHouJlr5NZX1PkWLHuenkCCr43vm37DuP1JAu3vDniwSv6mS
QSoaDP9r32tuTFJ2uuZZjVCRpuQtU6X+p3X1BRtD3nEqvuzebZKhYYLCn0eX
kEkqvCc+clqHuUCSolMfTKdiPGXgmbIRqx+7lb0lpqjI/6rQbWV2DBry8htH
3lKR9e6X4o5jQXh+eder8+9Y+hTLMX22MwjW7FtOq89SYXuy56jVjUAw/dYc
+PaRiu2a87+V7fwQ2M83W/6Zpc+d/ow4dXcsqiy7Zv+NCoPicindFBuk3Php
LvCDiju+IfU7QlWxauU81+NfVOxYVJ3Nytcgrx+cSdb7w8p/tsj5SZolyfTb
vvzFPxZ/2D7lc/I4E9MNbYnmS2nw5T7a5hhJIULdtstG2GmY7Cz9vsGeQl6H
f4tz4qTh3vPY7wouTiRzRwbbFDcNtVtdW677WxDTAckYHz4aEmYPcC6RAhE6
3fHn4wqWfTKu4V+MGl7LO0eFCdIQKS/Nwb/XBpn0X79+raLhujRnS2eTG0wv
XIyIXUPDMv/q4sRWXwiqyf3gWE+DJZeGDhdLr17OdR8/u4GGuBxFXuZiEDIK
3L8JbKLB9lN/co9CMIwN2EJzttDQYrdNI0gsCAK/8z9v2EqDRn58wdkmf7y8
uS/o2nYamkdHquUPeSLD+uVHiZ00dL9MGhx56ghjTt+ASkkafr0xDvnwSh8r
Gzhm90jTkKW5n4M/bxvpdSvyvSdLw5f1MiVqIiYkbdWhd8p7aRBTt/dcqm9P
jB72ez1UoOHO/D+tTWdcyIqgwLeHFWmoeu7yPtSTQno383o8P0AD33ruPXxl
ziSt9zrTVJkG/t1cUhYMa2IUreY6pEoDTeWvhv4dXcIvNUpzUKfh1t0gnX+G
u9AzEubM0KTBuFFN+L6kOc6lCkx66dBgpbmkVTaVAgOlWw5zujQEzX09dn6b
D/jeao+F6NMw7q0R+HFtIHouUm1/GtLA6bjaO4MvGOe0Tg6fMqZh9p5qELUt
GAZfhK3ZzWiYP7uU59XWYPAWVw+kWtBwdEd8zn6tQHQb61ustKZBquO89shV
H5z5N9WXbUtDSbVk2V4RVxy5E2sq4kCDw9tun0oXC/A4bHhV6ETD8Gvv69rh
e9DN23B0O4WGV8Y79LyCdMiZZuPeCjcavFbvT6VNW5Ej3u8N5Dxp0BIL8zM7
5Ey41yU9q/emsd6ZD8rdPBTS1bnlyCE/GvatSNhlqeBCUsLud7UF0MAtkK4h
ddGO6G6zPKwTxMJf6NG0ooox4eqb73gWQgNuyuX386wlXXFntUyO03Cs4dUK
2pARUuQkHg2E09Dwp1b1qYszdCfb1O1P0iB6zchzOet94Eyza6NF0zBy3N/c
UekYOpUXVD1jaehsVYzS/RuEpPcZDz7E05D89pGIyK4Q6OTvVg4+TcOHoNmd
dmwhWK7X2fw9mXXf/lc5M8lB6PzufCD6DA3+WS8TWT2MpBu/7y09T0OTgdE3
6xse0LHI2Z+STgOv/7TAUIM9ONj31PNnsvipcuvlY6KDx7XP5LOyWfn8PFB5
R0eBJLp41K67RMNuwYU94XxmREtgyZ6reTSMPdPx9z/oQNjJ5aqtV2iwi+wo
LDZ2ISPKWrqTV2nou88nNK7qQqqaP1Dzr9GQaOB+j1vMniQqXYywLKWBsXpJ
MIeyMbFtUBESKqOBw3LvmtwT461yCtMVz2/SkPHpkSc92BTLa9M0UytpKOB8
cCPkLgVjsopjWlU07Jd14NA19UXN7clQtloaTO7f4D0hwMJrdwp/Sx0N8YPr
eKkyIbC/KXfjxD1W/N1q91d0hWDvjmFV+WYaSvlzt/7tDgbX9bjBuRYail97
fv1gFogJccnACsJa/2L0XDT1xt2i11weD2kg0RIXqJ7OSNl08ppYB6vfVnSY
j13Wh+OVrQfHn9Bw5U9Hw8q/ckRBpOd1bjcNYdkJVfKmZoQ7N9TX/DkNT903
53E3OpAJ4Y3sAi9pSP0lNjEt5kLqsjquPHtNg2Gzw8pYRWdyRjBgX3I/DevD
adLbva2Jc/qaXo0hGjb9/Y8tfbsO2c9PPP6OsPTqcJa/vL8SeM96/msap0Hm
cFDN6AEbULkEcsOoNJzzUp5qWu2BhqRGuT0MGs4k9j087RmAc+wuTz9M0WBw
rmT3SvNgUOK5KeUzLLtQyJr1QqFQYqv95fqeBu/sqm4p5VDwn7LN2jxHw8Y7
TNlbz4NB/71UanSehsIp5yytyWNojLj1OOcLDfWzb55nz3gi7buZg+kCS5+n
g47mKzrANWzxG/9PVr/IbyPWAlpQ+lKa9vQ3DTcCPRQazVVZ+mW44/RfFn5e
Ce8ul1oQ5tw3oraEju4zkuE66Y6k2e+q9eIyOoocnm5PKXcmGe90Pt1bTse4
5vdtCxcdiLvXx9QQbjouK11p6XxkRg5OXxKX5aOD02Gfn3qLPBFwU7v/bgUd
6dTytauSj2CaNmN2Q5COX35Ov4RZ9WxxuvDBZTUdj1dmT/S2eyNz/MDpjWvp
UNHNHfLuC4SnHX3j8Ho65ofXnUR+CJSHzzRki9JhbVe6km06FEJW8keNN9Nh
EC3vWHohFDNvRt/yitPRZP+yre1GMB6YJsY+2UbH9IZQkZVNAch8KbU+YQcd
D3U/f7DZ6gEvo/4aVUk6bNUHD7px2kC1J/rILyk6olryTx2JVsSqIxKMelk6
VDV9JEUFdMjMk96TQXtZ+TUuWb6pw4q0ap9YLb2PDsM3ufI7pxxJ9qPNt2cU
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
mT2NxDXif+bnuZjYd/JNVEsO/gdwqYgp
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7026120426633587`*^9, 3.7026122133463793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}], ",", 
     RowBox[{"\[Lambda]", "=", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}], ",", 
     RowBox[{"y", "=", "0.99"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "z", ",", 
       RowBox[{
        FractionBox["\[Omega]", "z"], "y"}]}], "}"}], "]"}], ";", 
    FractionBox[
     RowBox[{
      RowBox[{"\[Phi]3", "[", "y", "]"}], 
      RowBox[{"\[Phi]1", "[", 
       RowBox[{
        FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], 
           FractionBox[
            RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], 
      "2"]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702611783303461*^9, 3.702611841218527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "0.9892254416376878`", ",", "0.5003914973926621`"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.702611837788435*^9, 3.7026118419265757`*^9}}],

Cell[BoxData[
 RowBox[{"-", "18738.69529395179`"}]], "Output",
 CellChangeTimes->{{3.702611804997918*^9, 3.702611842006637*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], "2"]],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], 
          FractionBox[
           RowBox[{"1", "-", "\[Omega]"}], "z"]}]}], ",", "1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", "\"\<PrincipalValue\>\"", "}"}]}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702546353978386*^9, 3.702546371057974*^9}, {
   3.702569914053255*^9, 3.702569932652587*^9}, {3.7025700202366066`*^9, 
   3.7025700375733657`*^9}, {3.702570317004928*^9, 3.7025703205239124`*^9}, 
   3.702570525947502*^9, 3.7025708386911163`*^9, {3.702570931914999*^9, 
   3.7025710305619526`*^9}}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{
  3.702570320873246*^9, 3.702570530310825*^9, 3.702570839788266*^9, {
   3.702570941823222*^9, 3.7025709664394164`*^9}, {3.702571018139765*^9, 
   3.7025710315249386`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9893856454372185`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"21594.46126072871`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"19923.687547102327`\\\"}]\\) for the integral and error \
estimates.\"",2,40,24,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7025708583411245`*^9, {3.7025709472122154`*^9, 3.702570973438323*^9}, 
   3.7025710186651506`*^9, 3.702571049984831*^9}],

Cell[BoxData[
 RowBox[{"-", "21594.461019655686`"}]], "Output",
 CellChangeTimes->{
  3.7025463833146467`*^9, {3.702569906756714*^9, 3.702569934068816*^9}, {
   3.702570021866221*^9, 3.702570025147545*^9}, 3.702570064251856*^9, 
   3.702570346869612*^9, 3.7025705527657633`*^9, 3.70257086465037*^9, {
   3.702570947437393*^9, 3.702570973441312*^9}, {3.7025710265199833`*^9, 
   3.7025710562581244`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "z", "]"}], ";", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Phi]3", "[", "y", "]"}], 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{
          FractionBox["\[Omega]", "z"], "y"}], "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}], 
             FractionBox[
              RowBox[{"1", "-", "z"}], "\[Omega]"]}]}], ")"}]}], ")"}], "2"]],
       ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7025709795605745`*^9, 3.702570980977003*^9}, 
   3.7025710534331856`*^9}],

Cell[BoxData["0.9892254416376878`"], "Print",
 CellChangeTimes->{3.702570981690712*^9, 3.702572624941154*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9892250443052052`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"973.156663226787`\\\"}]\\) and \\!\\(\\*RowBox[{\\\"5.96569248182827`*^-8\
\\\"}]\\) for the integral and error estimates.\"",2,42,29,
   24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025709870865664`*^9, 3.7025726305537663`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9892251249793069`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"876.0999191408297`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.291426457578153`*^-8\\\"}]\\) for the integral and \
error estimates.\"",2,42,30,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025709870865664`*^9, 3.7025726305667706`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"y\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9892251785900974`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1001.8591968480376`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.52304640221404`*^-8\\\"}]\\) for the integral and \
error estimates.\"",2,42,31,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025709870865664`*^9, 3.7025726305797796`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,42,32,24936002415346997957,"Kernel 1"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7025709870865664`*^9, 3.702572630583782*^9}],

Cell[BoxData[
 RowBox[{"-", "4.0025603445143646`*^8"}]], "Output",
 CellChangeTimes->{3.7025709873237596`*^9, 3.702572631196285*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "=", "0.5"}], ",", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"zfn", "[", "0.5", "]"}], "[", 
       RowBox[{"M1", ",", "M2", ",", "M3", ",", "M4"}], "]"}]}], ",", 
     RowBox[{"x", "=", "0.5"}]}], "}"}], ",", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], 
     FractionBox[
      RowBox[{"1", "-", "\[Omega]"}], "z"]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702546397648801*^9, 3.70254643192074*^9}, {
   3.7025707292179966`*^9, 3.7025707590407853`*^9}, {3.7026092146823406`*^9, 
   3.702609220904372*^9}, 3.7026117635950127`*^9}],

Cell[BoxData["0.7472770215188576`"], "Output",
 CellChangeTimes->{{3.702546403683073*^9, 3.702546432807369*^9}, 
   3.7025698963759303`*^9, {3.7025707299666724`*^9, 3.7025707597170577`*^9}, {
   3.7026092101384134`*^9, 3.702609221558034*^9}, 3.7026117644411764`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Omega]", "=", "0."}], "}"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", "\[Omega]"}]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]1", "[", "x", "]"}], 
        RowBox[{"\[Phi]2", "[", 
         FractionBox["x", "\[Omega]"], "]"}], 
        FractionBox[
         RowBox[{"\[Phi]3", "[", "p", "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"p", "-", 
            FractionBox[
             RowBox[{"x", "-", "\[Omega]"}], 
             RowBox[{"1", "-", "\[Omega]"}]]}], ")"}], "2"]]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "\[Omega]"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}]}], "]"}]}], 
    "-", 
    RowBox[{
     FractionBox["1", "\[Omega]"], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]1", "[", "x", "]"}], 
        RowBox[{"\[Phi]3", "[", 
         FractionBox[
          RowBox[{"x", "-", "\[Omega]"}], 
          RowBox[{"1", "-", "\[Omega]"}]], "]"}], 
        FractionBox[
         RowBox[{"\[Phi]2", "[", "p", "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"p", "-", 
            FractionBox["x", "\[Omega]"]}], ")"}], "2"]]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Omega]", ",", "1"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}]}], "]"}]}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.70131727757642*^9, 3.7013172921204967`*^9}, {
  3.701408323457951*^9, 3.701408323519968*^9}},
 ExpressionUUID -> "bea45b41-932e-44fa-865e-c0c9ad24ad6d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{810, 911},
WindowMargins->{{426, Automatic}, {Automatic, 1}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e747\:670828\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 177, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[760, 27, 165, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[950, 33, 218, 4, 46, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1193, 41, 141, 2, 22, "Print"],
Cell[1337, 45, 141, 2, 22, "Print"],
Cell[1481, 49, 141, 2, 22, "Print"],
Cell[1625, 53, 141, 2, 22, "Print"]
}, Open  ]],
Cell[1781, 58, 394, 8, 45, "Message"],
Cell[2178, 68, 280, 8, 24, "Message"],
Cell[CellGroupData[{
Cell[2483, 80, 141, 2, 22, "Print"],
Cell[2627, 84, 141, 2, 22, "Print"],
Cell[2771, 88, 141, 2, 22, "Print"],
Cell[2915, 92, 139, 2, 22, "Print"]
}, Open  ]],
Cell[3069, 97, 1385, 27, 50, "Output"]
}, Open  ]],
Cell[4469, 127, 219, 4, 30, "Input"],
Cell[4691, 133, 207, 4, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4935, 142, 151, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[5111, 148, 160, 2, 39, "Subsubsection"],
Cell[5274, 152, 481, 10, 46, "Input",
 InitializationCell->True],
Cell[5758, 164, 255, 6, 30, "Input"],
Cell[6016, 172, 620, 17, 66, "Input",
 InitializationCell->True],
Cell[6639, 191, 1333, 40, 141, "Input"],
Cell[7975, 233, 2568, 62, 194, "Input",
 InitializationCell->True],
Cell[10546, 297, 3131, 89, 260, "Input",
 InitializationCell->True],
Cell[13680, 388, 4547, 86, 139, "Input",
 InitializationCell->True],
Cell[18230, 476, 526, 13, 46, "Input",
 InitializationCell->True],
Cell[18759, 491, 1331, 48, 142, "Input",
 InitializationCell->True],
Cell[20093, 541, 4744, 119, 327, "Input",
 InitializationCell->True],
Cell[24840, 662, 494, 14, 46, "Input",
 InitializationCell->True],
Cell[25337, 678, 468, 12, 46, "Input",
 InitializationCell->True],
Cell[25808, 692, 1153, 34, 84, "Input",
 InitializationCell->True],
Cell[26964, 728, 2544, 73, 166, "Input",
 InitializationCell->True],
Cell[29511, 803, 2406, 71, 256, "Input",
 InitializationCell->True],
Cell[31920, 876, 4682, 121, 501, "Input",
 InitializationCell->True],
Cell[36605, 999, 6145, 142, 504, "Input",
 InitializationCell->True],
Cell[42753, 1143, 11684, 265, 864, "Input",
 InitializationCell->True],
Cell[54440, 1410, 11013, 273, 959, "Input",
 InitializationCell->True],
Cell[65456, 1685, 330, 10, 8, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65823, 1700, 155, 2, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[66003, 1706, 6553, 170, 717, "Input"],
Cell[72559, 1878, 257, 3, 22, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72853, 1886, 133, 3, 44, "Input"],
Cell[72989, 1891, 110, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73136, 1897, 372, 10, 30, "Input"],
Cell[73511, 1909, 376, 8, 45, "Message"],
Cell[73890, 1919, 849, 15, 68, "Message"],
Cell[74742, 1936, 374, 8, 45, "Message"],
Cell[75119, 1946, 735, 13, 65, "Message"],
Cell[75857, 1961, 152, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76046, 1969, 394, 10, 68, "Input"],
Cell[76443, 1981, 3827, 76, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80307, 2062, 318, 9, 68, "Input"],
Cell[80628, 2073, 5395, 101, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86060, 2179, 3061, 89, 268, "Input"],
Cell[89124, 2270, 1084, 20, 130, "Message"],
Cell[90211, 2292, 400, 8, 45, "Message"],
Cell[90614, 2302, 807, 14, 65, "Message"],
Cell[91424, 2318, 191, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91652, 2326, 1344, 41, 127, "Input"],
Cell[92999, 2369, 399, 8, 45, "Message"],
Cell[93401, 2379, 760, 13, 65, "Message"],
Cell[94164, 2394, 115, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94316, 2400, 1385, 42, 161, "Input"],
Cell[95704, 2444, 730, 13, 24, "Message"],
Cell[96437, 2459, 731, 13, 65, "Message"],
Cell[97171, 2474, 732, 13, 65, "Message"],
Cell[97906, 2489, 348, 7, 24, "Message"],
Cell[98257, 2498, 92, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98386, 2504, 1536, 44, 147, "Input"],
Cell[99925, 2550, 529, 11, 45, "Message"],
Cell[100457, 2563, 167, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100661, 2571, 1520, 44, 147, "Input"],
Cell[102184, 2617, 800, 14, 45, "Message"],
Cell[102987, 2633, 164, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103188, 2640, 2995, 93, 253, "Input"],
Cell[106186, 2735, 89, 1, 22, "Print"],
Cell[106278, 2738, 669, 12, 45, "Message"],
Cell[106950, 2752, 107, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107094, 2759, 1407, 44, 113, "Input"],
Cell[108504, 2805, 87, 1, 22, "Print"],
Cell[108594, 2808, 91, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108722, 2814, 1489, 45, 113, "Input"],
Cell[110214, 2861, 113, 1, 22, "Print"],
Cell[110330, 2864, 695, 12, 47, "Message"],
Cell[111028, 2878, 129, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111194, 2885, 1528, 46, 113, "Input"],
Cell[112725, 2933, 141, 2, 22, "Print"],
Cell[112869, 2937, 47537, 793, 209, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160443, 3735, 347, 8, 30, "Input"],
Cell[160793, 3745, 61951, 1029, 268, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222781, 4779, 1222, 38, 127, "Input"],
Cell[224006, 4819, 192, 4, 22, "Print"],
Cell[224201, 4825, 128, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224366, 4832, 1671, 47, 127, "Input"],
Cell[226040, 4881, 238, 4, 22, "Print"],
Cell[226281, 4887, 755, 14, 45, "Message"],
Cell[227039, 4903, 403, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227479, 4915, 1223, 37, 127, "Input"],
Cell[228705, 4954, 109, 1, 22, "Print"],
Cell[228817, 4957, 681, 12, 45, "Message"],
Cell[229501, 4971, 681, 12, 45, "Message"],
Cell[230185, 4985, 681, 12, 45, "Message"],
Cell[230869, 4999, 370, 7, 24, "Message"],
Cell[231242, 5008, 132, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231411, 5015, 700, 19, 53, "Input"],
Cell[232114, 5036, 266, 3, 30, "Output"]
}, Open  ]],
Cell[232395, 5042, 1880, 53, 164, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

