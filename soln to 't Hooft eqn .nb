(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    153314,       3025]
NotebookOptionsPosition[    151429,       2964]
NotebookOutlinePosition[    151769,       2979]
CellTagsIndexPosition[    151726,       2976]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"BSW", "-", 
   RowBox[{
   "Wulthopp", " ", "method", " ", "to", " ", "numerically", " ", "solve", 
    " ", 
    RowBox[{"the", " ", "'"}], "t", " ", "Hooft", " ", 
    RowBox[{"eqn", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.659052402598587*^9, 3.659052463150651*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    SuperscriptBox["Mn", "2"], 
    SubscriptBox["\[Phi]", "n"], 
    RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["m1", "2"], "-", 
         SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m2", "2"], "-", 
         SuperscriptBox["\[Beta]", "2"]}], 
        RowBox[{"1", "-", "x"}]]}], ")"}], 
     SubscriptBox["\[Phi]", "n"], 
     RowBox[{"(", "x", ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Integral]", "0"], "1"], 
      RowBox[{"dy", " ", 
       SubscriptBox["\[Phi]", "n"], 
       RowBox[{"(", "y", ")"}], " ", 
       FractionBox["PV", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "x"}], ")"}], "2"]]}]}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.662368746261691*^9, 3.6623688704856367`*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"$FrontEnd", ",", 
   RowBox[{"CommonDefaultFormatTypes", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "StandardForm"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.65630059895203*^9, 3.6563006333167763`*^9}, {
  3.656300748822282*^9, 3.656300771413851*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"m1", ",", "m2", ",", "\[Beta]", ",", "Nx"}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"\[Beta]", "=", 
    RowBox[{"1", " ", "unit"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nx", "=", "500"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "size", " ", "of", " ", "the", " ", "working", " ", "matrix"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"the", " ", "mass", " ", "unit"}], ",", 
    RowBox[{
     RowBox[{"definition", " ", 
      SuperscriptBox["\[Beta]", "2"]}], "=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["g", "2"], 
       RowBox[{"2", "Pi"}]], "Nc"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m1", "=", 
    RowBox[{"2", "*", "\[Beta]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "m1", " ", "and", " ", "m2", " ", "are", " ", "the", " ", "bare", " ", 
     "masses", " ", "of", " ", "the", " ", "quark", " ", "and", " ", "the", 
     " ", "anti"}], "-", 
    RowBox[{"quark", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m2", "=", 
   RowBox[{"2", "*", "\[Beta]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656316908677919*^9, 3.656316955757666*^9}, {
   3.656386441333725*^9, 3.656386506094369*^9}, {3.656386543964497*^9, 
   3.656386581412278*^9}, {3.656642892958535*^9, 3.656642896886086*^9}, {
   3.6566429625184937`*^9, 3.656642962933879*^9}, {3.656736162785871*^9, 
   3.6567361979139757`*^9}, {3.6567362478735933`*^9, 3.656736310601686*^9}, 
   3.656803242918009*^9, 3.656803413706811*^9, {3.6572295478159237`*^9, 
   3.657229547990348*^9}, {3.657323549090542*^9, 3.65732356921782*^9}, {
   3.657323790719941*^9, 3.657323800650324*^9}, {3.657323831679906*^9, 
   3.657323880934112*^9}, {3.6573239397601233`*^9, 3.657323940182811*^9}, {
   3.6573241974141893`*^9, 3.657324198196575*^9}, {3.657332871505336*^9, 
   3.657332872168791*^9}, {3.65733578469104*^9, 3.6573357859466143`*^9}, {
   3.657343041141307*^9, 3.6573430507805853`*^9}, {3.657343162860622*^9, 
   3.6573431633221083`*^9}, {3.657343402322651*^9, 3.657343415265828*^9}, {
   3.657343797648039*^9, 3.657343800671328*^9}, {3.657344079781945*^9, 
   3.657344083253229*^9}, {3.657344164125094*^9, 3.6573441713245983`*^9}, {
   3.657344588930624*^9, 3.6573446206897097`*^9}, {3.6573446887216253`*^9, 
   3.657344690169435*^9}, {3.657431652544628*^9, 3.657431664583353*^9}, {
   3.657431974916284*^9, 3.657431991181251*^9}, {3.6575097099322577`*^9, 
   3.6575097244124527`*^9}, {3.657783161314728*^9, 3.657783244337932*^9}, {
   3.6577832966343317`*^9, 3.657783326896006*^9}, {3.657783600040719*^9, 
   3.657783633794654*^9}, {3.657783677159976*^9, 3.657783680911355*^9}, {
   3.657783963781493*^9, 3.657783999212841*^9}, {3.657784443770296*^9, 
   3.657784492938223*^9}, {3.6577845515305443`*^9, 3.65778455986611*^9}, {
   3.6577848473920307`*^9, 3.657784849910719*^9}, {3.657784965358389*^9, 
   3.657784969782008*^9}, {3.657785051286543*^9, 3.6577850818641644`*^9}, {
   3.6577854966918*^9, 3.657785499107218*^9}, {3.6577855802587442`*^9, 
   3.657785582050239*^9}, {3.657785618114484*^9, 3.657785620345777*^9}, {
   3.657785769322316*^9, 3.657785916399477*^9}, {3.657878566215637*^9, 
   3.6578785736543493`*^9}, {3.6578788110540447`*^9, 
   3.6578788127416983`*^9}, {3.657879225106694*^9, 3.6578792313930264`*^9}, {
   3.6590521744255466`*^9, 3.659052230665243*^9}, {3.6590522733522453`*^9, 
   3.659052280752428*^9}, {3.6590525216247787`*^9, 3.659052557902446*^9}, {
   3.6590657421860723`*^9, 3.659065742433242*^9}, {3.659066207534997*^9, 
   3.65906625984728*^9}, {3.6593228354600067`*^9, 3.659322835841441*^9}, {
   3.662079686039317*^9, 3.662079689190515*^9}, {3.662178648546401*^9, 
   3.6621786495853767`*^9}, {3.7004899913610764`*^9, 3.700489998018531*^9}, {
   3.700541762101472*^9, 3.700541769847172*^9}, {3.700547846026347*^9, 
   3.7005478486101217`*^9}, {3.700549095258568*^9, 3.7005490971020517`*^9}, {
   3.700573389277364*^9, 3.700573400767294*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"type", " ", "in", " ", "H", " ", "and", " ", "V"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6575127554447002`*^9, 3.657512767167407*^9}, {
  3.659052480046866*^9, 3.6590524886379757`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMatx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"4", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"n", "+", "m"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m1", "2"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "+", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m2", "2"], "-", 
          SuperscriptBox["\[Beta]", "2"]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656297292694029*^9, 3.656297328444622*^9}, {
   3.656297532381304*^9, 3.6562975385009823`*^9}, {3.6562982496639347`*^9, 
   3.65629825754429*^9}, {3.6562986083491287`*^9, 3.656298611309409*^9}, 
   3.656306427813835*^9, {3.656308273411078*^9, 3.656308279826683*^9}, {
   3.656308728591877*^9, 3.656308730175499*^9}, {3.6563088629673634`*^9, 
   3.656308866678895*^9}, {3.656309050293894*^9, 3.656309056461759*^9}, {
   3.656309090317932*^9, 3.656309093932808*^9}, {3.6563091716370077`*^9, 
   3.656309172388633*^9}, {3.6563168656481457`*^9, 3.656316890976489*^9}, {
   3.656316960871664*^9, 3.656316962830913*^9}, {3.65638642891074*^9, 
   3.656386435974999*^9}, {3.657323582308688*^9, 3.657323582318207*^9}, {
   3.6573237907426662`*^9, 3.657323800662451*^9}, {3.657509642653532*^9, 
   3.657509645901287*^9}, {3.657783362227844*^9, 3.6577833773389053`*^9}, {
   3.6577834354593163`*^9, 3.6577834660593576`*^9}, {3.6577835003871183`*^9, 
   3.6577835085618877`*^9}, {3.6577843695325947`*^9, 
   3.6577843719399757`*^9}, {3.6577844070677643`*^9, 3.657784414659824*^9}, {
   3.657784601219095*^9, 3.657784613457615*^9}, {3.657785554220749*^9, 
   3.65778557754007*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vMatx", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"vMatx", "[", 
      RowBox[{
       RowBox[{"n", "-", "1"}], ",", 
       RowBox[{"m", "-", "1"}]}], "]"}], 
     FractionBox["m", 
      RowBox[{"m", "-", "1"}]]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"8", "m"}], 
      RowBox[{"n", "+", "m", "-", "1"}]], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"n", "+", "m"}]]}], "2"], ")"}]}]}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"1", ",", "m_"}], "]"}], ":=", 
   RowBox[{"4", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"m", "+", "1"}]]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vMatx", "[", 
    RowBox[{"n_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    FractionBox["4", "n"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6563063733898773`*^9, 3.6563064249199944`*^9}, 
   3.656308181984497*^9, {3.656308387562365*^9, 3.656308393881515*^9}, {
   3.656308563609952*^9, 3.656308596943881*^9}, {3.6563086668482122`*^9, 
   3.656308696160071*^9}, {3.656736319465687*^9, 3.6567363261603327`*^9}, {
   3.656736356901823*^9, 3.656736363169319*^9}, {3.656800123405319*^9, 
   3.656800133539298*^9}, {3.657323837501042*^9, 3.657323839505966*^9}, 
   3.65733369411416*^9, {3.6573337332337627`*^9, 3.65733376097989*^9}, {
   3.657335820384487*^9, 3.657335835168932*^9}, 3.6573371885458612`*^9, {
   3.6573444577451677`*^9, 3.6573444678459473`*^9}, {3.657351063036007*^9, 
   3.65735107174329*^9}, {3.657431671966507*^9, 3.6574316825099983`*^9}, {
   3.657432020426366*^9, 3.6574320539635353`*^9}, {3.657432107849242*^9, 
   3.6574321093594427`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMatx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"vMatx", "[", 
      RowBox[{"n", ",", "m"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Nx"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "Nx"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6563084813295383`*^9, 3.6563085197214937`*^9}, {
   3.656308620840941*^9, 3.656308622144807*^9}, {3.656308709424307*^9, 
   3.6563087136554813`*^9}, 3.656308747847672*^9, {3.656309060925702*^9, 
   3.656309100220211*^9}, {3.656309166604272*^9, 3.656309167403841*^9}, {
   3.656316874143021*^9, 3.656316878358219*^9}, {3.656316964494142*^9, 
   3.6563169691260443`*^9}, {3.656803207290391*^9, 3.656803209986068*^9}, {
   3.6573235823469553`*^9, 3.657323582353169*^9}, 3.657323615505949*^9, {
   3.657333737244397*^9, 3.6573337583082323`*^9}, {3.6573371947815943`*^9, 
   3.657337227219749*^9}, {3.657343882056507*^9, 3.657343890679265*^9}, 
   3.65734409167073*^9, {3.657344175486101*^9, 3.657344177141325*^9}, 
   3.6573510606063347`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"solve", " ", "the", " ", "eigen", " ", "problem"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.657512771028552*^9, 3.657512790037932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vals", ",", "vecs"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{"N", "[", 
     RowBox[{"HMatx", "+", "VMatx"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6563088389017067`*^9, 3.656308851340508*^9}, {
   3.656308916566787*^9, 3.656308940014678*^9}, 3.656316905935354*^9, {
   3.657432091013752*^9, 3.657432091371642*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"the", " ", "list", " ", "of", " ", "eigenvalues"}], ",", " ", 
   RowBox[{"the", " ", "first", " ", "6", " ", "excitations"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.657512796291534*^9, 3.657512807773508*^9}, {
  3.659052251968075*^9, 3.659052263623603*^9}, {3.6590523496795883`*^9, 
  3.6590523587190332`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657343150091874*^9, 3.657343150675147*^9}, {
   3.6573433284750347`*^9, 3.657343336778429*^9}, {3.657344765977285*^9, 
   3.657344768048853*^9}, {3.6575096739966803`*^9, 3.657509674747406*^9}, 
   3.657783707167816*^9, {3.6577837461505737`*^9, 3.6577837592297287`*^9}, {
   3.657783865262384*^9, 3.6577839311098137`*^9}, {3.657783977973899*^9, 
   3.6577839788288507`*^9}, {3.6577848764703703`*^9, 3.657784877494174*^9}, {
   3.657785011582287*^9, 3.6577850175974693`*^9}, {3.657785069093322*^9, 
   3.657785069748934*^9}, {3.657785207724845*^9, 3.657785214987932*^9}, {
   3.6577852730763807`*^9, 3.657785273868103*^9}, {3.6577853111971483`*^9, 
   3.657785311587915*^9}, {3.657785423420409*^9, 3.657785429836322*^9}, {
   3.657785504611249*^9, 3.6577855048187237`*^9}, {3.6577857961689987`*^9, 
   3.657785797648512*^9}, {3.6577859398647423`*^9, 3.657785951848133*^9}, {
   3.657879242027525*^9, 3.65787924269097*^9}, {3.659927584395658*^9, 
   3.65992758496881*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
   "4.6962464785475895`", ",", "5.966088794186341`", ",", 
    "6.867831399724061`", ",", "7.647581006412132`", ",", 
    "8.329897786909125`", ",", "8.955273521442104`", ",", 
    "9.529759594417703`", ",", "10.069154508594272`", ",", 
    "10.575867908677191`", ",", "11.058058266126665`", ",", 
    "11.51693411481631`", ",", "11.957378727700164`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.657343151490694*^9, 3.657343166075664*^9}, {
   3.657343332752213*^9, 3.657343338084137*^9}, {3.657343407793621*^9, 
   3.6573434179505453`*^9}, 3.6573438112887907`*^9, {3.657343885092284*^9, 
   3.65734389382876*^9}, 3.6573440946439867`*^9, 3.657344179953517*^9, {
   3.6573444736175823`*^9, 3.657344492703066*^9}, {3.657344596807176*^9, 
   3.657344625741992*^9}, 3.6573446930867043`*^9, 3.6573447687597303`*^9, 
   3.657351079166313*^9, 3.657431686126972*^9, {3.657432026362198*^9, 
   3.6574320567479763`*^9}, {3.657432096922822*^9, 3.6574321126067677`*^9}, {
   3.6575096605660353`*^9, 3.6575096754694653`*^9}, {3.657509714385029*^9, 
   3.657509727924184*^9}, 3.657531796107718*^9, 3.657783174629057*^9, {
   3.657783209249997*^9, 3.657783248919382*^9}, 3.657783381502706*^9, {
   3.657783455525043*^9, 3.65778348299368*^9}, {3.6577836713261833`*^9, 
   3.657783683547021*^9}, {3.657783748417467*^9, 3.657783759982511*^9}, {
   3.657783867933694*^9, 3.6577839318703413`*^9}, 3.6577839817904053`*^9, 
   3.657784496324244*^9, 3.6577845641001453`*^9, 3.6577846669819517`*^9, {
   3.65778485357953*^9, 3.6577848783020477`*^9}, {3.657785001342984*^9, 
   3.657785018725424*^9}, {3.657785065279667*^9, 3.6577850708696527`*^9}, 
   3.657785215716031*^9, {3.657785277274829*^9, 3.657785280853281*^9}, 
   3.657785312453781*^9, 3.657785388559437*^9, {3.657785424025794*^9, 
   3.657785431244361*^9}, {3.657785501849468*^9, 3.657785505706517*^9}, 
   3.65778556101525*^9, 3.6577855924861917`*^9, 3.657785623611223*^9, 
   3.657785734914654*^9, {3.657785773555004*^9, 3.6577859215363073`*^9}, 
   3.657785952476837*^9, 3.65787857935428*^9, 3.657878816563136*^9, {
   3.657879236418907*^9, 3.657879243169561*^9}, 3.6590521955624247`*^9, 
   3.659052297052588*^9, 3.6590655467115307`*^9, 3.659066909984065*^9, 
   3.659322856955262*^9, 3.659327081188828*^9, 3.659927603673678*^9, 
   3.660864510505291*^9, 3.662078888690361*^9, 3.6621792402611427`*^9, 
   3.7004902095585613`*^9, 3.70054198558462*^9, 3.7005491189975557`*^9, 
   3.7005736258408003`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "construct", " ", "the", " ", "wave", " ", "functions", " ", "and", " ", 
   "plot"}], "*)"}]], "Input",
 CellChangeTimes->{{3.657512814772626*^9, 3.657512881917996*^9}, {
  3.657531824238019*^9, 3.657531824613532*^9}, {3.6590523052324963`*^9, 
  3.659052307727664*^9}, {3.6590661885498877`*^9, 3.6590661973255*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "j", "]"}], "=", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"i", " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"2", "x"}], "-", "1"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Nx"}], "}"}]}], "]"}], ",", 
      RowBox[{"vecs", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "Nx"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659065628356748*^9, 3.659065673247036*^9}, {
  3.659065757833518*^9, 3.6590657656987667`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "Nx", "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "1"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "2"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "3"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "4"}], "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"Nx", "-", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ground state\>\"", ",", "\"\<1st excitation\>\"", ",", 
      "\"\<2nd excitation\>\"", ",", "\"\<3rd excitation\>\"", ",", 
      "\"\<4th excitation\>\"", ",", "\"\<5th excitation\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659066458382326*^9, 3.659066512894219*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/5D/AzFLYrM=
           "]]}, Annotation[#, "Charting`Private`Tag$1167496#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4pv7948JxQpZ//8+pf0/lNoZVA==
           "]]}, Annotation[#, "Charting`Private`Tag$1167496#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwdmnk8VN//xylKSFIpUrImEZUlWV5FiShUEhWlCCklKZVElCRJUglJexSJ
InJ9rNm3LNlm7DNjmZk7k1KW3/3+/pl5POece5b38nqfex6j4Oqzx22WgICA
OvXxv++dboyGQqa9ie1o9+85kvUmQmayZ2gyOggq/hdmKnACG58+Svgksw2W
Ifc0/7DOoV9OOfiC6m5MtZ/N7rp9GVY1rZmJMvvwW01OutspGMqRK17OyDvi
QvEFn3s1oZjceezhUVVnbKkU8VRWD4fD8d/fYmSOY17uhMbOF1EoMZP9Upzg
jp1PzN759UdDW8k4gy/viXuPXg33nY+BSG9Iyn7V01hTWMrbG/4AXVo3ze7I
+GHl7IAD+XefIHmJzY0ImVDc6shSXPP0LYJFPq2+JRMLP9PifzVLcnHA8Vk6
h/sCmjmTh0O/VkFsJvjQjpXpIHfYl3kuaoGK3Rij+HYWFtsJMh16u3Gh1gCP
+Llok72Tcv9EP5ZmLewWFCTQ4VC2RYjLwKHIf/v6pQlITqpzJYWYSDk+UFWm
QWBNSm2y9FImNJbk5t4+QMBvV8eoqDETpv5HHizJIOBVXfw7OpwJvQSHV7Fa
hSjqPOqquZKFo86vDr/pLsSw3n8fv5sO43OvWXWdURE6NWjGcd6jaLEI5t7Z
UQR9nz3DTVdGMf6hQNp6D9Wesl5B+M4o9C8bHP1+ogjXalKit7wfRc4irfHC
mCJcTUlxlB4dRe422VWZjCLq95qNdl5jyH/FORcbW4z9/5XUmjux0Sm+7vGe
p8WInrze+d2DjUnfkwWS74qxKyNVy/ACG8YYFLlDFEOow8SUe5+NgtaOxDBW
Maxelom+qWaDECkv999Sgqvjy/1jVnBQ5JW43HGkBPIlF3Uawzj4xDx50nm8
BILaCdHPbnPwwmNz3jGBUgztfeLleY+DMPdWp9OLS5GSdyi9N4EDC9eF8deN
ShHRJloW8ImDOsewZR8iSxHm/ERBmcZBYdtej09xpdB7HtHk189BhoNiTk5y
KWqVDtz7xuQgxp5wKM4qhaxkqbo+n4P9dhNxbZ1U+8XNN7+LcNFpcWrJbM0y
vInor7DR5qKm3NBNRL8MDQyfNbK6XBSYi2bP31oGnYUeCp0GXDzd9nrfMvsy
OMKm0NyMC9ctPfc1A8uQLjq4IsueC4a+vdSBmjI8KpA367rIxS9V4wXvT5Wj
5vCHTU45XJj0mpZHXCzHcffNDbb5XNxItAjyuF6OXas1QowKuZBevI+t9Lgc
pyRzOWQ5F3qCJ+viS8rhsiTzdFsLFxc7Ht0NX/4dzTnXZf1JLgrjkna4q35H
fehNrc+/uBDZ82LGbP13RMxz+sH6w8Xj7+k+M+bf0e1m4Lx+houv2WU2/r7f
EenxK01LjMTkXf6C4xXfMY+VmMxcRWKb1d/yrT++47G2ifNJJRKRcwSuydO+
Q6L4wKoeFRIrAsU47fzvYLxNWPtGnYSJl2K93aoKJHoJSjzbSOKGilq41toK
LBUZ7iF0SdTSNbfM16uAya/beo36JJwdDDK+W1WgNep8doMhiaBtttG4UIHX
idoRxmYkvs/YW6wIqcDTY015E9tISOYdFPgXWQGx1xtPvzUnkbz+xJnPKRVI
Jz7X9FqSYIx4q8W+rwCdrgxvKxLab3zpZ3MqYB5c/x/DmkThyqu2mrUVyL4Y
M/LVhoRI+3URsZ8VsMuMfi1pR8L2wa1CRl8FdPIsYx33kOgRe6D9YqIC40qh
9qX7SKiXxzOChSpx43TADoY9Cd+Q5GSXBZVwO6f/dHo/iVkTqZLLVSrB/z21
S9iRxPIaUx60KqHiIzU4QLHOs5/Nxw0qYXrZUjfPiYT1+TM5t8wq8bXNSSHs
IAk3y7lPPuyqRMcb5ftmh0hcXZEU2ORQidEhh4BxiuO4Okf+HK3EC1WrysTD
lH0eu6qY+leicNPK9Apnar2nJuaeuFaJMQP3/btdSPzdGs26HVEJb0+F2+UU
L5JeXZMRWwmBey+cdY+Q0GB9S29OqsTVq4O0hxRvL9gX8/dNJRyv/beMTbFz
zLCf/KdKLDv4S8zwKAl/9xCHbd8qcdxrfdZliu9ultnsWV6J3Y4WQh8pfiOR
IRfVUIk5q0MZ7RQX9prPZHZUYpsqw2KC4p+fu3paByqxXnm+uLgrCTLCr2SS
XYnUuHWyiygWcxF7rfC3EnLXJ1wkKFbemHLLXKgKhy59qZ+injeea+B9UqIK
N4TCT/RQvL+jbnf0siq0PgtcnUuxT7r7+mzFKrQtSpANozj8+tSido0qPNXo
ttlOcbJD7Pi0XhUU10W2TVD7y1279qfS1ioE/DErTaG4cea/PAurKhTfX6m0
hWJW04GkU/ZVeP3ZcaKBst/sN+xrMS5VSExo23GAYrkrN4598axC2cuMOU2U
/XVtV5h3nqtClnm9qinFu5Wz1ASvVqFS4fX9l5S/3P/sFFMNr4KlXYzuFOXP
oOqe0Z0xVRhmZPEtKH6UfLHeJ6EKpQYteeFUPGT4LfgU+6oKOXa0S/lUvPTK
GV/spuqUksfj4pkDJP5xmpxml1bhmSVht4DixaVexmp1VYiuU6VJOZAwP/Vo
lm9fFSIXnTQYp+L37TdepLB4Nax27/DWsiVRdC/CR126GsrjPbb03STa3RT2
2Kyqhk+t/uGwXSTEJWyWPtapxun9mx+n7iRxxvndM43D1RAuXe3hTuXjrQ1b
Q+1OVMPfUjjksymJlDlt7v5nq3FSYtj17xYSTR+ENQrDqhEuLJF52JiE3syR
z3s/VOPgwo/GsZQeWO8qDNmeUw1z3tp7UZReHHsib6NfVA0NYY8TgetJROt3
D8m2VINtaOmySZME0+egTO9UNeLmGHspKJMQKPg60DS3Bob1uZPfFEhIi8tm
li6swVSBz6vd8iRM37TtfKtSA0vRUhdrWRIJdPsrZ3bVYPnTl7PyFpDIXJdt
4epQA9ennc8nxKl8urJ4yb6jNfA8JPBJQ5TEr2VN7/XP1+DFxaszPkKUP+1s
adMJNSCaliZ5UnoqWLTT9M5IDYJqJ2bku7lYJvlOImi8BmOrl99+1s7FOud5
HWcEavHifZD30lYunP6Wn9u3uBZXuO4m9DousjZsf7ncqBYuhKn+AKX37s8h
8u52LYRXJcV8TOZS/ZJ+PHlQC64u7eD5BC7uYzr5ztNaBO8JO6L5iNL7jnyD
s59qsbdml/Wlu1zILN58clNHLWYVlLTeDOSiOlSntky9DlfVi1U8HLjYvKBq
1j3dOszy335ccA8Xbx4f1T+4pQ5SI55pkdZcXP8Qlcy2r8PxNvH0gK1U/zaG
77LgOpicqq3+oE71X5u41Ku1DoExNk2BfzkwZYZkzDGth1jfPqmsuxwErKut
PLmjHjzrDuJeOFV/z8kM1FvXI/3xQNzRYA5WTqfLPHGoByf1o2ybLwcTUl0h
Wqfq8ePT6WuK9lR/I337A4/q8fDPdc+1SzmQjx6eeDtWD1G/M1BVpM4XR4Pe
ZvLqUf9rRP/DQjacNy5yzPtTj7vZgVkrBdlIaNmcUz2rAbFp1e9zaWNYtiLC
ny3dgORqg2cdT8Yg9U6Np4MGDP5wvtC9YAzCJW4jxN0G3NluL0cfHMHwb1p3
s3YjmG2/XyrsZeHzibtFO/UacYGv5WttyMK1VpNXhGEjxgh/MxclFqS/JJ56
a94Igq5cYcT733nu4OSVQ40Iz5Q+2XyPiXh+i4xyeCNOWTOmwioZsODW7POl
NcKioPjiI/UhvGDlVUpENWF1blxq2Ns+SKx4ze7v/4Fvec9SG+mtiPTMdk9W
bkHI8dHfyWKFGN+S2u8R1AolvZf+k/XFhN+Gkizp4ja8FZSiK1xuJ2gfSm43
KLSjZJ/4Gs0XA0T9qNDIhtXtKJv9LdWmeIAo1NhuHavRDs/87+wjvQNE8rtS
cQf9doyle8vZrBokXF+V3em0pviTTrDDk0FiMPH73aEL7TDdsHeDZNQQMRpZ
fX+qph3WH44/MndjEv+8fjxZc6kDZrvfqTT9GCH26R2+ty6oA7sf3oyXHR0h
0gQHb2wM7QDpOHRyl/Ao4fzo91njqA6I2O9ROK87SvxXKmthl9KBJzk3m6pi
R4mbq47yL1Z2QKWl5mGgzRixqGXU+rtsJ95lZI7bZrEJ72f+pjXynehnMT93
V7CJEu8Z/UblThhcsN1qT2MT/rMXKnWu64T2T/3l00Ic4qe2zgTblGL9u1+X
anGIp7cvvVx6shO2r0fHFwVziLVb506753Wi/J9yx5/lXCLjXerqtsJOuHXp
NgqpcgmdxbZ2lmWdUNfRVZ6lzSWMhh69WNvQiTslGQX1Zlxi9x11K85gJw5J
t2zM9+ISvj93PQqQ6kLQ/RqXvGwuMW5K/sda2oV+XSvtlgIucTktbvjgii7I
Nnq87innEqFBNBMTtS6k7/GOq/zJJeJUzg7MMunCG91tG/onuUTu2dgNkZ5d
GJ+1/tWaLSRh0rHp0NTpLryT/1mw04IkirZ1hZ3264JbybsfB21JonKp6k/b
oC6kbLGZvfsISXR++xK05EEX1Ct6hnyDSEJAtKM6qbALUkcCbn39ShI7UhRO
fFzajco6OcNfyjxC55GEaplcN1rn6Ru8VOcRq6L+9bcrdOPp0neR5to84m9A
s6uQRjfS6J5Thwx5xHu7W84OW7phttFTvs2WRywS5NpPeXRj2/g2V5EAHiHw
u2ux1OluyGbPLKoO5BEjI5VNque68fjK83/XQnhEWdsLO9vAbswEMY0KbvOI
gIwDu57f60Zo5bJZYYk8guZSuM3yKzX/x/WJRgU8otr+/WxnohsmNcEJC4p4
RI5VfJFvSTdC1BmxTaU8Ikbfb0tCbTdWQPHCuhoesX2BmhGbem+riLscrNXB
IzYIL/k3m9ENh8X+fbe6ecTKf4Jfl412Q1yeLtTcwyP+DHbom/7uxnf6233G
DB6RWnB34wMxGtrDROzs+TziUdYV8q0kDXWvk+t0fvOI0HeeHwuW0PCXocIR
+ssjnOPMtBjyNAw3quldmOERC0//VjfUoWHFbPrDF/P4xPSxfqaNAQ0X3Kbb
5onzCZZjw5vjJjSEXZzd5iLBJ0q2p6pGWdDwYK7VaJcUn7iwwkWx5xANH5St
Nygs5xOuttr7O4/SwEuNLxFcwSd2XxeMaHWn4Rut7UjTSj6hynzOrTlDg+LZ
sI+WinxCSu68SsV5Gu6GRXmNKfGJqd3mjiWXaPDSm68XqsInfmQxCr+G0rAs
xUn5uhqfKBzK5WffokFGwunAyBo+kSp7W+1jFA3yascI87V8IuSaZvTrRzQQ
G5MN6zT5xOlP08UpiTTI9fL2Ta3jE46Ddb8TU2gYrZ1+I6fNJ7StfV1i02iY
k6jOWreBT8gFmd2/+5GGGxNGZQob+cTczMXlEZ9puCduly+swyfI/oG/YXk0
jNXn/9dOcffSL+uCC2m4qfigOlmXT1TuDHe9UkpD7UzYDwc9PpEd6Bh3oZKG
ha9uNM1QnJyhXulbR8OMuGPZI30+Edn3b+rUDxqSpCvSFDfxiYvSNes9f9Jw
Lu3lrUSKj1kmuR3vptpP+rnOM6DsecXnsUsfDR5dgybuFG9O31LjxKDhI2eF
WhbFqr0LBfeP0iA6Xr2aR/HCJX06diQNyY62O5Q284nJHVke1r+pePCridpG
MeNSWMKOSRospnyEHChm7V/r8UyAjsCullQnio9wFs2Sn01HBe9bmA3FLbcm
nyQI0xH6cOSuLsVWSgO6siJ0HA32KhWnuDC/pu6hKB2VxuMrm6n59fZ/9lwy
n46IPZn3oyhOYyfNvr+AjgsmEzIGFCveupkoKUXH2PC2Nz+o/T5SPKMftZiO
evfFekcplsg/0CC2lBq/7mt+N2WvUPutJ2/J0BH1SGjTLoonxtYIz5WjQ5H7
/FUaZd/T4VJPQ1fS0eflJDpF+aNf4d+mWQp08CU6T5hQXL+v2ntKhQ4dpV1a
sZR/zcey5lxWo2PxFnraG8r/+TcTk/+o02E+u93yw3o+8frr6R88LToyTFpE
7mhR8bHP4fTZDRQf6jFwp+IpZhQibB06jPw1X2tT8XZ11UIjlgEdbcrNeo/V
+QQ/d6L5hBGdqu979+hT8eq1t9dnwIQO41aNxLLVfML+xqfndDM6FE49fpqj
zCc0RuzFWnfR8WXz4etMKn9y9lkTEbZ0THGfXxmi8svsm+k5k710aAmEdzXJ
8AmnKK2OlwfomHXzxuSFJXzilva8VL9jdJRPHNZki/GJxY9nnNXc6fgrJZF7
lMrvZMFxqU4POkbUn4oUz6HGb+y9ZHaasp9G3ridIJ8Y9MvfKRVAR7uJ6Knk
XzzCtytzuvQyHVvtcp+FkzxiavvbzICrdCo/fL1c2Dxi8dI42Z7rdPjZ+2e2
UXpkluvDSo+i4+yJsJa/7TwieUoxYtcLOv4r7Xovks8jNNxlTARf05H093pL
1xce8aV2AZn1lg5Mrxh79olH1D6ddJRLp/oHulaMv6Pm29qyZjiXDg85g+rG
RzzC6cativA6ar8BWqUHz/KIwbGgQKNGOuoUncIVvHnEWQf/9ZwfdKy0MXnR
4s4jwtWOPXZopyM7TbJN4hCP+Fxp5Kk6QIeSZWPA5+1UPVjAESn5S/nTvPpQ
3xIe0fgt4qblFB0Fkp7HRCUpvfZWmVM3Q0epQK6+kiiPkKp0mt0u1IP3/TQP
9WmSkAornWJL9MAn01Hx7gBJSP6LJ5cr9UDDYCYp/SNJiA9t7zxn1YPH1tMl
l0ES1Q/oThO7ehD1/mFZnz5JRG67/POqbQ8izB/PN9EmCbGUjJZb9j2YI+wT
WbGKJEQPL2946tIDNbuxMmNBkhBp4pRWnevBDfmdX18TXEKIeJKulNCDos37
uc82cIl2o20WtKQe1K2SPJGoxiXSv47Q459R/YNVpCNWcgmnz8ZSUq974OJW
v1pflEt8fE/zE8jswYJoJzqNziGcE5Q2d5X3wDPnTofPbQ6RE5BaEsfrgcMV
lUJaKps4qZP3c55VLxLvbQzICRshCuub03J29YK+htPldnKEWHKKE3TCthcj
O/+r/mc7QhAvVVRL7XtRfMIov2f5CLFoabTvtSO9eLXyb2R8xjCRN3Fc7Pf5
Xqxhb98x0MwixAgJ4/7kXuQuU2/zlGQSqZauyQXjvXjUl37L0GqA+DUsKzkY
14cngRW2D406iOy9O2bHbuvH/n+fK/aPFhFBFmFPswb78fC4wMFho29Q6NrZ
9jxsADslei78XNmKzfqhsTIbBmHJ11h/zqUPLa4yeok6g9jvPavsyaU+nIv6
0LpKfxC9Kq/Esx70IW2gTVbNaBBrj50S/FTVh5Wxms/0zAcR7GEzPaDXj1nc
lvd7nQbx3wmFuQtFB1D1bk35nZBBGJFMlu7zQXi0FHgsDBvE67JFaRr5gxCa
tU/0wc1BRMXMX7KweRAmjld3JUQOInztdVrKnCFkzG1qehc3iIzT2QEMjyHE
Hr9CL383iEDJ2dZdaxg4tLJuQrBpEBJb/XyWJDIhIeObnUeNc136/PqQbCb+
W7Tk7Pm2QYy+ashsqWFCdd5BBqNrEG7dR+T0p5lg8wZb6hiDCJgYu9p6mIWQ
iulPidOD+HND4mzUsmG88Vt32oA694sSj+o2XB6Bk0/DGp7GEMR7rTeERY9g
vpffQJrWENRaXpz89nIEvi5fD63SHUJ09SYjWt0IDHeaW83dMoQCw821TMVR
1Mo7qzXbD6FRkSOtVDKKX5V3es8ED2FO2o24RHIMnWLNHpPXh/B7z4WmM7PZ
KLKWY9+8MQSf7YoqGovZiK599y/p9hDcZIdeOumyod5YvrjmwRB4NUub4/yp
96ufgjvWvBvCmbQDK+P5bJQNnU/taRxCZ3ThoW0+HKSpfVt/qnkISZzjszT9
ObjvKZTzp3UIm9evuTUvkIMjwzElC7qGsKdvEzsxgoO/Y+ldxkNDWLg/9sCG
lxxojTMXxP8bwshxZUnRNg4eCTn77VFm4KWmiEiQDhfTx5bqNqgyID4Zp1dk
wMXx4vpfNpSfyn2r306YcKEdYnZh1zoGrAwdrbZbcvF9Ru2SxSYGxjZJCu8+
zMXvv7wgE2sGVk9YxMhd5+KQ0/st33YzMFU+GpJ8k4uiXHdBIzsGNtT2vlkW
yUXUxZ8hBvsZ+EyWpA3EcqE6XhCmc4SBVx+vTnFfcrGfe+u2uh8D0cluJhWl
XOTbmlm/9WcgeNPPX3cquFDMmBRXC2BAes+KBvMaLsZO+0SpXGXg4+YLmg9+
cBE2su/eqnAGotR0eS96uWBZSex5GsFAlqDvYbFBLmxTy6VW3mHgWdirn25M
LuS8Nscuj2HATTSvYpzNRdaQ/EPpBAbkc2qqb05yIbvjp8ODJAbGWQen7sxw
ce1VzLLFzxhQalExD59FwtpNOH7hKwZmymK8HUVI9PeyEsQzGBhaNnPKZxGJ
Rd3ZKbNKGDgudumm22oSUeKBgV/KGPBxcrlGW0NC1HDbAe8KBkTjBy5ZaZCY
9ahxfkstA82hHq0T2iRIO/bFtz8ZCGzcF51pQOL0tc97nTsZkAp0KC8wJMH6
ELhuEY2BdAnxA9+M/3efKt5/pZ+BL5I0vXtbSdSXqtnYshnYZ3JxVYwFtV4+
e40wyYAya26E1k4S3xW/CH3lM2BkJaZMWJEggrZ/VfrLgOmsV3uzd5PY/EH8
QdskA5tt96yUsyXxubPJ584MAznnba6ctyPxwcBV5bcQE3quT5YI/O/+1mON
QNpcJhaWVu1cb0/iVRyn/YgoE5F3JebZ7yeRyLsaXbmACRvJzLpzB0gsUzQ/
GSTFhLTzoo+nHUnE2s4311nCxPXPAz8OOpGIfP/kX6IsE04FYn3ih0iIdLq2
7FnBxMZLJwbqKQ4VVf84dxUT9+eUO9w8TELAgHs7X5EJv5TM/drOJC6fyHE/
q8IE6Ss7U0Xx+IOgrapqTAi9dvFyciHhW2Iu16HOxEjO8LsOisfI+b/vajLR
7N1bYXOEhJdCc8M2bSYExneXfaZ40CYhbWIDE6HxnAeSR0m4Xj1284MuE27f
wlcfprg7Td312CYmHgvvdk+g2LGDa7TMkIk23z/GtRT/mJe7tMaYCd9zhUkk
xbabrpHBW5hI+Zl6bZ4riWr3HTV6Zkw4Cj8dkKLY4oHEm+HtTFTfbf/5v/va
kuLmkGQLJuSO1fr+7752C5lw2N6KiUsyZ6q7Kc5fdXyT6G4mgp5eE/5Esb7N
2kWELRMMYyfDSxRnBpKj5/Yysa6dH6ZD8bq03O9q+5mUHpXxe6j9vWu/9rzr
ABOWy+bcCaFYdZ7F1ZiDTHQYPbCUpjhFf4HjDmcmuvqeySVS9lrp3rJx8ggT
p7yySGmK42MTJT4eo+LhRebn65S9pYuPM93cmYjW0NrfR/knhru2RNaTibpc
21JdiiVW8ZLqTjJxJyRN8DLlT+HA4H0GZ5k4NKd4fjfl/yzuyARxjomGtS9D
xSg+7n7gqbk/E54sbokmFS8lNlqsvZeZ2KwkJWLnQMKvJP5ueyATWU9+6uyh
4k3ZYI7u0WtMdJevu2RBxWOoYlfQ6TAmcuIM7RbvJaHz0ELl100mVta8bWBS
8dwvllV5OYLan8GgVRYV79t+RSy5dZeJWNdbrNVUPgh935T6/DETg1Ky/8Kp
fMoyemGrnsCE3V5Vf+Ed1Po+LhjPSKLqWtLcGf/t1PriB7cUPGci6a3XawNT
EtdPxba0vWeCk/niGKj83dA7c9klg4lOmX57dyq/e/efVBjMpOpg4cX4EH0S
pltMvXlfmBD3Lm2O30jpwyKOoEQRE7DlS1mupfx58+Dr2BIm3svPey5D6Ynr
ZJn18nImBA9I3KOpkigaSHyoVs2EYc7BCStFEiE5VppmLUw4/NW1fLuMhKDz
6wMXWUyUx+udPDebREaj1PT0CBObine9SBQgcWTH1edhbCbmZtDivk1xUaht
PxbDp+qwIVee9pvSw9mzQ99TdTnFfo1O6jAXAm+d03ulWFAqtzFwa+CibKT1
9NMlLLiKnX74gtLrSG27dYeWsbA/yPBIG6XnS3PM3jevYEFt/se6FUVcrCtX
S/2uxoK/sPdfxUyqngyQrz6YsHDM/6TpwmhK/9d4u5/cygJn8yb3hNtcMLwH
VNS2sZCaKPlBjqo35/itL55ZsjAyVaQ9FchFxOxvKbH7qOe1/8zBSS5yFW4m
XfJiIWhKqjnfjIurbgLO+qdYONuX9juBqnfb3gas4PuwQDps/udL1cN6be+E
U+dZyHpwhiagRc0Hu/gj11g4OBnBSZHhUrq1PM48jgWG0+rt/0Y48I1PvyNV
xMIdufRFHpEcfJmMv1lUwsL2N2ftNG9wMOl8I9i3nIXfDZd+MoM4uKl0+Hxj
NQu97RHHLc5xkJAmejimlYUrHw9qxDtyUFrgpiE1yoJBg/KXV8ocLOtbXrWQ
Ouc8b/6YuMeTjW9rw0UWnh7G8lWtxjKBo9D7sbQm5sww9O/OZXBOjSLjyut7
i88No3OX1LwC51Gk1JTJLrs4jELltmyDLaMI9xHWlA8ZxqS21NSXWaPY8ynE
TjNuGO+/Sl/PCxvB0ObAeMuCYbjuSi55EDqMhTt9NUIkRjBiGrH4DJXHnZr1
TQH5I/DP67IdvN2PjCQo91PzVKi3v6SV0nA4XW/hiulRNIZYXbEca8G1sGfB
ne/GUH34eW63dTXeM1Y8kbBm45yFeGqSWj7CE8OOdO9mY+lMUjXzUx6O7xlV
+WDHRkBwF5mLPMjl52fscmDj4J13PpkHviLi7sGySFc26rZMb1oUlQMPvcdc
0QA2nu3evXPTvGwohi62mPuKDb07Q1lZfmmY3nRlfusbNj7PW+7xICkVP0f7
Gl+lsvGh5uiblIp3iHb4dNj8Ixs72y+I2a16ixn1PefC8im+8DD7bP1LdDbc
TZrdxMb8XLJowYkk5Nz4faypmY2FGV0lmnkJiDV0WfO8jY2E9gXZDMknsHq5
Lsu0mw3WP0epqsyHUHWKC5DqYcOmcdA8VzAOsxZMm/T2sREqH7zKZGcsvl6s
qQhmsvEeh52ONUQjTlP3rt0IG94d8unaclE425uwT4HNhlvBTknjqxGwfigk
y+Wy8Va9+ZZL3Q2oWXvTCqlzZHOcpeHXOdchJPjjRfRvNtoK9r5RVroKerah
15G/bFx8/5+wT9F55Hs919KeYsNRNd44UMkTD+XFfs3MsDGQxP7//6P8H5VI
+5k=
           "]]}, Annotation[#, "Charting`Private`Tag$1167496#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwVmnk8lN8Xx21fRAlpQVokSZQ2S8qxFbKTLZGQIq0kpOxUdkmSJVkrWSLJ
du1kyb6MrDO2GczMM0Mi9Ht+/8y83i/znPucz/mcc+99vey3v2tynY2FhSUL
//j/98Xrs13VZDOVxhl9mcMu3VUcGiL3xoRPwYbxKv2yhws6mZqQVCSsCalv
esebFz3Q5G4J/0eSBkDVjGKLafdFuu0DX5KFL0HSOrk0RyAISYSLZf7bawUr
XnzXTu98htYuOry+JmkL3hvCyec4w5GF43JlrLAjKHedNWF0xqB6DZFvdUlO
IOXZ7WT76SWSO3CuYHGvM2R7tfnVBb9C3MSA9+aSdyDggrK8u/QbNHIsVCNC
2B3Yy2+eWpJ9h95tNwx5IRwExUGyZ5Si8pA/d9Gh58JxkJrpKB+SWYUsrdLy
6VgG0I+28bI/7UK8//yvaO3Jh8wDTloc8sPooDF1ti6sGDg25d1aLiGhRz+V
IGHxO1jnxs/WZpER39GvUz+4y6C4JvZKbzkZZUTIhf/dXQau9rYThE4y6tI7
RLA9Xwas/3IM0CoZHWkVcjsYXwZiRcYCi/oUNNZEy/qiUA7sM5NKOxkUpFWT
ydfuXQGPMs8HjB2bR6P79n/diKyAbYv5ZWc05pG7X5K1XHoFKN3JQyHm8ygN
Xua8bK2A3tP3L2I+8+hvpZ/65d2V0NrLdOH8MY/yy6w9ZiorYaQ+/QHZZgHt
LBYYZWVF0JD8IYTVm4quhP+9NLkDwYjaTyw8nIreO061NsogOBb5kJUllYpk
tn//HmaJwM6EfORtHRWpe9i92l6A4HCquXQmLw3JJ1lkxR2rhllDrSKB1zRk
9axtIvhMNdxKrgjgzqEhH3c1sUfnqyFAZkJsspSGavSOxFlZV0O9CF/LxSEa
0lvf8N8TWg0TVmbeC1vo6Jptlk3OaDU80SU4junRUdBF0TdvyNVAJNnG+Fyi
oyz56N4Xi9WgHSEXwXuFjub5vHVv89TA3JZh4oYLHXkgfaUT8jXwwe3crdPP
6Ch835JQRUQNnPmPr6oK0VHeZhejzwk18KJF759LIx11/RkNS0mvgZtC+oir
nY52dDWz+X+vAZTHmiEwREdp/kn081M18HSrSq0dk45KiBptHWdrQUCW12Ne
HEP92v5YhFYtjBUZmnlJYeh3XtUOPZNayPJxfLMkiyGFx0rXmm/UwgijtrBc
EUOl2479ro6thXDFavWn+hga9HIV9U2uBRpQHwSbYOjP2AfVczm18CORKutj
gSHFXImw75W1YHrLg65wDUPfNUX2fZmthZOXD7CT3DA09NHi/D1mLRhpFv65
5omhVf5XLkc3aqFatP9khw+Gzoxs/fpxWx3k6A58dg/GUNnD/y6mq9RByrkC
L+orDFVk0d3i4urAI5HdLaoIQ8Obj74xSa2D6/ah7FgJhtYe3Kri/1gHbIs7
lVTLMHQOprkjUB0UBVpw5VRjqGrgV3IwpQ6SomW6k9swNHpOuE5jqQ7kfmWo
3O7A0Ea6+SwrSz3cinpOONyNIZV7XSeebq8HF/67w84DGELcTU0eqvXAo73H
g30CQ+N3OBZO6dZDTVDj6TMkDLH0qQkyzerBDAsRtp3CkGpaxZW7t+rBJ/Le
jdtkDNlxrfrLetTDqyVUaDmHIb/bCtlzfvUgWClClFvAULXSF+xGfD0Yc+Ue
zKbj8VNpOyTT6oE3/HmPJgOPzyl7dvJTPYwcn/v0k4mhfa4u196X1MPegv3J
mksYUuvODrGrqYe4Xz3ZWb8xZK849WlPWz3M1foPLy5jKCBFvGu4vx7Wbqyb
HVvBUK1LsqjVfD1EjK88c/6LoSLyrVu2v+shYXt0l+UahjJunil3YGmAnldj
kgrrGIqb4eZ15mkAv/h+T44NDAU7DVy+I9QAUtpKn6px9pjK/Oi2pwGkpdcT
bv3DkJOj+6qnVANE3xYV/o+FgSxI6hefnmiAlVxujgicte0FEgPPNoBj47Qi
OysDKU2MkZ9daADJ/JdpN3CWtstTijRqAMEOyqkynEXHfJ6/vNwAs5PDv1dx
3myrS0hwbIAPOld/H2ZjoPVh4cMpdxrgOGeUjhbOVOtZz3TPBjh0L5/bFOfR
oZLmnIAGoOcNaevj3GEVvCsvvAFMtc/vlMe5etD0ZlE8vr7lr4dbcC6wEC8t
fdcAlqfqrHrw9dL66VxVHxsglp8lNxTnWDNkUVfcAMsm2/WkcQ7sjchurmqA
0hgFoXI8P3fTK8vtzQ1w+KzlqBLO17ultXq68fjL8s+zcH3MjVfiB4cbABvJ
WGPBWauzaXpkugE8g3RkdHA9FQ3j5Un0BjjxzGuXL66/1E/HkNnVBrjN/Nf2
Hq+PsP7J/gWORihRE7AtxuvH08YqyeRrBI4XFFLRKt5fFzsf/tnVCNqCfQ/T
8HoPa9/ezi7bCBWkkNULuB/am5Svcys0wruKMGwD90/VBZ6vW9QaYSAmbjVj
EUOpmtmXdpk1QioxrLsMw1B03cMMsauNsElE4oo07k8/dc1FcedG+DRywyOU
ivtNdeKl7JNGGHTj/LsJ97cpyiedCG2E57tCDY/h/tdUeXpSMaYRQt7l8KjP
YOjgWdEe9cxGuOlbuH4M759ZBTNBy/ZGqPphqSw3hCFCyQF7m4FG+Imwhlq8
/1pOMwrtJxqBJ02RW6MPQ59ORhnfXmoE1rgO9c2dGLpz7Ed0gFgT1Btya1bV
Y+hq3uvx0ENNwHH83pvyGgwZyTrJRRxvAn79gzuyqjB04gh75+vzTWD+Tn9Q
vRRDS5Lntn6+3QQV6mOzyR/x/ieqN73wbIIed7pkaRaGQpK1fW8GNoGawo83
Fe8xtEPoEu3Amya44R0ZE5iIIXnWWx2J9Xh8RulxzucYelpxL9SzowmyKeNj
d4Iw1PjIA8yHmmD3ie1aNb4YsqD65wvQmwAZlqADHhjy/JUQ9Uy0GVat9Ycm
8PlZHZ+i5STZDF+fQHLiFQxxm2T80zjeDEqWiRfO4fP2TXP+3X8XmkHCzawa
9PB5+bXR0ONBMxzipEoqnMbnYdTiVscfzcD/u4ZtnQ3XX3e1Sa23GVpC39WZ
rOH7DSeL396xZpjZyNOIXaIjsSe89KHFZrDtK93+c4aOVFzEO433/YAeFp4g
xVY68tU0ioZHP2C5zt10LoKO2FY+8YsebIGJg+0BP9noSLRdnQnHWmAZ4m24
F2noVBqhz1GpBayMjOz0iTR0XYfrbZ5+C/goP9RyrKKh5jf2B9U9WiBJO+Z7
szsNRZ0RPuPchD8/Hf4odoiKdvuEOHxzboW78hnHL75YQKeNxC4Mu7XC6iEV
/63uC8hAoliK9WkrlCaI6BTg5wXftomFi7Gt4OQhwBkkt4CIu895jpa1QkHX
HgmP3nn0oZIZ/t/mNgB6z/mC7fNI/p9diWleG2hxxw1QnlCQnn51wPnSNlCq
s13rdqAgh7d7DRVq2+AOa29log4FRSuMzoj0t4G7uVN7sxAFke9aCxPX2+Ck
oopE6gcySho387mn3w53BGyarNpnEWvtRfWI+XawKqtwaV+fRm1Bp342SneA
w3FSSjk3CZ3Z2soWc7oDjD6rHgmYJKKcN9cUrFU7YOqyhvuRaiIKzIt8RzPr
gPynhTKHHhHRmcHZB7v8O0BprVeokTSBco4k73QZ6ADvH1tO5H0bR+rkgAJO
9U5obuGYtHg9jPZGz618oHbCpi/sO8ptu9Hc8thon1w3ML4LxwUcS4UMSnkL
X2QPNBmmq02qDsKd14YHXF72wKFc39OW8YOgoEl63JDQA1YGW33y5wahJZlH
1ie9BzLq7ytwxhMAM7KKIpf2QAIlVk+PPAQq336b1pN6YMFBIZT+fAQIgcdH
vJR6ATgusHZaTACfWDZtcrIXDpb1UpHiNKiaB46QyL1wf3zL0xfW0/Ag6mor
kdoLhcW3KpSfTkM/667s8T+9gNASGNdNQ8r0M9vhzX1QG7pooqo3A0cLXNp7
TvXBXu1rLquWs6CvcfRTbVAfbKgtJwxeocBTH543Nc/7QP985fNtPhQo+Dod
Uh3ZB/5iEnzH3lJASCrVviqhD/paw2K5CBQY3swvUpbbB7/N77OdNZ0D137s
WWFvH35e9X8fqjYP4c5fnd5J9IODsHLWZQ4qUFQ/P+OV7geOo63X0vZTQWtX
5kePY/1Qz352okKFCmxNcVS9M/2QDVPC9z2p4CXh7rFi2A9aw0WPfpCp4DR2
IsTkcT9opOXdPVhPg/oS6ZxKv37Ic/zvaNYoDcQjxVukQvoh/h9h488fGoyc
FeT7F90PPgNfOp7voMOlROzVp6x+SBcxXnyhQwc1s4JMju5+mLHWCBb5RIcU
mZymuwP9cNpwlDpeQoc19nfkoeF+iJDKlI6qpUPplyjZwpl+OH5lb/h7Ah2O
8t/9arPeD0U2vAJpnBjsbpVtKJEagPRyr3SKNQbe7w/O7D86AFh0+S1xJwwG
vMQ2RZwcgH3tnBOq9zCIldqi76AyAOZhnz2OB2GwKWS+d+ulAWjM30Yf+YjB
b9VPkzd9B2Ag17lbj4lBRcbc20dBA9D3699Rk78YBHDLmIY8HwAnc74QVXYG
8HXm1qS/HIB3ST94BwUZIHk1L2U0ewDWYn/R6XIMMH9SaHmpcwBOq2hKf7vJ
gN0T2FaHvgFg9wiJ1LzLAKLmiab7QwOQz1bEUfaQAXc2F52OmhwA6n3f4zYB
DAh5WyzY8mcAwju4UoISGfD1+7c22D8IzWuluwwaGeAt9ifQQHIQetXGTKxa
GaDqr6hsc2QQhi8Wzep2MqBN+/sH79ODEBZzWGiGwIDJgbKQrzqDkO2pmLg0
x4CPyn/P1RsMgqJEYrEynQH3UpWXuk0HgeV8uYLzIgPWnCoc6DaDUJ9s6eK9
xgCh35WqRx4MwugERcudlwlDVhvLSo8G4XNJatwiHxPeVarka/sMwvhCzrC1
IBNkgpGYU8ggvGwiiI7tYgJj9l+ve9gg/tzAyqooE0r1VMMDowfhV+eu9+t7
mKApVLP6LnEQzkCB3jcJJvB4sn7JTx0Ev7pPZncOMaHzl5pzVcYgRG04ndos
zYQr6bUDv/IG4YHXWszaUSaIc7FHUYoG4Upxv5jhcSbMumhcWCkdhOo9e14/
O8kE9xP1xTvqBkEmbptugQITnE7texfTjOuVGJ3WqMQES3mfsM0/B4Ge8vwG
UmbCRcVBj9CeQXCtff888RwTlM+csmcjDELGXzeGBeD5nY3WfzI6CJ2xd8KX
VZmwR2Ve8Q8J10ugTcML32r4VbUl3Mj43BrW4x7RYAKbesZWKnUQtt6O/Sl+
ngmLGix/by4OwgbLQvTFC0yYOn9lmrQyCLbrQYaXtJjQr1XaZftvEPhDf21V
1WZCs45QJYGDALqehb+26DChTPdeziUeAqyWP0SVOOfqt73s2EqA9wIuzYYX
mZBiKOV7cTsB+Iq/stXjHGUc5NIgQgA769RHIrpM8DMdN1PdR4CtVw/ImOL8
wOysWvlBAsTNbt13B2dHiwQZ+SMEOOFVo38LZ3OrxZ2FcgRQNw39eBFnbWsj
dhl5AmR0pB/ajLOSTS41S5kAYtEtRfn4etJXuYf2qxFgg0Y7exrn3dccG5Iu
EOBPxckvSfj78jlUF+zUI4DQybz/pvH8WK7vToo1JoBfM1lWAGeGk2foFgsC
uOwaldyD60G62fvg2RUCNPAYMjbjevW6yNmy2xOg6GHw6xFNJjS6hus8vUEA
wR/O4tG43h/vae5zf4D/Xlbu0Fu8PkkP3vHSHhHgG6G1hqnChAj3td/OTwhg
eaHD9yhe33uexe1XnxFAoO3x84u4H+y9+b8PRRDg/qnjQ0dwv1zycc0we0mA
tYJtlrRTTFDwk3ism0KAk9bHC3fLMUEqwM+pMZ0AW26dvx8iywSRoGFjtQ94
PJWWI924XzdC46QUignAcoLXaetBJtRHcfSLtxCgbLtV7z68P0pi7GqSOwjQ
fub48UQhJuS8rMjd1Yfr+6eycImfCWGv3QP5xglQvtnQ1XQTE0xSJ+VWlwiA
zAM0P/1hgGaa6u6HfwnQNOt8TgHv39PpSVx0liHI/l71MpPGgF3Zl0aneIfA
tyf82OFpBozl1Yd17R8CqdCYS61dDOhc4Jg/cWgITk7/GwhoY0C1zHm9OBn8
+eTIOrEmBrz72LDZQmEIRl+57d0oZ4B9VmPEsN4QKMsGqtzKYIDJFCf1nMkQ
WFEKj6qmMEBDQssg1QKPH3+Yf+U1AyTeN/HZ2w+BzrW4jzvCGDCd3Bw182gI
7AWPVrDcY0D/MDdd+8kQZO7lmF3E52WTqI7Rx4AhSPC+i7VdY0DOmx/8tyOG
4Mmnd/VSpgxwedUSw3g/BDFjNk9iTjFgIbzt5Xr7EFQOZHxQYmAw2rp50bZn
CL7ECyS7kTH4yaN/qXpwCIag6XTsOAZ5z9qFAklDoODxyfLJTwzuBf18xb0y
BHcfBNpt/oDB4uPO19skfkEf8dXffVYY/HXpfXvY+xcU6wopRmbi+5u8TcxR
31/40dZsWCeRDrms0yEng37BoUi3UFokHWwTlu+fi/wFTfzf9q48okNNg4i2
8ftfIB/VtPYfvh+G7ru26NnyC16liDvt+kmDbf0Les0iw0ALlBV7J0kF1zQP
9fa9wyDf/NOqlYcK9a7/FLolhiFn9afYT+oCeLALHBg+OgxiV0I3W5csAEHu
1ApNfRjSmzqWEjQWIDXMO3PnrWF4+fvycof5PBxR49pwKh8GM6XAnv+u4eeN
j58ODVYPw/L+osSScxQ4JWRkrNM4DB1qN6RVRChwdiYh40jXMND1rPi6u8lg
ECGtS58eBk7qMU5+dTI8IOgneAmOwAXF0xe2C8/C9/txJ8KdR+AYv5PS9k9T
oPV+/43CnaNwV1mFV9N1HB6JXRWfuDIGYpxsQi2vG0Fm3ox3QH8cJK5VmFXG
NKBtW+nc9avjYMLxRtm4fxx1V74I1VkfB9ecn5cSNsZRrOtBzo5/4yBwf9eh
ZskJJNhymX2IYwKkl495T3jgHNywTuObgKPn1BWXtxMR/99EhuiBCXjHE7Dk
Z0hCm2fOD7vpTsDCVx7Gzbwp1PZq/PKK/gQ0ruwOd+qZQuGajwlPjSZAZMvN
xxf+TCHe9wX9z80mYF+VgEKu2jTisRHtSr06AWXXecS5e6YRdw+9odVtAjhW
2MdGaDOIA73NP5A0AbHNBmdH+Clo6Kym9ljKBJwSd2wOPUVB+WXz44lpE1Du
zP6D25KCLpecExTMnoC2dxbvI1IoqPDzmDvLlwkgNOw8lHx4DtkmHTgz0jQB
JljUzpcK86jU61N9PHMCTgaczXA7TkWRy6Y2Jr8nYEv1k3MBhlTk8HBtacvK
BPwOFHC2u01FfPf1DwVvTMBccNX6ixwqun6T9txtExG+BQSKv95NQ4IWJw2N
9hJhojZT8cFfGrp1qpywSZcIEsGuLS4/6Ki6sy+3VJ8Img77uQT66Gj7bbrv
DSMi8Gp5pSeP0xHKPCjZYEaEKX2Cn/MyHW3bGf3Az44IMNUm9eMAhspXHHmX
HxLhzB/+ydRHGOKP9x3N9MTXy+OMyfDH0PUTiYWXHhMhfv/yz8gwDG291WHx
xY8IxCW7hG2pGHIYVsq4HUYEK3vLq7/w+zIv4js3+Y4IxgbLQ5d4GcjO+jD/
y3Qi2G95WfhhGwN9XdYgqWURQWBwrzlJlIGuynk9T/1EhIKyExMcMgxUlEbq
u1xChCpTjpWNiwzErbKRs+k7Efimq1w8TRjIZmiXT2k5ET60vubtt2Igrm0G
4jtqiJBkIRV37iYDWQeV3ulqJcIxrxJiRSADFezrUfP7SQS6rFeT+QsG+q9y
QehYFxE4Dt6q6o1moPwl8fLwfiK8NBFb8klmIPYbEVzaE0Q4KGen+PQrA33S
sX9X9ZsIX8JHnsqPM9Apmf0qsEKEbQla5LJJBqriG/+F/hLBjTPBX5LMQJ09
NjtrWEhw+IWweRHGQIs2VpF1PCQoOr/zSgYrEz1R3SWjuYUE3j1RZPv/mIjz
wMCP+q0keJjN0sC9iYmEZy/91yhEgrTv6uo8/Eyk8sDIp3kPCfYPG44QdzNR
06WtIjr7SUD5phE6tJeJjBR+fvtxgAS89ft2fxdnIvs1XWaLFAls39gvSksx
0dwoT4zuERJEi8QqVkkzkXvNj6NtsiT4Ht1wU1GWiUJDtFzaT5CA29ulcOI4
E/E7c3IbnCZBoYDsGP8pJkrUbcj8qUCC9j7F/YfkmSiXX2Oi4ywJXFV+sW46
w0Snmay+RkCCq/m/cnqVmaiqr3p3lxoJDpoz3ULPMVFnoopl9wUSfEx5cfW9
KhNZPVlfMtEhgRXac5tHnYmIVyte9uiS4FrkZ28rDSa6pf74+CUDXJ/yoMdR
mky0KHGmo9eIBJxOtQ6553H9uFZczUxJoH7l8eGCC7h+lG88/WYkGL1S3JCo
xUTRbR455pYkMNmz47SrNq5n/ukLA5dJYPDioqeEDhO9j1kkWdiQIH9j5WUd
zjLuRf6DV/H8C29G61xkoq/mD/Za2ZPgXGqlZwnOKkrHKwmO+O/HOS7z6OL6
i9IvX75BgrqR/9TP42y0kfdnyJkEX7R4VG7gTBi/HW/titfvZLHVPZzt62RO
Dd8hgZYJS4odznOZc11X7pNgB2sEvyLO7s8+3h1xI8G6nmLRb3y9DRfnLbYe
JCiP2ROUhHOovtSnUU8SuLCsPjmMM7/cjPbVxyTYSyYkJOPvnyiYNT32hASR
Qvta/+D5HlhyDLLzI4Fj6iceZZxzBw6ITwSQYKuBkIEjrs/pMiK6FkwCruyB
CHdcv6qkNBtiKAky3S833ML11fK1+2v/AtfPP5Opg+vfeW3vG1I4CZy4W0W3
4vWx0hyVd4wiAaGTolmuhtdPMrl3MoYE2+16vQzw+i7NifBPx5Pgh4C4qjRe
/7jkmaakNyR4/kGhRA/3x0nDYl/TJBKMj5zbY6LERPe/6NOq00iwU6uam/M0
np+jSPajDNx/dgvvi08wUf72Gduj2STg+bh85YIcEy14+v18m0uCR++NpbYd
YaJwaf0Qk3y8/t//HTHA/X5kWFhl0xcSzK5pKbgeZCJnKPrs8Y0En/58VjfG
+2Xqv+lw41pcn3EHPiTAREHfvmhyN5Dgm0TBIUE+XD9n37WqJhJUn/f20OZh
omttu1xl2nE/pP/YfpWNiUZidXW5BknQ7H06Xx7vbx/NXexVQyQ4U81bkjnP
QKK/J8vcR/D65vK5/JlhICurp9JEIgmc08WatEcZqG9v4abKBRLc0N3dGPeD
gdy7ntS40Ukgvedj2756BtoWeNFLmkmCkBqXoOgqBjKeJs2+/kOChoF+a9Ei
BmrP3dH8gH0SumfYIiYSGahBySdESngSdvB+ZFe9zkCOc9oqY6KT8HL/08Gt
tvg8S97++9WeSdh0b794vTkDqbHkX2eXmAS/7Da1IS0Gqmyc0Bw9OgmaSw57
kBQ+n0212OM0J+F1JL9bwBSGnumWBu/WmoTNVRyGyiMYuqJxmDtTZxK2lWQI
jPRiiO0k75YSg0kQveZm+qsOQwaCHTsGLSdBYpNQV907DM12mkvvvj0Jwtsq
iy3MMSRi4GSc8WoSJLWCwlcL6Gjh/ECPTMIkdK2dcljIxPezc9rmXxPx9Xo9
lVsT6chJVtq6MXUS9OklitpBdFS0meo4+wHPp8fdT9ucjvRaH3rKVE2CzoOQ
A13zNOSrHZxaPD0JC1oLgm74fttte/OKHHkS8l9cDxg5RUUSD3WFc+cmISju
98MDIlTUkibwMp2Or1//qlt9cgEJ/U0OiV3F869Xtur3WEA5n0tu3+ObAudj
vL+9X82jTsFZZRn5KZDdEfYv/jsF7R+5OJgePAVdoturU7Km0Yta5XyzZ1Pg
yhXLbuw/jRjZMiFcYVPwKvGC75T1NKp9wHfqVvQULMbLWJTwTyNH7u6oE2+n
YEhN0X/dcwrlnLTSqimYgr8l8FRVcxIdfXGjZPTXFCjUh0o5Nk2gMwpBccIn
puHoWx02kigBXdnTscLaMw0u8sW32Zy+oKWWCOI9/xmYPHGSLdunC4Z5+26u
Bc5AyV5716ttXVCrt5sWGjIDN5NmbFZFuyH658e/KWEzELSTcKSvrBuku5uE
2l/NQPf41+4tyz1gS2DVOvxxBgRKHl/Vdu6HxpmHnya6Z2CF5quUe+IXJHDY
uptIzMLB9Vh6vTgRNhx2nu6SnIWcyOfafZpEcKzrXDI8PAsfpr1F2p2IIBeg
8Uj/6Cy+367zuH0kQvM/KW9txVngdpl4GydHguVVpq+K3iywhy18XlGYBHPs
eZi0+yys5Duo3MXzrjDS0PvgMQt6h0I8JY2nQbxgbbOU1yycfaASW313Gqh3
7kYefDoLodntAcm50xA8fylm37NZEB0LYf8rMQPFM3tf70iahcCW636H+Wdh
2+jX92z1s3CihwNsOsgQufnJk2+NsyCr8DXk+TwZeJQ1LV1/zAI6P24WtYkC
bAndW/p/zkLbNU69QxoUYBjTPD8QZmH3zEmxF8UU6GyQMjSizQL9+nrh9ug5
CP/89m+yCBksNI9YqB5eAO5h+34TMTJcqic3eqktQBCPdCHXPvzvg2eDnlst
wOMbpU73D5JhLT1s7cjzBXDZ39elKUcGtari437TC6D9ii9n7jwZSoMHH9q/
ocJ/T/wvKd0nw1/aQQO9MRoUY/MryI0MRK/Yjr90Gjg6WaZe8CDD+ftc6eqs
dKg3PEYxfUwGce8OtZeCdAgSH/G9E0yG/QM+Mqan6MDRrPgp/Q0ZVv7sttZz
p0Px2Qwj6SQyWF72tFt6TAfHwq2/C1LIYOQXLxYWiMdLnFatSifDaM3osk8s
HQJvx/UPfiZDebL6E598OrBto7Py1ZJBPeJV1fwUHb6EWmfH1ZNhWirvP8d5
OtivNeqJNpHhkEHoeBODDrVTya+l2sjgH+cdYfaPDgGlurIa/WSYMAo3D9uJ
AatttqUnBY9ffV3wuiYGBd2CGxt4nXZoS9h+0MHATutpejCNDFrRtxSGDDCo
ljOjxi6Swc73YT8rfj/0Y2cP+rxBhqOBKym3XDFg+WCbTxSkAE9KqGV+FAaN
8wN3UrdT4Hqsr/vOOAzC5YyPXtlFgQr43H8zAYOdpRqf+8QokDP0Z6jpHQZH
m6Q+NUtR4J3GyQHvAvw+yvPeJfgIBThUzJ7IFWNQZiAqrX4Uv7fV3N3W+Q2D
8/1bPpSfpEDtJE9aWxUGV6YYWXkqFIi20jYubcVA/LCr0y01CnDtCflTht93
Z12nDkppUmD6dpNudhcGbosDGWk6FLDaFJ1ybgADRUVjR1s9ChxuuEGdIWCw
8bjlgKghBeoWCU98hjF4wV75Pu4SBXq4ZNwcJzAw0pK3N7agQEqtcNU3EgY7
wvL3812mwCr/svDSFAbvBd+/C71KgbyXY89kKRjcNBe107SnwOm0n/ek5vF8
E+P2sl6nQD7pwp4tVAy+7w9N8XahgGf7PrE4DIOn11lsFW5TIHai+bs8EwPN
D15ii3cpsJPClV23iAHPAmO44AEFZNaXtyr/xqBTzjXp9kMKOLsd3p68jEG8
+5S1tCcFMvl/NJH/4PqU2orOeFPAT6ns0P5VXA8wTrTzowBpyjPDcA2DvMAW
K7FAChRu0w65sI6Be5OG8FAwBaIuMz8f2sDgDG/lYPwzCuwdctzExPmfgXyC
aRgFRKxOxef8w6A+Nt+CP5ICQXcoDtosDHjRL7WzPZoCCiodsd04G4m873/+
kgLC4GmoxcqAHbai8RfiKeC1MNeahfNwWpwZ+xsKkLM+K2A4v5/asr36LQVU
PFRKJdkYcPNwaK9PCgWuzIY7aOEse5slTimNAlol986Z4swo8DL9nU4Buyel
ihdxLl1kCBZlUeBJe5KyDM5PFV27736gwMmnSHIFj6/pMxUjk0uBgZLLIwU4
81TbGpPzKJDFya5vinMn+yB/ViHuD7b7buP4+8drGXfa43NpF0HymiXO1mEt
UXu/UWCTvINiOZ7/vg4Nw+HvuH92R0ptwnlasJLvTQUF+uVZb6jjeuWay/80
QxR4zf9a8gau74PE/AjBWtwfj/OjHuH6f1tLDK2tp0C6GjnD8y8Ga7Yh/g+a
KCBnWqzshNdLveb+Y/EW3A+PVbVVVzAIPWDzsLuNAq6ct79w4vVtC9a+G9BB
gcj12CvfcT8Izp50PtFNga8rHkcslzBIyuWxiR2gQLjabrbLDAwm+H6bqw9R
4Iwqu3AlHQPJ+xNGjGEK3OZE7ptp+Dw4XappQsT9ePpS1b05DBqqrssILlBg
uVwq6RLud579xpK1NNy/0SkOe/7fD4Fn9z1gUODWG/MTfaMYDGltE+pepoCb
X/+9TUMYUDur/8awzYGNVoRaWAcGJ0/mLqn9NwcM6wdSFW0YeL56TcO45qA3
U/jO0A8M2C/fIRlvmYNMIc/JsToMdpFEWwV2zUEUh1cfP97/Nue5GmpE5uCA
wZpjfhHeb9mMqvticxDv0umljM8PGdcfX7rE50BWqH7T7g8YqC15JMbIzgFL
6r5s1kQMXLi6nQU05uBHmHqZnycG+c6VDjXn5+DdKps/qzs+f1pzbO5rz8GZ
s1ax9+5i4Bvta9ylPwfHv3BJiThhECcsqxRjOQfwfJtVmgkGlUeecQvcmYOu
bxZz0VIYyPfubI+9NwfR1F9ODgdwPX2yY4Tc5gCpiCce2oO/b3ujyC7POah7
trgevA2DZ3f/k90bMAe3IlXLU9bpYFIUYCwbPwevqC9sznbQYebMk0SdqjmQ
5n+oHHOTDnakzVdbq+dAkUk1LbtGh6GwpAP6dXPgxEn0GLhMh7bh8lyj5jnY
8e8NO1UP3y+erlZZdM9BDsvFUy/k6OBT+4h0fXoOIlwlhdnnaCBw8YFMAN88
nFXNrReiUuFdzVbeMwLz+Hn5I5fMMBXklD6TsW3zEPXILEe6hQoGUrNZ14Tn
Id/jq/pIJhVecNruV5OYhwSbjsI9V6jAUaezg+XMPGycvVt6q34BfivvZ3l6
fR6mFAor/wbNw7BsZ49XxTwQFhpzuDrJUJACEpO2C5A4bx58CD832+TLC4ht
LMAhDbNoc+MR8AtO8x/+SIXuL95zZSNdsOUR18Vrn6mQ5nf4zZuvXZB487bg
dD4V2rxHJqIiuqBIVymdVkwFVz/zqK5zXTAt0FXPhqiwdUEwNCC1E3RTWLgP
91DhjPXU3tafP2HHt6uRD/9SodihcpVnewt8nhV7y6dHA9tJ1pjd2jXwLDnY
btSABhvNFhJx69XgaLJwMM+YBuHGe7huFFXD7oqKAn0LGqRp8Mbs31cNL6Ks
G8PtaVCRnsoiuFIJN+XfYDxeNLyf4v4wg7+DeJCQNlcWDYwVyjM/chbChqLP
loEcGpyMmLIODCjAdSF1Z32iwd/0qXGHjXyItiiyuVBIg/hPZ188ZH6Gf9Im
bsEVNHDWWXsVOPUBhruiUth7aGB97XbMU2IalIYsO/T00eDhkE1n3MQ7iFO+
ejh9kAatx21zWOpTQTfzaLH6KA3c9h3bI1X1FiQvx3sJTtCAwyu573PZG2Db
uqFCJNGgm71aMavgNZR5tv/wJ9PgqYjZ2EDcS4iXPR1lPE+DsdvY00m/GLhP
TLq0n0aD7BsJKodqIkHvNYcIhtFgiE+L4HzvBUjpuY5VL9LgsG8G+RhHCHCw
9mZEL9MgRv8c+8YNfxj/quxit0qDmYsXrb7u8IIKl/Rjcus0eKTqFia04Aqv
9/Iu/ftHA++7av//f1KV/wH+ckZe
           "]]}, Annotation[#, "Charting`Private`Tag$1167496#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwdm3k8VP/3x7O0SXaFqLRIUumTFpSXpEKUIkuFoiSyhAiVypoKFZKI0iJU
dqFcOykKM2Qfy9hmmLlDu+V3v7+/5vF83Ptezuuc8z7v83jcUbRzO3qWf86c
OWsE5sz536/h2eHG0pFj2lY6vjmYQ9cW3Cvn3iOrjhtnnp+tUHfF1qS4hBxZ
PfQciPHcBT8MyK+54aN0CMyZY4L16jdxsL41O1HWDGPTFVrTfKFYc0fhxewK
K9j8dJNNf3UbU4b2D08r2cBzUcT1F3JRsDjz6+N92TNYs9Uw6ntwNCr3yhVU
JDhg3q1U0edvY6G2enfm5IrziA3N5B76HocFfTefmSu5wrNX7/bPZYno2hy6
966sF86Xn9xo9ukZkqUPh4TLBuFlx4JbQ7+y4F//sNK8KAh6LSQzISgb5sEM
/tUngjGvOTT7nngOhH9cDChOCMHsddOc9ZtycZkWfZm94hb8o1cc1nfJx5EH
7U6HlCIgr+LsPG9BMW4syFl3SzYaH5/uDG45Xg6VA/fCst2jYctuESvPKkdT
sNtIR000DH7LEwoLK7BGQDV9k3cMjG6L8qe+r0D19PNNtKZYxBz3/WcpXwXh
idhtK+48gpeD7OTQZA3iuvz25s08QV7XBT7R0XpYWj19xyWfg+lS9YBuR8ei
2RsnDyx/B7MSxWW/9vZi7ZHx4YrbudigQFsj8WUIcgEHNM89zUUk8xfbamgI
Ym+SbwsV5GJ0TpfVPf5h/F1guulIXy7YF/mk63cO41tpgWf3zjwIOnWN3Xw+
DD+1GzO/mXkI+OihVnR5BA2iUlKbdArQmtOybb4ECxW7Xc42HitAWew+WpcK
C++dq/O9nAuQYCjDiN/LQkrNZavi2AIsHHDXqfZi4XJA1xP9sQIM1HotGqGz
sIrzcr19/HuIPl/pr/WADZ8GDcRNFqKGdj0k99cYRDblMT8tKIJ9MCkesmgc
z++q3fknX4Q9986Haa4YR6PRujabfUV4N89c2GD/ODZ8lvJcG1sEk10Husn7
4+ip4bzM3lGMUJ/9H68rceC9ztl44GAxPNyd59rt5EA4dHBC+lQxzsn9slM0
5EBjf5eOb1gxon5nXdV04eBBZV072oqR80vWuSuLgwNlL0Tq/T4gtbq/+Lgc
F90rFfNmIj7gecmGvu2ruPC6nnBCLeUD9seG8fOpcPEUD1IffP6A4R1h6bYa
XPz7eF33uPxHyIsvPa1nwcW7ohPeQx8/Qqh8Md07kov9cq3ysk0fQWaPiSnF
ctHpe7TCcPAjTg87LytP4GKhhoHYW5ESLNNqaiNec2FfsD3Ny7YEi61+BH0q
52Jprng3Hx+BVPVnm6a4XJy8889sYAkBv5pD7O8/uXh2hvm5WpVAndK9toQp
LlSlCwtvWxK4nCmW/X0+CV3vUzHSmQQW0E3r5BRIhB0yFP5dRUCOtBLesIpE
vZJ6YHsHxWrLBxTXkchgBb7/KlCKoikFmwo1EtsTLF5Gby7Fg7zw3w26JKzC
vvQGa5ZirUPgItEDJK547VHw2VeKwrFZ9taDJMqMNkRbnSgFU2yjiqopiYGd
yV8NHUpxMPz4p1lzEvPWSi/adbEUVpavk98fJ2E0PXNjeWgpjGrX6LSfJuE6
4vlR9H4pGB2rGbpnSdyjD/+ek1gKzavKDlGOJFreNLn1Z1PjG/orvruSOG3z
0jq1uxTHossMlvqRCDJc9ujRSClMrvrLJV8h8XJ7FC18shQB3R6twgEk2CJ+
B12EypBQvSr+fiAJkX/jITbSZUj8bPAqPZjEliH78sMryxDTWpaSGkrCmzDW
+G97GS7kd+ob3ybxKL3ca/WeMijevG8weYfEh4c7MqWMyuDG0pp/LYJEd2AG
a65FGca2lBwbjSTB56647tfpMuR1sNdp3COx5mSs3fCFMmwPTLrrdJ/Efv1F
T9p8ynCgSzH92gMS59Wvt9XdLMMbx8UZl6JJ3Fn5Q+rD3TJ8qErJPRxD4q2w
k8mbuDKYMhfThWNJNP7uvv0khXr/rSPfG4onB0xrIt+W4YyNvZjaQxJLGmv5
bxSWYV9KRmkMxRofd2t7VJbhamBnRRfFJ19n+9p/LUOTt/GX+XEkrsWsyzNr
L4P7lrx4SYqf3kjg7mOWIcLp3AI+iitdxFV3cMuw2OjPom/U+EGrkHPK/8oQ
3mBQcJ3ihfv/PZOdV47JG16bJSlW/c+9W0i8HMud7iWHUvs7tJwpO7WsHIu/
iqp1U/ZcFDp+bEypHCdNS7lLKI7+2RDVvaUcLx13dGyh7M/v2/vl665ytB7f
/GUTpU+L/g3y7oFy8MpMpSUp/X6+LVlidLQcv1VlZtqiKHulp7SErMtxpqpl
TyCl/w5/jdO158oRKct7KUL5x7LXOyTEoxxGXpsXXKH8d/lAbrre1XKMF76z
+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

           "]]}, Annotation[#, "Charting`Private`Tag$1167496#5"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XoruWPz3jwHlXC////vCyv8BeKTQTA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1167496#6"]& ]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox[
         TagBox["x", HoldForm], TraditionalForm], None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 1}, {-1.2992665943702184`, 1.2215360224303238`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"ground state\"", "\"1st excitation\"", "\"2nd excitation\"", 
        "\"3rd excitation\"", "\"4th excitation\"", "\"5th excitation\""}, 
       "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}],
             ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.6590664765669603`*^9, 3.659066519949102*^9, 
  3.6590669303707733`*^9, 3.659927608019174*^9, 3.6608645151136017`*^9, 
  3.66207889281691*^9, 3.662179251363331*^9, 3.700490221255316*^9, 
  3.700547854938505*^9, 3.700573631932189*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"grd", "=", 
   RowBox[{
    RowBox[{"g", "[", "Nx", "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", "Nx", "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6593228664769917`*^9, 3.659322902535652*^9}, {
   3.659322933081605*^9, 3.659322959287615*^9}, 3.659322989423965*^9, 
   3.659323033968504*^9, {3.659327080865181*^9, 3.6593270921655207`*^9}, {
   3.660864562909492*^9, 3.660864573957357*^9}, 3.660864859317457*^9, 
   3.660864932333987*^9, 3.660865225603046*^9, 3.660865366562159*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ect1", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"Nx", "-", "1"}], "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"Nx", "-", "1"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.660864583516913*^9, 3.660864611685224*^9}, {
   3.660864935477583*^9, 3.660864942701808*^9}, 3.660865090179964*^9, 
   3.660865223307459*^9, {3.700521879936453*^9, 3.700521881148972*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ect2", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"Nx", "-", "2"}], "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"Nx", "-", "2"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.660864614784986*^9, 3.66086463056491*^9}, 
   3.660864756524847*^9, 3.660865369713791*^9, 3.660865637584381*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ect5", "=", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"Nx", "-", "5"}], "]"}], "/", 
    SqrtBox[
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"g", "[", 
         RowBox[{"Nx", "-", "5"}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.700521909685049*^9, 3.700521924077202*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1", "[", "x_", "]"}], "=", "grd"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g1", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"x", "-", "\[Epsilon]"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g1", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"x", "+", "\[Epsilon]"}], ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", " ", 
    FractionBox[
     RowBox[{"g1", "[", "x", "]"}], "\[Epsilon]"]}]}]}]}], "Input",
 CellChangeTimes->{{3.6621932195267677`*^9, 3.662193308664997*^9}, {
  3.662193519719761*^9, 3.662193571238151*^9}, {3.66219360570924*^9, 
  3.662193671844571*^9}, {3.662193704966365*^9, 3.662193719221651*^9}, {
  3.66219381112787*^9, 3.662193825724393*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LHS1", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"], " ", "grd"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RHS1", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["m1", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m2", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], 
       RowBox[{"1", "-", "x"}]]}], ")"}], "grd"}], "-", 
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"f", "[", "x", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.662079001562428*^9, 3.6620791224189*^9}, {
  3.66207915840313*^9, 3.6620791732350607`*^9}, {3.6620792098349047`*^9, 
  3.662079237283226*^9}, {3.6620793123462667`*^9, 3.662079315378318*^9}, {
  3.6620794410897093`*^9, 3.6620794461295233`*^9}, {3.662079884446393*^9, 
  3.662079885030048*^9}, {3.662192907085266*^9, 3.662192930571857*^9}, {
  3.662194108706918*^9, 3.6621941098016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LP1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LHS1", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"0", "+", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RP1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"RHS1", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "/", "20"}], ",", 
         RowBox[{"19", "/", "20"}], ",", 
         RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"LP1", ",", "RP1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.662194278425671*^9, 3.6621942958075743`*^9}, {
  3.6621943725781717`*^9, 3.662194419264537*^9}, {3.6621945240687304`*^9, 
  3.6621945329883842`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xjq05i0JN693mA9gK2c4ntceIoEV/ojBwbaea21QZ5GgEBrgw8X291s/qsIh
YXW9Yvd37MyBYhHaBxKG0h7L/MWusZY2kvtIwl9DcevFFwj0rjp57/LPeD8y
Xm0Xxv6j8iNl2RQJIV/ebJTAVsvyqxb9ju+P0pmTwt76Z4gh9IsEW/sNOTLY
wYF2iwX+kPDrfoegLPbzIO8VCYsoeNKp6/yfmStXrInjpeB6u2PYCuwvw32W
MfwUODic91uOzZOd4npSgAIx15GNktjS2+gBJ5ZQYDh/jxLF1lw0Fxu1lAKb
sKaDS7CN66ovRopQUCCo+pQH2y4k8M5RMQrceOQF5/D9eWuoN4dJUPCB95PO
FHYok9l/RJICkGrUG8dOupgzFixNQdu64zQm9mVbx/lAGQoa3Run+rDv8AhK
BMhSYNtfUtGO3VTfqu4nTwFrZMTlITalud7xoBIFJk3aXpewp1kf9+9XoSCw
tLs5EXtxTnGUjxoFIkM8i0OxV/FJF3lqUnBzbRVswTZr7HnkoU3BMc7w2vXY
28OSu91WURArbPFbDjuCnP3mspaCMp7DOhP/5ePlyiU79ShI8WhJ7sXOd/Cj
OevjeKxKGqqwW5qGbByMKBjyci85hi2U9zh/swUF4w+Cb03j85NmHj8bYkkB
vb666gX20lGrnXkE/n3WsaCb2CJrX4hM2lDQ0frmuyO22JOhuPPbcTxltdmX
8XnN9L/KbHCmYHVYgo0vtrj4vk2jOymoXHqgSh9bwmNi2tCNgrHmF7ee43og
+XXWl+GD92+HYMM4rifZOY3t/AcoOG7UMlKOLWUaq7zWlwLZwYoHIdjSZxYP
xftTkMO7zOgrrkcrFKXtNcPxfow//zWC65ni1vX6YUkU+OQO+aTielj4eSaz
IJmC96nb/Iz/q48X6yc7zlJwPz5Wa+wMgZTYcFsmg4Jl37Z2mmOrRjjKPr5E
QUVHiQHrNM6nG4F/BUooKLcKcmMk4Hqxed0evTsU6EZflYrE1pqcrnO/S8H6
V7viRLG1jaLD7lVQcK+p9KhJPIFW96S8d66joPpVu0ByLIH0ft7uLuyiQKVa
OZwZjfNP7fO6om4KWtVjKvyxM+wNcm73UGCd9rn5+wkCTdxo31vxioKYqZUu
S7FvbCNnWt9R4HtNPVQjCq/nFVnl0QkKLHOLJTRw//pqnn5UR4gDfTO3r9vj
fqjk9887XWEOUB+iiEf+uN9ny1noi3JA2K6rVRH7zljpEtNlHAjJDNs5cRj3
56wnV+3lOOChsl8pHPfbV9SfZ0d0OCBq3TnrhPtzZVKoYu02DhgM/7ExcMX/
V9j+/IMdB27KKmj643lg4qF01HJHDpyeaWwpxPODylh9f8QODii0RCst2oHn
ha08Zzfs4YBn55qTdY74vIlmTz0I4kD/qrniMTx/6OXWPC3P4kDuWUGjrXi+
6alcHMG4wIGMmf6AncYE8uvarSp8iQMtn/0dvTbi9fg1fzIgjwNivedlgw3x
enhar9cp4oDag7z8U+vxeqi8vVJSzQEJsbJMTx0CVd2dDS16y4HiFB0hbVkC
jS2/NfZ0kAPOe3ZSYitwfU5w9uQOcSCYp+HYzHICJe6+t2UjmwMn6n9zm6QI
5MK/X6l3jAMTmRbbzcRxf/LqffHzBwfcm7Z18AkQyGTZLU0n+RH4Nycm7fY0
HXVEOTP/eo9A2++Co3ZddHTrcKLHgs8IcLyUdP48paMzu2veLewfAdsaZt/9
Tjqy3bj87aLDI3BZ9sWkcAcdvZp918t7ZAQ2aV3a1dRMR+xIn1aBuBHQ2uZo
P1FNRz+PHikWuz4C46K7PRLw/Kwbes5PiRyB5hHNc3eD6EiOP/mHeMAo3Ez8
KxfzwxJ5dXiVdkyOgrX/0DXnaEtUrS0c8jHgPeyqER0oHwWUqhOxkTPzHoze
25bJXbdA9a4tqlciP4DKZZMfOm7myJ/2REyLZwxGn0lFnmWbonCJcsXIpDGQ
joA28UATlFF2iG7INw5ZO0u9ZL8aI202y+/ZuXE4Y3L3+rMtG5GihVGVgvgE
0JZ/SY+uNkTZm2x/069MwAmhU4trZjYgOYa+97D6R1ALeXBo1lQf/Sz9TRnc
/gjCZZH8hkV6yF0i8dA+vU9wIKMwVKZPF0nemhBxqv4EwV+6FuvfXIUYrJXd
D9ZPwpov5KbgPC2kVSOfNto0CZWy8mPKB9XRi5rpgHdmXFDufRjml6iKLons
NpMFLjyKe7aqJ1IVefs2ibrRucBn1Rmm76+KvsqcfjC4mQvH73aGCzqpIuno
5bMDjlwYzRjSe0NTRV6WxglvffDnP5qNhhtU0L89Mbn/nObC/O18Zvq4MqrX
GPGTPMuF7OMaE99eKqPEWBuTHanYljus9tfi5089cVb/OS6ckDlo7ZysjIwv
3lDrv8wFpyjCOWilMkpw77jfd4cLSuSS+DgfJWRbrRUnXo6/z5DPNNuqhKSF
M5y23+fCkF5s1cI6JVTy2OXbyyouOPRqGl9eoKFu5THjl41cKEwXUv95jYYu
HrddKtaM49PwNGWcoSHP/gqGQysXMrN2be8IoaEviVGxvR1cOHxPoOmWBQ3V
MRjbRZ9yodm9buGaJg3FG1iqOnRxYbJAevK6GA3Znrs1ndHNhbRlDXtLZxWR
1NiSJz09XChZ+//n9/8B55XsAg==
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0N/gtbZ62jOsAhL/T/s+xhy+n35U5YAwG
h+13Tq9cw9inDpU/aV/lNGf9wWMGBxjA4IJ98uy69HkPTaHqL9trMoqbau63
OpAGBtfs9RzX5CQy2EP137QXMFAyt9ZwPHD2DAjcsa/sa+Y3MXWCmvfA3rbs
TnDGRCeo+of2F2a8ijEEykPMf2y/2/rDPVu4/if2WiGbzqUBzYfY98xeV1b9
kgrQfoh5L+wTDu06sgjoPoh5L+0fJ6zU2w90P8S81/Ziy5c4swL9BzHvjf2M
P831c4D+h5j3zn4L04mbScDwAQD+yY8P
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, -38.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 10], 
      Rational[9, 10]}, {-37.133554599141945`, -7.217487365999868}}, {{0.1, 
    0.9}, {-37.133554599141945`, -7.217487365999868}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.662194387515555*^9, 3.6621944056179953`*^9}, 
   3.662194536056725*^9, 3.662194595771397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g2", "[", "x_", "]"}], "=", "ect1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g2", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"x", "-", "\[Epsilon]"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"g2", "[", "y", "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "x"}], ")"}], "2"]], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"x", "+", "\[Epsilon]"}], ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"2", " ", 
    FractionBox[
     RowBox[{"g2", "[", "x", "]"}], 
     "\[Epsilon]"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LHS2", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["vals"], "\[Beta]"}], "//", "Sort"}], ")"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"], " ", "ect1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RHS2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["m1", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], "x"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m2", "2"], "-", 
        SuperscriptBox["\[Beta]", "2"]}], 
       RowBox[{"1", "-", "x"}]]}], ")"}], "ect1"}], "-", 
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"f2", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LP2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"LHS2", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"0", "+", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], ",", 
       RowBox[{"1", "-", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RP2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"RHS2", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "/", "20"}], ",", 
         RowBox[{"19", "/", "20"}], ",", 
         RowBox[{"1", "/", "20"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"LP2", ",", "RP2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.662079474721732*^9, 3.6620795095446243`*^9}, {
  3.662079767288875*^9, 3.6620797694799557`*^9}, {3.6620798928555326`*^9, 
  3.6620798934469347`*^9}, {3.6621941146219893`*^9, 3.662194115532833*^9}, {
  3.6621944429576883`*^9, 3.66219446005247*^9}, {3.662194542077203*^9, 
  3.662194545413522*^9}, {3.662194736834972*^9, 3.662194786828781*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCKy0f7gn9X6Gk4IDhL/T/uYjRbnLJsYOxmBw
2L7Md+vsa2IOUPmT9h8m5XkYBLk5MIDBBfslKbeYd93zgqq/bG+ws/FGd5mP
QxoYXLOf/I5lw3QPL6j+m/bXOPy01KxcHM6eAYE79qd2KqZsZjSDmvfAftY1
9UcRnDL7IOof2r/Z7RK0kdHsAMT8x/axbMzqGlYuByD6n9invSydOsvD6wDE
vmf2nEfFH3WU+RyAmPfCXiGjK2vvPa8DEPNe2t+YpKutF+QGNe+1vV+QutYN
MQeoeW/shf+f471qYgw175399oflE9OdFA4AABKMiWE=
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{
      Rational[1, 10], 
      Rational[9, 10]}, {-56.94164939141774, 56.941646048023436`}}, {{0.1, 
    0.9}, {-56.94164939141774, 56.941646048023436`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.662079513204937*^9, 3.662079772304048*^9, 
  3.662079896324936*^9, 3.6621792732005997`*^9, 3.662194656420578*^9, 
  3.6621947836596117`*^9, 3.662194848018223*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"g1", "[", "y", "]"}], "-", 
      RowBox[{"g1", "[", "x", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"y", "-", "x"}], ")"}], "2"]], "/.", 
    RowBox[{"x", "\[Rule]", "0.5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662193359165061*^9, 3.662193363206285*^9}, {
  3.662194498036467*^9, 3.662194510827915*^9}}],

Cell[BoxData["9.751477945249489`"], "Output",
 CellChangeTimes->{3.662193369153371*^9, 3.6621946618064537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"g1", "[", "y", "]"}], "-", 
     RowBox[{"g1", "[", "0.5", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "0.5"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "0.5", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
   RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}]], "Input",
 CellChangeTimes->{3.662194830962224*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(y\\)\
\[NoBreak] near \[NoBreak]\\!\\({y}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.9131611356658176`*^-58}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.579416699358141`*^99\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.626573084855552`*^99\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66219486362004*^9}],

Cell[BoxData["4.579416699358141`*^99"], "Output",
 CellChangeTimes->{3.6621948636915693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"g1", "[", "y", "]"}], "-", 
     RowBox[{"g1", "[", "0.5", "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y", "-", "0.5"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"g1", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
        RowBox[{"x", "\[Rule]", "0.5"}]}], ")"}]}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "0.5"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "0.5", ",", "1"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", 
   RowBox[{"Method", "\[Rule]", "PrincipalValue"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662193373286759*^9, 3.662193435942396*^9}, {
  3.662193903684663*^9, 3.662193926395286*^9}, {3.662193958020895*^9, 
  3.662194010569909*^9}, {3.662194062618108*^9, 3.662194087610551*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(y\\)\
\[NoBreak] near \[NoBreak]\\!\\({y}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.9131611356658176`*^-58}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.579416699358141`*^99\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.626573084855552`*^99\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662194026839566*^9, 3.6621941036775007`*^9}],

Cell[BoxData["4.579416699358141`*^99"], "Output",
 CellChangeTimes->{
  3.66219339082368*^9, {3.662193430306505*^9, 3.662193452044477*^9}, {
   3.662193942716115*^9, 3.662194026887246*^9}, 3.662194103686738*^9}]
}, Open  ]]
},
WindowSize->{1920, 1016},
WindowMargins->{{1, Automatic}, {Automatic, 11}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 8, 32, "Input"],
Cell[881, 30, 1052, 34, 49, "Input"],
Cell[1936, 66, 342, 8, 34, "Input"],
Cell[2281, 76, 4152, 80, 139, "Input"],
Cell[6436, 158, 232, 5, 32, "Input"],
Cell[6671, 165, 2009, 43, 41, "Input"],
Cell[8683, 210, 2084, 58, 134, "Input"],
Cell[10770, 270, 1090, 21, 34, "Input"],
Cell[11863, 293, 179, 4, 32, "Input"],
Cell[12045, 299, 415, 10, 34, "Input"],
Cell[12463, 311, 370, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[12858, 323, 1194, 21, 49, "Input"],
Cell[14055, 346, 2514, 39, 31, "Output"]
}, Open  ]],
Cell[16584, 388, 359, 7, 32, "Input"],
Cell[16946, 397, 731, 21, 34, "Input"],
Cell[CellGroupData[{
Cell[17702, 422, 1008, 26, 56, "Input"],
Cell[18713, 450, 101632, 1785, 253, "Output"]
}, Open  ]],
Cell[120360, 2238, 695, 17, 61, "Input"],
Cell[121058, 2257, 606, 17, 61, "Input"],
Cell[121667, 2276, 531, 16, 61, "Input"],
Cell[122201, 2294, 462, 15, 61, "Input"],
Cell[122666, 2311, 1295, 37, 106, "Input"],
Cell[123964, 2350, 1298, 37, 103, "Input"],
Cell[CellGroupData[{
Cell[125287, 2391, 1225, 36, 88, "Input"],
Cell[126515, 2429, 6812, 125, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133364, 2559, 3233, 100, 256, "Input"],
Cell[136600, 2661, 10636, 187, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147273, 2853, 567, 16, 67, "Input"],
Cell[147843, 2871, 111, 1, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147991, 2877, 503, 14, 67, "Input"],
Cell[148497, 2893, 794, 14, 60, "Message"],
Cell[149294, 2909, 93, 1, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149424, 2915, 953, 25, 67, "Input"],
Cell[150380, 2942, 819, 14, 60, "Message"],
Cell[151202, 2958, 211, 3, 39, "Output"]
}, Open  ]]
}
]
*)

